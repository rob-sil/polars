var searchIndex = new Map(JSON.parse('[["polars",{"t":"","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","StructChunked","__clone_box","_apply_fields","_can_fast_explode","_sum_as_f64","add","","","","","","","","","","","","add_to","agg_list","","","","","","","","all","all_kleene","amortized_iter","","amortized_iter_with_name","","any","any_kleene","append","apply","","","","","","apply_amortized","apply_amortized_generic","","apply_amortized_same_type","apply_as_ints","","apply_in_place","apply_into_string_amortized","apply_kernel","","","","apply_kernel_cast","","","","apply_mut","","","apply_nonnull_values_generic","apply_to_inner","","apply_to_slice","","","","","","apply_values","","","","","","apply_views","approx_n_unique","arg_sort","","","","","","arg_sort_multiple","","","","","arg_unique","","","","","arithmetic","as_array","as_binary","","as_list","as_ref","as_ref_dtype","as_string","","binary_zip_and_apply_amortized","bitand","","","bitor","","","bitxor","","","borrow","","borrow_mut","","boxed_metadata_dyn","builder","cast","","cast_and_apply_in_place","cast_unchecked","","","","","","","cast_with_options","","","","","","","","checked_div","checked_div_num","chunk_lengths","","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","concat_compact","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","","deref_mut","","div","","","","divide","drop","","","drop_nulls","dtype","equal","","","","","","","","","","equal_missing","","","","","","","","","","explode_and_offsets","","extend","field_by_name","fields_as_series","fill_null_with_values","","","filter","","","","first","first_non_null","float","fmt","","","","","","","for_each","for_each_amortized","","from","","","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_columns","from_iter","","","","","","","","","","","","","from_iter_options","","","","","from_iter_trusted_length","","","","","","","","","","","","from_iter_values","","","","","from_iterator_par","from_par_iter","","","","","","","","from_par_iter_with_dtype","from_series","from_slice","","","","","from_slice_options","","","","","from_trusted_len_iter_rev","","from_vec","from_vec_validity","full","","","","","","","","full_null","","","","","","","","","full_null_like","full_null_with_dtype","","get","get_any_value","","","","","","","","","get_any_value_unchecked","","","","","","","","","get_as_series","","get_distinct_count","get_fast_explode_list","get_flags","get_inner","","get_leaf_array","get_max_value","get_min_value","get_object","get_object_unchecked","get_row_encoded","get_row_encoded_array","get_unchecked","get_values_size","","","","group_tuples","","","","","","","","group_tuples_perfect","gt","","","","","","","gt_eq","","","","","","","has_nulls","head","init","","init_rand","inner_dtype","","interior_mut_metadata","into","","into_column","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","","","","","","","","into_no_null_iter","into_series","","into_time","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_validities","iterator","join_compact","last","last_non_null","layout","legacy_div","","legacy_div_scalar","","legacy_div_scalar_lhs","","len","","lhs_div","lhs_rem","lhs_sub","limit","lt","","","","","","","lt_eq","","","","","","","max","","max_binary","max_reduce","","","","mean","","median","","","median_reduce","","","merge_metadata","metadata","","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","","min_binary","min_max","min_reduce","","","","mmap_slice","","mul","","","","multiply","n_chunks","n_unique","","","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","","","","","","","","","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not","","not_equal","","","","","","","","","","not_equal_missing","","","","","","","","","","null_count","num_falses","num_trues","object","offsets","","ops","par_iter","","par_iter_indexed","","prod_reduce","prune_empty_chunks","quantile","","","quantile_reduce","","","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","rechunk_and_trim_to_normalized_offsets","rechunk_validity","ref_field","reinterpret_signed","","","","","","","","","","","reinterpret_unsigned","","","","","","","","","","","rem","","","","remainder","rename","reverse","","","","","","","","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","","","scatter_single","","","","scatter_with","","","","serialize","","","","","","","set","","","","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","","","","","","","","","shift_and_fill","","","","","","","","shrink_to_fit","slice","","sort","","","","","","sort_with","","","","","","split_at","","std","std_reduce","","","struct_fields","sub","","","","subtract","sum","","sum_reduce","","","tail","take","","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","","","","","","","","","","","","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","","to_ndarray","","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","","true_div_scalar","","true_div_scalar_lhs","","try_apply_amortized","try_apply_amortized_generic","","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_fields","try_apply_into_string_amortized","try_apply_nonnull_values_generic","try_from","","try_from_chunk_iter","try_into","","try_zip_and_apply_amortized","type_id","","unique","","","","","unnest","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","","","vec_hash","","","","","","","","","","","","","","","","vec_hash_combine","","","","","","","","","","","","","","","","vzip","","width","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_outer_validity","with_outer_validity_chunked","with_sorted_flag","wrapping_abs","","wrapping_add","","wrapping_add_scalar","","wrapping_floor_div","","wrapping_floor_div_scalar","","wrapping_floor_div_scalar_lhs","","wrapping_mod","","wrapping_mod_scalar","","wrapping_mod_scalar_lhs","","wrapping_mul","","wrapping_mul_scalar","","wrapping_neg","","wrapping_sub","","wrapping_sub_scalar","","wrapping_sub_scalar_lhs","","wrapping_trunc_div","","wrapping_trunc_div_scalar","","wrapping_trunc_div_scalar_lhs","","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_outer_validity","zip_with","","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","","","","append_array","append_empty","","append_iter","","append_null","","","","","","","","","","","","","append_opt_array","append_opt_series","","append_opt_slice","append_option","","append_series","","","","","","","","append_slice","append_trusted_len_iter","","append_value","","","","append_values_iter","","","append_values_iter_trusted_len","borrow","","","","","","","","","","","borrow_mut","","","","","","","","","","","builder","clone","","","","clone_into","","","","clone_to_uninit","","","","default","","deref","","","","","","","","","","","deref_mut","","","","","","","","","","","drop","","","","","","","","","","","fast_explode","","","","","field","","","","","finish","","","","","","","","","","fixed_size_list","from","","","","","","","","","","","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","","","","","","","","","","","inner_array","","","","","into","","","","","","","","","","","list","new","","","","","","","","","","","new_with_values_type","shrink_to_fit","","","","to_owned","","","","try_from","","","","","","","","","","","try_into","","","","","","","","","","","type_id","","","","","","","","","","","vzip","","","","","","","","","","","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","deserialize","drop","eq","equivalent","","","fmt","from","hash","init","into","serialize","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","borrow","","","borrow_mut","","","deref","","","deref_mut","","","drop","","","from","","","init","","","into","","","into_iter","","","new","","next","","","next_back","","","par","size_hint","","","try_from","","","try_into","","","type_id","","","vzip","","","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","","","","","all","","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","","","","","","borrow_mut","","","","","","","boxed_upcast","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","collect_cheap_metadata","complement","","contains","","default","","","","deref","","","","","","","","deref_mut","","","","","","","deserialize","difference","","disabled","distinct_count","","","distinct_count_opt","drop","","","","","","","empty","","enabled","eq","","experimental_enabled","extend","","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","","","","","","","","","","","","from","","","","","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","get_distinct_count","get_fast_explode_list","","get_flags","","","get_max_value","get_min_value","get_mut","get_sorted_flag","init","","","","","","","insert","","intersection","","intersects","","into","","","","","","","into_iter","","is_all","","is_empty","","","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","","iter_names","","log","logfile","max_value","","","max_value_opt","merge","min_value","","","min_value_opt","new","not","","read","remove","","serialize","set","","set_distinct_count","set_fast_explode_list","","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","","sorted","sorted_opt","sub","","sub_assign","","symmetric_difference","","take","to_owned","","","","","toggle","","try_from","","","","","","","try_into","","","","","","","try_read","try_write","type_id","","","","","","","union","","upcast","vzip","","","","","","","with_cheap_metadata","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","eq","equal","fmt","from","","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","","iter","","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","","to_owned","try_arr_from_iter","","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","","validity","value","value_unchecked","","values_iter","","vzip","with_validity","","with_validity_typed","ObjectChunkedBuilder","append_null","","append_option","append_value","","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","get_list_builder","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_list_builder","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkApproxNUnique","ChunkBytes","ChunkCast","ChunkCompareEq","ChunkCompareIneq","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","","Max","MaxBound","Mean","Min","MinBound","None","One","Reinterpret","SlicedArray","Some","SortMultipleOptions","SortOptions","Zero","__clone_box","","","_sum_as_f64","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","approx_n_unique","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","","","borrow_mut","","","cast","cast_unchecked","cast_with_options","clone","","","clone_into","","","clone_to_uninit","","","default","","deref","","","deref_mut","","","descending","","deserialize","","","drop","","","eq","","","equal","equal_missing","equivalent","","","","","","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","","","from","","","","","full","","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","","","init","","","into","","","is_elementwise","is_first_distinct","is_last_distinct","limit","","lt","lt_eq","maintain_order","","max","mean","median","min","min_max","multithreaded","","n_unique","new","","new_from_index","not_equal","not_equal_missing","nulls_last","","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","row_encode","scatter_single","scatter_with","search_sorted","serialize","","","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","","","try_from","","","try_into","","","type_id","","","unique","var","vzip","","","with_maintain_order","","with_multithreaded","","with_nulls_last","","with_nulls_last_multi","with_order_descending","","with_order_descending_multi","with_order_reversed","","zip","zip_with","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","deserialize","drop","eq","equivalent","","","fmt","from","hash","init","into","lower_bound_chunks","serialize","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","SlicedArray","SortMultipleOptions","SortOptions","descending","","limit","","maintain_order","","multithreaded","","nulls_last","","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","get_strftime_format","parse_fixed_offset","parse_time_zone","time_to_time64ns","validate_time_zone","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","get_strftime_format","Any","AnyValue","Array","","","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalOwned","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","","Date32","Date64","DateChunked","DateType","Datetime","","DatetimeChunked","DatetimeOwned","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Dimension","Duration","","","DurationChunked","DurationType","EMPTY","EMPTY_REF","Enum","","EnumOwned","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","Infer","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","ReshapeDimension","RevMapping","Second","Specified","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","","","StructOwned","StructType","Time","","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_can_fast_unique","_iter_struct_av","_materialize_struct_av","_with_fast_unique","add","","add_to","","","","","","","","","","","","","","","","append","","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","array_leaf_dtype","as_borrowed","as_date_iter","as_datetime_iter","as_ref","","","","","","as_ref_dtype","as_slice","as_str","as_time_iter","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","boxed","build_local","call_categorical_merge_operation","can_have_dtype","cast","","cast_leaf","cast_time_unit","","cast_with_options","","","","","","","categorical","checked_div","","","","","","","","","","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cmp","","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","","contains_categoricals","contains_dictionary","contains_objects","contains_views","create_enum_dtype","days","default","","","","","","","","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deserialize","","","","","","","","","","","","div","divide","","","","","","","","","","","","","drain_iter_and_finish","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dtype","","","","","","","","","","encode_hex","encode_hex_upper","enum_","eq","","","","","","","","","","","","","eq_missing","equal","","","equal_missing","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","field","find","finish","","","fmt","","","","","","","","","","","","","","","","","","","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_arrow","from_cats_and_dtype_unchecked","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_iter","","","","","","","","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_static","from_str","from_string","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","","get","","","","get_any_value","","","","","","","get_any_value_unchecked","","","","","","","get_categories","get_dtype","","","","","","","","","","","","","","","","","","","","","","","","","","get_optional","get_or_infer","get_or_infer_with","get_rev_map","get_shape","get_str","get_unchecked","","gt","","","gt_eq","","","hash","","","","","","","","","hash_impl","hour","hours","idx","implode","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner_dtype","","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_column","","into_iter","into_scalar","into_series","","","","","","into_static","into_string","is_array","is_binary","is_bool","is_boolean","is_categorical","is_date","is_decimal","is_empty","is_enum","","is_float","","is_global","is_integer","","is_known","is_list","is_local","is_logical","is_nan","is_nested","","is_nested_null","","is_null","","is_numeric","","","is_object","is_ord","is_primitive","is_signed_integer","","is_string","is_struct","is_supported_list_arithmetic_input","is_temporal","is_unsigned_integer","","is_view","iter","iter_str","last","leaf_dtype","len","","lit","lt","","","lt_eq","","","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","materialize_unknown","max","max_reduce","merge_dtypes","merge_map","microseconds","milliseconds","min","min_reduce","minute","minutes","mul","multiply","","","","","","","","","","","","","n_unique","name","","","nanosecond","nanoseconds","new","","","","","","","","","","","","","","","new_dimension","new_logical","newest","next","not_equal","","","not_equal_missing","","","null_count","oldest","parse_from_str_slice","","partial_cmp","","","","physical","","precision","register_value","remainder","","","","","","","","","","","","","round","","same_src","scale","second","seconds","serialize","","","","","","","","","","","","","","set_name","set_time_unit","","set_time_unit_and_time_zone","set_time_zone","size_hint","sort","sort_with","str_value","strftime","","","strict_cast","sub","subtract","","","","","","","","","","","","","time_unit","","time_zone","to_arrow","","","","to_arrow_field","to_ascii","to_enum","to_fixed_size_list","to_global","to_local","to_logical_type","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_scale","to_string","","","","","","","","","tot_eq","truncate","","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_strict_cast","try_to_arrow","try_to_compact_string","","","","","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","underlying_physical_type","unique","uses_lexical_ordering","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","with_capacity","","with_validity_typed","write_char","write_fmt","write_str","zero_sum","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","EnumChunkedBuilder","append_enum","append_null","append_str","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","eager","lazy","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_error_source","as_ref","borrow","","","borrow_mut","","","constants","context","context_trace","deref","","","","deref_mut","","","drop","","","feature_gated","fmt","","","","","from","","","","","","","","","","","get_warning_function","init","","","into","","","map_err","new_static","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","","try_from","","","try_into","","","try_to_compact_string","","type_id","","","vzip","","","wrap_msg","error","","msg","","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","","","_add_columns","_add_series","_apply_columns","_apply_columns_par","_filter_seq","_new_no_checks_impl","_select_impl","_select_impl_unchecked","_select_with_schema_impl","_slice_and_realloc","_to_metadata","align_chunks","align_chunks_par","append_record_batch","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","","","","","borrow_mut","","","","","chunk_lengths","clear","clear_columns","clone","","","clone_into","","","clone_to_uninit","","","column","","column_extend_unchecked","columns","default","","deref","","","","","deref_mut","","","","","deserialize","","drop","","","","","","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","","equals","equals_missing","equivalent","","","estimated_size","explode","","explode_impl","extend","fields","fill_null","filter","first_col_n_chunks","fmt","","","","from","","","","","from_iter","","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_column_names_str","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","","","","","","","","init","","","","","insert_column","into","","","","","into_iter","","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","","iter_chunks_physical","lazy","len","materialized_column_iter","max_horizontal","max_n_chunks","mean_horizontal","min_horizontal","n_chunks","new","new_no_checks","new_no_checks_height_from_first","new_no_length_checks","new_with_broadcast","new_with_broadcast_len","new_with_broadcast_no_namecheck","next","","null_count","par_materialized_column_iter","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","rechunk_mut","rechunk_to_record_batch","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_columns","select_physical","select_with_schema","select_with_schema_unchecked","serialize","","set_column_names","set_height","shape","shift","should_rechunk","shrink_to_fit","size","size_hint","","slice","","slice_par","sort","sort_in_place","split_at","","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_chunked_unchecked","take_columns","take_opt_chunked_unchecked","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","","","to_string","transpose","transpose_impl","try_apply","try_apply_at_idx","try_extend","","try_from","","","","","","","try_from_rows_iter_and_schema","try_get_column_index","try_into","","","","","try_to_compact_string","type_id","","","","","unique","unique_impl","unique_stable","unnest","upsample","upsample_stable","vstack","vstack_mut","vstack_mut_unchecked","vzip","","","","","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","Column","IntoColumn","Partitioned","Scalar","ScalarColumn","Series","__clone_box","","add","","","","agg_first","agg_last","agg_list","agg_max","agg_mean","agg_median","agg_min","agg_n_unique","agg_quantile","agg_std","agg_sum","agg_valid_count","agg_var","and_reduce","append","apply_binary_elementwise","apply_broadcasting_binary_elementwise","apply_unary_elementwise","approx_n_unique","arg_sort","array","as_list","as_materialized_series","","as_partitioned_column","as_scalar_column","as_series","as_single_value_series","binary","binary_offset","bit_repr","bitand","","","bitor","","","bitxor","","","bool","borrow","","borrow_mut","","cast","","cast_unchecked","","cast_with_options","","categorical","clear","clone","","clone_into","","clone_to_uninit","","date","datetime","decimal","default","deref","","deref_mut","","deserialize","div","","","","divide","drop","","drop_nulls","","dtype","","duration","eq","equal","equal_missing","equals","equals_missing","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","","from","","","","","from_single_value_series","full_null","gather_every","get","get_flags","get_metadata","get_object","get_unchecked","gt","gt_eq","has_nulls","","head","i16","i32","i64","i8","idx","implode","init","","into","","into_column","","","into_frame","into_materialized_series","into_nulls","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_sorted_flag","lazy_as_materialized_series","len","","list","lt","lt_eq","map_scalar","map_unary_elementwise_to_bool","max_reduce","mean_reduce","median_reduce","min_reduce","mul","","","","n_chunks","n_unique","name","","new","","new_empty","","new_from_index","new_partitioned","new_scalar","not_equal","not_equal_missing","null_count","or_reduce","phys_iter","product","quantile_reduce","rechunk","rem","","","","rename","","reshape_array","reshape_list","resize","reverse","sample_frac","sample_n","scalar","serialize","set_sorted_flag","shift","shrink_to_fit","shuffle","slice","sort","sort_with","split_at","std_reduce","str","strict_cast","","struct_","sub","","","","sum_reduce","tail","take","take_chunked_unchecked","take_materialized_series","","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","to_owned","","to_physical_repr","to_series","try_add_owned","try_apply_binary_elementwise","try_apply_broadcasting_binary_elementwise","try_apply_unary_elementwise","try_array","try_binary","try_binary_offset","try_bool","try_categorical","try_date","try_datetime","try_decimal","try_duration","try_f32","try_f64","try_from","","try_i16","try_i32","try_i64","try_i8","try_idx","try_into","","try_list","try_map_unary_elementwise_to_bool","try_mul_owned","try_str","try_struct","try_sub_owned","try_u16","try_u32","try_u64","try_u8","type_id","","u16","u32","u64","u8","unique","unique_stable","unit_scalar_from_series","var_reduce","vec_hash","vec_hash_combine","vzip","","with_name","wrapping_trunc_div_scalar","xor_reduce","zip_with","zip_with_same_type","UnpivotArgsIR","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","deserialize","drop","eq","equivalent","","","fmt","from","hash","index","init","into","on","serialize","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","","SlicedGroups","Std","Sum","Var","__clone_box","","","","agg_list","aggregations","all","apply","as_list_chunked","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","count","default","","deref","","","","","","","","","deref_mut","","","","","","","","df","drive_unindexed","drop","","","","","","","","","eq","","equivalent","","","","","","expr","first","","","first_mut","fmt","","","","","fmt_group_by_column","from","","","","","","","","","","","","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","groups","idx_mut","init","","","","","","","","into","","","","","","","","into_idx","into_iter","","","into_par_iter","","","is_empty","","is_sorted_flag","iter","","keys","keys_sliced","last","len","","max","mean","median","min","n_unique","new","","next","nth","par_apply","par_iter","","quantile","select","slice","sort","","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","","","","to_string","try_from","","","","","","","","try_into","","","","","","","","try_to_compact_string","type_id","","","","","","","","unroll","unwrap_idx","unwrap_slice","var","vzip","","","","","","","","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","","AnyValueBuffer","AnyValueBufferTrusted","Boolean","","Date","Datetime","Duration","Float32","","Float64","","Int16","","Int32","","Int64","","Int8","","Null","","Row","String","","Struct","Time","UInt16","","UInt32","","UInt64","","UInt8","","__clone_box","","","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","coerce_dtype","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","","fmt","from","","","","","infer_schema","init","","","into","","","into_series","","new","","","reset","","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","","","try_from","","","try_into","","","type_id","","","vzip","","","concat_df_diagonal","concat_df_horizontal","Abs","Add","Agg","AggExpr","AggGroups","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","Any","","","","AnyHorizontal","AnyValue","ApproxNUnique","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","","","","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","","BackwardFill","Base64Encode","BaseUtcOffset","BatchedCsvReader","BatchedParquetReader","Binary","","","","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","","","","","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","","Bounds","BoundsIter","Brotli","BrotliLevel","Bytes","","C","CLUSTER_WITH_COLUMNS","COLLAPSE_JOINS","COMM_SUBEXPR_ELIM","COMM_SUBPLAN_ELIM","Cache","Cast","CastTimeUnit","CatIter","Categorical","","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalFunction","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalOwned","CategoricalType","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkApproxNUnique","ChunkBytes","ChunkCast","ChunkCompareEq","ChunkCompareIneq","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","CoalesceColumns","Column","","ColumnBinaryUdf","ColumnNotFound","Columns","","ColumnsUdf","Combine","CommentPrefix","CompatLevel","ComputeError","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Context","ConvertTimeZone","Count","","CountMatches","Cross","CrossJoin","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","","DataType","","Date","","","","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","","","DatetimeArgs","DatetimeChunked","DatetimeFunction","DatetimeMethods","DatetimeOwned","DatetimeType","Day","Decimal","","","","Decimal256","DecimalChunked","DecimalType","Dense","Deserialized","","Dictionary","Diff","Dimension","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","","","","","","DurationArgs","DurationChunked","DurationMethods","DurationType","DynamicGroupOptions","EAGER","Earliest","EndsWith","Enum","","EnumOwned","Eq","EqValidity","Equiprobable","","Err","EscapeRegex","Exclude","Excluded","ExclusiveOr","Explode","","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","Extract","ExtractAll","ExtractGroups","FAST_PROJECTION","FILE_CACHING","FLOAT_RE","FLOAT_RE_DECIMAL","FalseT","Field","","FieldByIndex","FieldByName","FieldRef","FieldsMapper","FieldsNameMapper","FileMetadata","FileMetadataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","","Find","First","","","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","","Float16","Float32","","","","Float32Chunked","Float32Type","Float64","","","","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","Full","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","Generic","GetAnyValue","GetCategories","GetOutput","Global","GlobalRevMapMerger","GroupBy","","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","","GtEq","","Gzip","GzipLevel","HConcat","HStack","HasViews","HashMap","","Head","HexEncode","Higher","","Hour","IDX_DTYPE","IEJoin","IEJoinOptions","INTEGER_RE","IO","IR","IS_ARROW","Idx","","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","","InProcessQuery","IndexColumn","IndexOrder","IndexToUsize","InequalityOperator","Infer","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int","","Int128Chunked","Int128Type","Int16","","","","Int16Chunked","Int16Type","Int32","","","","Int32Chunked","Int32Type","Int64","","","","Int64Chunked","Int64Type","Int8","","","","Int8Chunked","Int8Type","Interpolate","InterpolateBy","InterpolationMethod","Intersect","Interval","IntoColumn","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoScalar","IntoSeries","IntoVec","InvalidOperation","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","","IsIn","IsInfinite","IsLastDistinct","","IsLeapYear","IsNan","IsNested","IsNotNan","IsNotNull","IsNull","IsObject","IsStruct","IsoYear","Item","","Join","","JoinArgs","JoinBuilder","JoinCoalesce","JoinDispatch","JoinOptions","JoinSpecific","JoinType","JoinValidation","Json","JsonEncode","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepColumns","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","","","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","LazySerde","Left","","","","","","LeftJoinIds","Len","LenBytes","LenChars","Lexical","LhsNumOps","Linear","","","List","","","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","","LowerBound","Lowercase","Lt","","LtEq","","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","","","","MaxBound","MaxHorizontal","Mean","","","MeanHorizontal","Median","","Microsecond","","Microseconds","Midpoint","","Millennium","Millisecond","","Milliseconds","Min","","","","MinBound","MinHorizontal","Minus","Minute","Mode","Modulus","Monday","Month","Multi","MultipleFields","Multiply","NEW_STREAMING","NULL","NUnique","","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","","Nanoseconds","Native","Nearest","","","","Necessary","Negate","NestedType","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","","","","","Not","NotEq","NotEqValidity","Nth","Null","","","","","","","NullCount","NullValues","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","Ok","One","OneToMany","OneToOne","OpaqueColumnUdf","Operator","OptFlags","Or","Ordinal","OrdinalDay","OtherScalar","Out","OutOfBounds","Output","Over","OwnedBatchedCsvReader","OwnedObject","OwnedPhysical","POLARS_TEMP_DIR_BASE_PATH","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ParallelStrategy","ParquetAsyncReader","ParquetCompression","ParquetOptions","ParquetReader","ParquetStatistics","ParquetWriteOptions","ParquetWriter","Partitioned","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","Plus","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PowFunction","Prefiltered","PrefixFields","PrimitiveChunkedBuilder","Quantile","","","QuantileAggSeries","QuantileInterpolOptions","QuantileMethod","Quarter","QuoteStyle","ROW_ESTIMATE","Raise","","Random","","Range","","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","Repeat","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","ReshapeDimension","RevMapping","Reverse","","Right","","","","","","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","RollingFnParams","RollingGroupOptions","RollingOptionsDynamicWindow","RollingOptionsFixedWindow","RollingQuantileParams","RollingSeries","RollingVarParams","Root","Round","","RoundSF","RoundSeries","RowGroupIterColumns","RowGroups","SIMPLIFY_EXPR","SLICE_PUSHDOWN","SQLInterface","SQLSyntax","STREAMING","Saturday","Scalar","","","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaExt","SchemaFieldNotFound","SchemaMismatch","SchemaNamesAndDtypes","SchemaRef","SearchSortedSide","Second","","Select","Selector","","Semi","SerReader","SerWriter","SerializeOptions","Series","","","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesSealed","SeriesTrait","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","","","","","SlicedArray","SlicedGroups","Snappy","Some","Sort","","SortBy","SortMultipleOptions","SortOptions","SpecialEq","Specified","Split","SplitExact","SplitN","SplitNChars","Sqrt","StartBy","StartsWith","StaticArray","StatisticsOptions","Std","","Str","StrCat","String","","","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringFunction","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","Struct","","","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructFunction","StructNameSpace","StructOwned","StructType","Sub","SubPlan","SuffixFields","Sum","","SumHorizontal","Sunday","TYPE_COERCION","Tail","TakeChunked","TakeChunkedHorPar","TemporalExpr","TemporalFunction","TemporalMethods","Ternary","Then","Thursday","Time","","","","Time32","Time64","TimeChunked","TimeMethods","TimeStamp","TimeType","TimeUnit","TimeZone","Timestamp","Titlecase","ToDecimal","ToDummies","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrueDivOut","TrueDivPolarsType","TrueDivide","TrueT","Truncate","Tuesday","UInt16","","","","UInt16Chunked","UInt16Type","UInt32","","","","UInt32Chunked","UInt32Type","UInt64","","","","UInt64Chunked","UInt64Type","UInt8","","","","UInt8Chunked","UInt8Type","URL_ENCODE_CHAR_SET","UdfSchema","Uncompressed","Union","","UnionArgs","Unique","UniqueCounts","UniqueKeepStrategy","Unknown","","UnknownKind","UnpivotArgsDSL","UnpivotArgsIR","UpperBound","Uppercase","UserDefinedFunction","Utf8","","Utf8View","ValueCounts","ValueIterT","ValueT","Var","","","VarAggSeries","VecHash","Wednesday","Week","WeekDay","When","Wildcard","Window","","WindowBound","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","Year","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_coalesce_full_join","_collect_post_opt","_create_left_df_from_slice","_csv_read_internal","_finish_anti_semi_join","_full_join_from_series","_internal","_join_suffix_name","_rename_fields_impl","_semi_anti_join_from_series","_split_at_unchecked","_sum_as_f64","","_take_chunked_unchecked_hor_par","_take_opt_chunked_unchecked_hor_par","_to_dummies","_with_eager","_with_predicate","abs","","add","","","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","","","all_horizontal","allocator","allow_missing_columns","allow_parallel","","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","and_reduce","anonymous_scan","anti_join","any","any_horizontal","append","append_null","","append_opt_series","append_option","append_series","append_value","apply","","","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_projection","apply_to_slice","apply_values","approx_n_unique","","","arange","arced","arg_max","","","","arg_min","","","","arg_sort","","","arg_sort_by","arg_sort_multiple","arg_unique","","","arg_where","args","","arity","arr","arr_from_iter","","","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","","","array","arrow_schema","as_any","","","","as_any_mut","","as_any_provider","as_any_value","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_downcasting","as_error_source","as_fd","as_list","as_ptr","as_raw_fd","as_ref","","as_ref_dtype","as_series","as_single_ptr","as_slice","as_string","as_struct","as_time","assume_init","","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","","","","","","batched_borrowed","binary","","binary_expr","bitand","","bitand_assign","bitor","bitor_assign","bits","","bitxor","","bitxor_assign","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bottom_k","bound_key","boxed","boxed_metadata","buffer","builder","byte_source","cache","","","","call","","","","call_categorical_merge_operation","call_udf","","call_unchecked","cancel","cast","","","","","","cast_all","cast_unchecked","cast_with_options","","","cat","","cause","cbrt","ceil","","center","century","check_bound","checked_div","","checked_div_num","chunk_lengths","chunk_size","chunkedarray","chunks","chunks_mut","clip","","clip_max","","clip_min","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_inner","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_span","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","closed_window","","","cloud","cloud_options","","","","","cmp","","coalesce","","","","coalesce_columns","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","collect_schema","cols","column_order","column_orders","columns","columns_to_dummies","columns_to_projection","comment_prefix","compare","","compile","complement","compression","","","compute_schema","concat","","concat_arr","","concat_expr","concat_impl","","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","","","","","contains_chunked","","contains_literal","convert_inner_type","convert_to_unsigned_index","copy","copy_if_not_exists","count","","","count_matches","count_matches_many","count_ones","count_rows","","count_rows_from_slice","count_zeros","create_enum_dtype","create_left_df_chunked","create_sorting_map","created_by","cross_join","","cross_join_dfs","cum_count","","cum_fold_exprs","cum_max","","cum_min","","cum_prod","","cum_reduce_exprs","cum_sum","","cumulative_eval","current_span","data","data_page_size","datatypes","date_format","date_ranges","datetime","","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","","","","days","","","days_only","ddof","","decimal_comma","decrement_strong_count","decrement_strong_count_in","default","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","default_arrays","default_join_ids","delete","delete_stream","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","descending","","","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","deserialize","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","df","","diagonal","diff","","","difference","display","distinct_count","","div","","divide","dot","downcast","downcast_raw","downcast_unchecked","downgrade","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","drop_nans","drop_no_validate","drop_nulls","","","drop_span","dst_offset","dt","","dtype","","","","","","","dtype_col","dtype_cols","dtype_overwrite","duration","empty","","enabled","encode_hex","encode_hex_upper","encoding","ends_with","ends_with_chunked","ensure_duration_matches_dtype","ensure_is_constant_duration","ensure_matching_schema","ensure_sorted_arg","enter","eol_char","eq","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eq_missing","equal","equal_missing","equivalentescape_regex","escape_regex_str","eval","event","event_enabled","every","exact","exclude","exclude_dtype","execute","exit","expand_paths","expand_paths_hive","expanded_from_single_directory","explain","explode","","","","explode_and_offsets","expr","extend","extend_constant","extract","","extract_all","extract_all_many","extract_groups","fast_explode","fetch","","fetch_blocking","field","","field_by_index","field_by_name","field_by_names","fields","fields_to_cast","fill_nan","","fill_null","","","fill_null_with_strategy","fill_null_with_values","filter","","","","find","find_chunked","find_literal","finish","","","","","","","","","","","","","","","","","","","","","finish_no_glob","","","finish_with_scan_ops","finishes_this_batch","first","","","","","fixed_size_list","flatten","float_precision","float_scientific","float_sorted_arg_max","float_type","floor","","floor_div","floor_div_series","flush","","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fmt_group_by_column","fmt_str","fn_params","","fold_exprs","force_parallel","","format","format_str","forward_fill","fromfrom_arrow_schema","from_bits","from_bits_retain","","from_bits_truncate","from_data_default","from_data_unchecked_default","","from_iter","","","","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","","from_iter_utf8_trusted_len","from_iter_values","from_name","from_par_iter","","from_partitioned_ds","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","","from_type","from_uri","","from_vec","","from_zeroable_vec","full","","","","full_join","","full_null","","","fun","function_expr","function_with_options","gather","","gather_every","ge","get","","","","","","get_any_value","","get_any_value_unchecked","","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","","","get_fields","get_fields_lens","get_glob_start_idx","get_metadata","","","get_mut","get_mut_unchecked","get_object","get_object_chunked_unchecked","get_opts","get_overlapping_bounds_iter","get_parse_options","get_range","get_ranges","get_reader_bytes","get_schema","get_strftime_format","get_unchecked","","","glob","","","group_by","group_by_dynamic","","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","","","gt_eq","","has_header","has_nulls","hash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hash_join_inner","hash_join_outer","hash_join_semi_anti","head","","","","hex_decode","hex_encode","hive_options","","hor_str_concat","hour","","","","hours","","how","","idx","ignore_errors","impl_duration","impl_replace_time_zone","impl_replace_time_zone_fast","implode","in_nanoseconds_window","include_bom","","include_boundaries","include_file_paths","","include_header","","increment_strong_count","increment_strong_count_in","index","","index_cols","index_column","","indexes_to_usizes","infer_file_schema","infer_schema_len","","infer_schema_length","","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner","inner_array","inner_join","","inner_mut","input_fields","insert","int_range","int_ranges","interpolate","","","interpolate_by","","","intersection","intersects","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_column","","","into_data","into_inner","","into_iter","","","","","","into_list_name_space","","into_raw","into_raw_with_allocator","into_reader_with_file_handle","into_scalar","into_series","","","into_vec","","is_all","is_arithmetic","is_asof","is_between","","is_cloud_url","is_comparison","is_constant_duration","is_cross","is_empty","","","is_finished","is_finite","is_first_distinct","","","is_full","is_full_days","is_ie","is_in","","is_infinite","is_last_distinct","","","is_leap_year","","","is_nan","","is_not_nan","is_not_null","","","is_null","","","","","is_null_idx","is_nullable","is_positive_idx_uncertain","is_positive_idx_uncertain_col","is_read_vectored","is_scalar","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_valid_join","is_write_vectored","is_zero","iso_year","","","iter","","","","iter_fields","iter_names","iter_names_and_dtypes","join","","","","join_asof_by","join_builder","join_literal","join_many","join_nulls","","join_where","json_encode","keep","key_value_metadata","","label","last","","","","","","lazy","","le","leading_ones","leading_zeros","left_by","left_join","","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","","","","","limit","","","","line_terminator","list","","list_with_delimiter","list_with_offset","lit","","","","","","load","load_any","load_bound","load_buffer","load_data","logical_and","logical_or","logical_plan","","low_memory","","","","","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","","","lt_eq","","maintain_order","","","","","","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","","","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","","map_dtypes","map_expr","map_field","map_fields","","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_parse_options","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","","materialize_empty_df","materialize_projection","materialize_unknown_dtypes","max","","","","","","max_level_hint","max_reduce","","max_row_group_height","max_value","","mean","","","","","","median","","","","","","","median_reduce","","memory_mapped","merge_dtypes","metadata","","method","","microsecond","microseconds","","millennium","milliseconds","","min","","","","","","min_max","min_periods","","","min_reduce","","min_value","","minute","","","","minutes","","missing_is_null","mode","","month","","","","months","months_only","mul","","","multiply","multithreaded","","n_chunks","n_rows","","","","","","","","n_threads","","n_unique","","","","","name","","","","","","nan_max","nan_min","nan_propagating_aggregate","nanosecond","","","nanoseconds","","","ne","needs_checks","neg","","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_cyclic","new_cyclic_in","new_empty","new_from_index","","new_from_str","new_in","new_int_range","new_multi","new_null","new_paths","","new_single","new_span","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_with_sources","","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","","next_batch","next_batches","","","nodes","nodes_owned","not","","","not_equal","not_equal_missing","nth","null","","","","null_count","","","","","null_values","nulls_last","","num_rows","","","offset","","","offsets","on","","","operator1","operator2","optimize","options","or","or_reduce","ordinal","","ordinal_day","ordinal_year","otherwise","","output_schema","over","over_with_options","overwrite_schema","parallel","","","parse","parse_from_str_slice","","","parse_options","parsed_int","partial_cmp","","path","period","","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","prefix","prefix_fields","prepare_cloud_plan","private_left_join_multiple_keys","prob","prod_reduce","product","profile","projection","propagate_nulls","provide","ptr_eq","put","put_multipart","put_multipart_opts","put_opts","quantile","","","","quantile_reduce","","quarter","","","queue","quote_char","","quote_style","raise_if_empty","rank","","read","read_buf","read_exact","read_parallel","","read_to_end","read_to_string","read_varint","read_vectored","rechunk","","","","","","","","rechunk_validity","record","record_follows_from","reduce_exprs","register_callsite","reinterpret_signed","reinterpret_unsigned","rem","","remainder","remove","remove_bom","rename","","","rename_fields","rename_if_not_exists","repeat","repeat_by","","replace","","","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_or_default","replace_strict","","replace_time_zone","reshape","resolve_homedir","return_type","reverse","","","","","","right_by","right_on","rolling","","","rolling_map","","","rolling_map_float","rolling_max","","rolling_max_by","","rolling_mean","","rolling_mean_by","","rolling_median","rolling_median_by","rolling_min","","rolling_min_by","","rolling_quantile","","rolling_quantile_by","","rolling_std","","rolling_std_by","","rolling_sum","","rolling_sum_by","","rolling_var","","rolling_var_by","","round","","","round_ms","round_ns","round_sig_figs","","round_us","row_encode","row_group_size","row_groups","row_index","","","","","","","rows_left","rows_right","same_type","","sample_frac","sample_n","scan","scan_ipc","scan_ipc_files","scan_ipc_sources","scan_parquet","scan_parquet_files","scan_parquet_sources","scatter","scatter_single","scatter_with","schema","","","","","","","","","","","","schema_descr","schema_inference","schema_only","schema_overwrite","schema_with_arenas","search_sorted","second","","","","seconds","","seek","select","select_seq","semi_join","separator","","serialize","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","serialize_options","series","set","","set_cached_arena","set_low_memory","set_metadata","set_parallel","set_rechunk","","","","","","set_sorted_flag","set_validity","shift","","","","","","shift_and_fill","","","should_coalesce","shrink_dtype","shrink_to_fit","","shuffle","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","size_bytes","skip_rows","","","skip_rows_after_header","slice","","","","","","","slice_typed","","slice_typed_unchecked","","slice_unchecked","","sliced","sliced_unchecked","sort","","","","","","sort_by","sort_by_exprs","sort_with","","source","sources","","","spawn_local_obj","spawn_obj","split","split_at","split_at_boxed","split_at_boxed_unchecked","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","","starts_with_chunked","","statistics","status","status_local","std","","","","","","std_reduce","","store","str","str_escape_regex","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","strftime","strict","strict_cast","strings","strip_chars","","strip_chars_end","","strip_chars_start","","strip_prefix","","strip_suffix","","strong_count","struct_","sub","","","","sub_assign","subtract","suffix","","","","suffix_fields","sum","","","","","","sum_reduce","","super_type","swap_operands","symmetric_difference","sync_update","tail","","","","take","","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","","take_validity","ternary_expr","then","","time_format","time_ranges","time_unit","","time_zone","timestamp","to_alp","","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dummies","","to_field","to_integer","to_list","to_lowercase","","to_opt","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_string","","","","","","","","","","","","","","to_supertype","to_supertypes","to_titlecase","to_uppercase","","to_writer","","toggle","tolerance","tolerance_str","top_k","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","trailing_ones","trailing_zeros","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","","truncate_ns","","truncate_ragged_lines","truncate_us","","try_arr_from_iter","","","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","","","try_close","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_from_thrift","try_get_field","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into_reader_with_file_path","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_map_to_array_inner_dtype","try_negative_to_usize","try_new","","","","","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_parse","try_parse_dates","try_parse_interval","try_pin","try_pin_in","try_serialize","","","try_set_sorted_flag","try_to_compact_string","","","","","","","","","","","","","try_unwrap","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","type_name","udf","union","unique","","","","","","unique_counts","","unique_generic","unique_stable","","","","unique_stable_generic","unnest","unwrap","unwrap_or_clone","update","update_with_inference_result","upper_bound","upsample","upsample_stable","use_statistics","","","","utf8","validate","validation","validity","","value","","value_counts","","value_name","","value_unchecked","values","values_iter","","var","","","","","","var_reduce","","variable_name","","vec_hash","vec_hash_combine","version","view","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weak_count","week","","","weekday","","","weeks","","weeks_only","weights","when","","","window_size","","","with","with_ambiguous","with_arrow_schema_projection","","with_batch_size","","","with_cache","with_capacity","","with_chunk_size","","","with_cloud_options","","with_cluster_with_columns","with_coalesce","with_collapse_joins","with_column","with_columns","","","","","","with_columns_seq","with_comment_prefix","","with_compat_level","","with_compression","","","","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_decimal_comma","","with_dtype","with_dtype_overwrite","","with_encoding","","with_eol_char","","with_extension","with_fields","with_float_precision","with_float_scientific","with_fractional_seconds","with_glob","with_has_header","","with_hive_partition_columns","","","with_hms","","with_hour","with_hours","with_ignore_errors","","","","","with_include_file_path","","","with_include_file_paths","","with_infer_schema_length","","","with_json_format","","with_line_terminator","with_low_memory","","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","","with_month","with_n_rows","","","","","","","","","with_n_threads","","with_nanoseconds","with_null_value","with_null_values","","with_optimizations","with_parallel","with_parse_options","with_path","","with_paths","with_predicate","","","","with_predicate_pushdown","with_projection","","","","","","","","with_projection_pushdown","with_quote_char","","","with_quote_style","with_raise_if_empty","","with_rechunk","","","","","with_row_estimate","with_row_group_size","with_row_index","","","","","","","","","","","","","with_row_limit","with_same_dtype","with_schema","","","","","with_schema_modify","with_schema_overwrite","","","","with_second","with_seconds","with_separator","","","with_simplify_expr","with_skip_rows","","with_skip_rows_after_header","","with_slice","","with_slice_pushdown","with_sources","","","with_statistics","with_suffix","with_time_format","with_time_unit","with_time_zone","with_truncate_ragged_lines","","with_try_parse_dates","","with_type_coercion","with_validity","","with_validity_typed","","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_all","write_df_to_file","","write_partitioned_dataset","write_to","write_to_parts","write_to_string","write_varint","write_vectored","writeable_cmp_bytes","writeable_length_hint","xor","xor_reduce","year","","","","zip","zip_with","expr","input","","method","propagate_nans","","quantile","closed","ignore_nulls","","aggs","apply","args","by_column","cached_ir","contexts","df","dsl","expr","exprs","file_info","file_options","function","id","input","","","","","","","","","","","input_left","input_right","inputs","","keys","left_on","len","maintain_order","node","offset","options","","","","","","payload","predicate","predicates","right_on","scan_type","schema","slice","sort_options","sources","version","by","","dtype","expr","","","","","falsy","function","","","","idx","input","","","","left","length","offset","op","options","","","","","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","decimals","digits","has_max","has_min","limit","","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","","","","","seed","","sort","include_nulls","groups","rolling","dtype","high","low","error","","msg","","delimiter","","dtype","ignore_nulls","","inclusive","literal","","","n","","pat","strict","","time_unit","time_zone","AllColumns","AllColumnsSingle","Columns","CountLines","NullValuesCompiled","__clone_box","borrow","","borrow_mut","","cast_columns","clone","clone_into","clone_to_uninit","count","deref","","deref_mut","","drop","","find_next","find_starting_point","fmt","from","","init","","into","","new","prepare_csv_schema","read_chunk","to_owned","try_from","","try_into","","type_id","","validate_utf8","vzip","","Auto","Post","Pre","PrefilterMaskSetting","borrow","borrow_mut","calc_prefilter_cost","deref","deref_mut","drop","ensure_matching_dtypes_if_found","from","init","init_from_env","into","read_this_row_group","should_prefilter","to_deserializer","try_from","try_into","type_id","vzip","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","size_bytes","starts_with","try_from","try_into","type_id","vzip","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","","","","borrow_mut","","","","deref","","","","deref_mut","","","","drop","","","","dtype","from","","","","init","","","","init_buffers","into","","","","into_series","try_from","","","","try_into","","","","type_id","","","","validate_utf8","vzip","","","","buf","time_unit","time_zone","ByteSource","Cloud","DynByteSource","DynByteSourceBuilder","MemSlice","MemSliceByteSource","Mmap","ObjectStore","ObjectStoreByteSource","__clone_box","borrow","","","","borrow_mut","","","","clone","clone_into","clone_to_uninit","default","deref","","","","deref_mut","","","","drop","","","","fmt","from","","","","","","","get_range","","","","get_ranges","","","","get_size","","","","init","","","","into","","","","to_owned","try_build_from_path","try_from","","","","try_into","","","","type_id","","","","variant_name","vzip","","","","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptionsDynamicWindow","SeriesOpsTime","StringMethods","TimeMethods","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","closed_window","day","","days","fn_params","hour","","hours","is_leap_year","","iso_year","","microseconds","milliseconds","min_periods","minute","","minutes","month","","nanosecond","","nanoseconds","ordinal","","parse_from_str_slice","","","quarter","","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","second","","seconds","string","week","","weekday","window_size","year","","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","Time","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","","","pattern","to_owned","try_from","try_from_with_unit","","","try_into","type_id","vzip","Aws","Azure","CloudLocation","CloudOptions","CloudType","CloudWriter","File","Gcp","Hf","Http","ObjectStorePath","PolarsObjectStore","__clone_box","","borrow","","","","","borrow_mut","","","","","bucket","build_http","build_object_store","clone","","clone_into","","clone_to_uninit","","credential_provider","default","","deref","","","","","deref_mut","","","","","deserialize","download","drop","","","","","","eq","","","equivalent","","","execute","expansion","file_cache_ttl","flush","","fmt","","","from","","","","","from_str","from_untyped_config","from_url","get_range","get_ranges_sort","glob","hash","head","init","","","","","into","","","","","max_retries","new","","","new_with_object_store","object_path_from_str","options","prefix","queue","scheme","serialize","sync_update","to_owned","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_credential_provider","with_max_retries","write","write_all","write_varint","CredentialProviderFunction","Function","IntoCredentialProvider","None","ObjectStoreCredential","PlCredentialProvider","__clone_box","","borrow","","","borrow_mut","","","clone","","clone_into","","clone_to_uninit","","deref","","","deref_mut","","","deserialize","drop","","","eq","","equivalent","","","","","","fmt","","from","","","from_func","hash","","init","","","into","","","serialize","to_owned","","try_from","","","try_into","","","type_id","","","vzip","","","Aws","Azure","CloudOptions","CloudType","File","Gcp","Hf","Http","file_cache_ttl","max_retries","GZIP","SupportedCompression","ZLIB","ZSTD","borrow","borrow_mut","check","deref","deref_mut","drop","from","init","into","maybe_decompress_bytes","try_from","try_into","type_id","vzip","concat_arr","Any","AnyValue","Array","","","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalOwned","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","","Date32","Date64","DateChunked","DateType","Datetime","","DatetimeChunked","DatetimeOwned","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Dimension","Duration","","","DurationChunked","DurationType","Enum","","EnumOwned","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","Infer","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","ReshapeDimension","RevMapping","Second","Specified","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","","","StructOwned","StructType","Time","","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","cast_with_options","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_dtype","dtype","","enum_","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","","into_scalar","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","EnumChunkedBuilder","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","Abs","All","AllHorizontal","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","BackwardFill","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","EscapeRegex","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","GatherEvery","Generic","GetCategories","Head","HexEncode","Hour","Interpolate","InterpolateBy","IsBetween","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsoYear","JsonEncode","LenBytes","LenChars","ListExpr","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MultipleFields","Nanosecond","Negate","Not","NullCount","OrdinalDay","Pow","PowFunction","PrefixFields","Quarter","Random","Range","Rank","RenameFields","Repeat","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","RollingExpr","RollingExprBy","Round","","RoundSF","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Truncate","Unique","UniqueCounts","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Year","cat","pow","rolling","rolling_by","closed","ignore_nulls","","decimals","digits","has_max","has_min","limit","","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","ignore_nulls","","inclusive","literal","","","n","","pat","strict","","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","InterpolationMethod","Linear","Nearest","interpolate","interpolate_by","mode","ca_nan_agg","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","dtype","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Any","Left","Right","SearchSortedSide","binary_search_ca","lower_bound_chunks","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","SlicedArray","SortMultipleOptions","SortOptions","descending","","limit","","maintain_order","","multithreaded","","nulls_last","","slice_typed","slice_typed_unchecked","AsString","SplitNChars","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","escape_regex","escape_regex_str","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","starts_with","starts_with_chunked","str_escape_regex","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","","strip_chars_end","","strip_chars_start","","strip_prefix","","strip_suffix","","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","","Ascending","BitRepr","ChunkCompareEq","Descending","IntoSeries","IsSorted","Item","Large","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","","_sum_as_f64","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","","","","amortized_iter","and_reduce","append","approx_n_unique","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","","as_series","","as_single_ptr","","binary","binary_offset","bitand","","","","bitor","","","","bitxor","","","","bool","borrow","","","","borrow_mut","","","","boxed_metadata","cast","","cast_unchecked","cast_with_options","categorical","checked_div","","checked_div_num","chunk_lengths","","chunks","chunks_mut","","clear","clone","","clone_inner","clone_into","","clone_to_uninit","","compute_len","date","datetime","decimal","default","deref","","","","","deref_mut","","","","deserialize","","div","","","","drop","","","","drop_nulls","dtype","duration","eq","","equal","","","","equal_missing","","","","equals","equals_missing","equivalent","","","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","first","fmt","","","fmt_list","from","","","","","","","","","","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_iter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_vec","","","","","","","","","","","full_null","gather_every","get","get_flags","get_leaf_array","get_metadata","get_object","get_object_chunked_unchecked","get_unchecked","gt","","","gt_eq","","","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","","","","into","","","","into_chunks","into_column","into_frame","into_iter","into_series","","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","","is_sorted_flag","iter","iter_chunks","last","len","","limit","list","list_offsets_and_validities_recursive","list_rechunk_and_trim_to_normalized_offsets","lit","lt","","","lt_eq","","","max","max_reduce","mean","mean_reduce","median","median_reduce","min","min_reduce","mul","","","","n_chunks","","n_unique","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_null","next","not_equal","","","","not_equal_missing","","","","null","null_count","ops","or_reduce","phys_iter","product","quantile_reduce","rechunk","rechunk_validity","rem","","","rename","","reshape_array","reshape_list","reverse","","rolling_map","sample_frac","sample_n","select_chunk","serialize","","set_sorted_flag","shift","shrink_to_fit","","shuffle","size_hint","slice","","sort","sort_with","split_at","","std","std_reduce","str","str_value","strict_cast","struct_","sub","","","","sum","sum_reduce","","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","time","to_arrow","to_dummies","to_float","to_logical_repr_unchecked","to_owned","","to_physical_repr","to_string","try_add_owned","try_array","try_binary","try_binary_offset","try_bool","try_categorical","try_date","try_datetime","try_decimal","try_duration","try_f32","try_f64","try_from","","","","","","","","try_i16","try_i32","try_i64","try_i8","try_idx","try_into","","","","try_list","try_mul_owned","try_new","try_null","try_set_metadata","try_str","try_struct","try_sub_owned","try_time","try_to_compact_string","try_u16","try_u32","try_u64","try_u8","type_id","","","","u16","u32","u64","u8","unique","unique_stable","unpack","var","var_reduce","vzip","","","","with_name","wrapping_trunc_div_scalar","xor_reduce","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","NumericFixedSizeListOp","NumericListOp","Output","__clone_box","","_struct_arithmetic","add","","","add_to","","borrow","","borrow_mut","","checked","clone","","clone_into","","clone_to_uninit","","deref","","deref_mut","","div","","","divide","","drop","","execute","","floor_div","","from","","init","","into","","mul","","","multiply","","rem","","","remainder","","sub","","","subtract","","to_owned","","try_from","","try_into","","type_id","","vzip","","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","","checked_div_num","","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","deserialize","drop","eq","equivalent","","","fmt","from","hash","init","into","serialize","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"polars"],[17,"polars::chunked_array"],[870,"polars::chunked_array::arithmetic"],[898,"polars::chunked_array::builder"],[1160,"polars::chunked_array::builder::list"],[1177,"polars::chunked_array::cast"],[1208,"polars::chunked_array::collect"],[1222,"polars::chunked_array::float"],[1224,"polars::chunked_array::from_iterator_par"],[1228,"polars::chunked_array::iterator"],[1283,"polars::chunked_array::iterator::par"],[1285,"polars::chunked_array::metadata"],[1571,"polars::chunked_array::object"],[1648,"polars::chunked_array::object::builder"],[1672,"polars::chunked_array::object::registry"],[1701,"polars::chunked_array::ops"],[1921,"polars::chunked_array::ops::arity"],[1957,"polars::chunked_array::ops::float_sorted_arg_max"],[1959,"polars::chunked_array::ops::gather"],[1962,"polars::chunked_array::ops::row_encode"],[1971,"polars::chunked_array::ops::search_sorted"],[2003,"polars::chunked_array::ops::sort"],[2010,"polars::chunked_array::ops::sort::arg_bottom_k"],[2011,"polars::chunked_array::ops::sort::options"],[2026,"polars::chunked_array::temporal"],[2035,"polars::chunked_array::temporal::conversion"],[2039,"polars::datatypes"],[3602,"polars::datatypes::categorical"],[3619,"polars::datatypes::categorical::revmap"],[3625,"polars::datatypes::categorical::string_cache"],[3644,"polars::datatypes::enum_"],[3662,"polars::docs"],[3664,"polars::error"],[3758,"polars::error::PolarsError"],[3762,"polars::error::constants"],[3765,"polars::frame"],[4058,"polars::frame::column"],[4341,"polars::frame::explode"],[4372,"polars::frame::group_by"],[4610,"polars::frame::group_by::GroupByMethod"],[4611,"polars::frame::group_by::GroupsProxy"],[4613,"polars::frame::group_by::aggregations"],[4626,"polars::frame::group_by::expr"],[4629,"polars::frame::row"],[4739,"polars::functions"],[4741,"polars::prelude"],[10453,"polars::prelude::AggExpr"],[10460,"polars::prelude::BooleanFunction"],[10463,"polars::prelude::DslPlan"],[10514,"polars::prelude::Expr"],[10549,"polars::prelude::FunctionExpr"],[10571,"polars::prelude::GroupByMethod"],[10572,"polars::prelude::GroupsProxy"],[10574,"polars::prelude::LiteralValue"],[10577,"polars::prelude::PolarsError"],[10581,"polars::prelude::StringFunction"],[10595,"polars::prelude::TemporalFunction"],[10597,"polars::prelude::_csv_read_internal"],[10640,"polars::prelude::_internal"],[10662,"polars::prelude::aggregations"],[10675,"polars::prelude::arity"],[10711,"polars::prelude::array"],[10730,"polars::prelude::binary"],[10747,"polars::prelude::buffer"],[10822,"polars::prelude::buffer::Buffer"],[10825,"polars::prelude::byte_source"],[10906,"polars::prelude::cat"],[10907,"polars::prelude::chunkedarray"],[10973,"polars::prelude::chunkedarray::string"],[11013,"polars::prelude::chunkedarray::string::infer"],[11044,"polars::prelude::cloud"],[11174,"polars::prelude::cloud::credential_provider"],[11241,"polars::prelude::cloud::options"],[11251,"polars::prelude::compression"],[11269,"polars::prelude::concat_arr"],[11270,"polars::prelude::datatypes"],[11551,"polars::prelude::datatypes::categorical"],[11568,"polars::prelude::datatypes::categorical::revmap"],[11574,"polars::prelude::datatypes::categorical::string_cache"],[11578,"polars::prelude::datatypes::enum_"],[11579,"polars::prelude::datetime"],[11582,"polars::prelude::default_arrays"],[11588,"polars::prelude::dt"],[11640,"polars::prelude::expr"],[11643,"polars::prelude::fixed_size_list"],[11663,"polars::prelude::float_sorted_arg_max"],[11665,"polars::prelude::function_expr"],[11842,"polars::prelude::function_expr::BooleanFunction"],[11845,"polars::prelude::function_expr::FunctionExpr"],[11867,"polars::prelude::function_expr::StringFunction"],[11881,"polars::prelude::function_expr::TemporalFunction"],[11883,"polars::prelude::function_expr::cat"],[11885,"polars::prelude::function_expr::pow"],[11889,"polars::prelude::function_expr::rolling"],[11922,"polars::prelude::function_expr::rolling_by"],[11955,"polars::prelude::gather"],[11958,"polars::prelude::interpolate"],[11962,"polars::prelude::interpolate_by"],[11963,"polars::prelude::mode"],[11964,"polars::prelude::nan_propagating_aggregate"],[11969,"polars::prelude::null"],[12000,"polars::prelude::row_encode"],[12009,"polars::prelude::schema_inference"],[12036,"polars::prelude::search_sorted"],[12042,"polars::prelude::series"],[12064,"polars::prelude::sort"],[12071,"polars::prelude::sort::arg_bottom_k"],[12072,"polars::prelude::sort::options"],[12087,"polars::prelude::strings"],[12146,"polars::prelude::udf"],[12152,"polars::prelude::utf8"],[12156,"polars::series"],[12639,"polars::series::amortized_iter"],[12663,"polars::series::arithmetic"],[12734,"polars::series::arithmetic::checked"],[12740,"polars::series::ops"],[12769,"dyn_clone::sealed"],[12770,"polars_core::datatypes"],[12771,"polars_core::chunked_array"],[12772,"polars_error"],[12773,"core::result"],[12774,"polars_core::series"],[12775,"core::ops::function"],[12776,"num_traits"],[12777,"num_traits::cast"],[12778,"polars_core::series::arithmetic::borrowed"],[12779,"polars_core::frame::group_by::proxy"],[12780,"polars_core::chunked_array::object"],[12781,"core::option"],[12782,"polars_arrow::array"],[12783,"alloc::boxed"],[12784,"core::iter::traits::iterator"],[12785,"polars_core::chunked_array::list::iterator"],[12786,"polars_utils::pl_str"],[12787,"alloc::borrow"],[12788,"core::marker"],[12789,"polars_core::series::amortized_iter"],[12790,"alloc::string"],[12791,"polars_core::datatypes::dtype"],[12792,"polars_arrow::array::binview::view"],[12793,"polars_core::chunked_array::ops::sort::options"],[12794,"polars_core::frame::column"],[12795,"polars_core::chunked_array::metadata::md_trait"],[12796,"polars_core::chunked_array::cast"],[12797,"polars_core::series::arithmetic::borrowed::checked"],[12798,"core::slice::iter"],[12799,"core::iter::adapters::map"],[12800,"alloc::vec"],[12801,"compact_str"],[12802,"polars_core::chunked_array::metadata"],[12803,"core::iter::traits::double_ended"],[12804,"polars_arrow::offset"],[12805,"core::fmt"],[12806,"core::iter::traits::collect"],[12807,"core::convert"],[12808,"polars_arrow::bitmap::immutable"],[12809,"polars_core::chunked_array::from_iterator"],[12810,"core::borrow"],[12811,"rayon::iter"],[12812,"polars_arrow::pushable"],[12813,"core::iter::traits::exact_size"],[12814,"core::clone"],[12815,"polars_arrow::trusted_len"],[12816,"polars_core::datatypes::any_value"],[12817,"polars_arrow::array::binary"],[12818,"std::sync::rwlock"],[12819,"polars_core::chunked_array::logical"],[12820,"polars_core::datatypes::time_unit"],[12821,"polars_core::series::series_trait"],[12822,"polars_core::chunked_array::iterator"],[12823,"polars_core::scalar"],[12824,"polars_core::chunked_array::metadata::guard"],[12825,"polars_core::chunked_array::metadata::interior_mutable"],[12826,"alloc::sync"],[12827,"core::ops::range"],[12828,"polars_core::datatypes::field"],[12829,"polars_arrow::legacy::kernels::rolling::no_nulls"],[12830,"polars_core::chunked_array::ops::rolling_window"],[12831,"polars_ops::chunked_array::scatter"],[12832,"serde::ser"],[12833,"polars_utils::index"],[12834,"ahash::random_state"],[12835,"polars_utils::hashing"],[12836,"ndarray::data_repr"],[12837,"ndarray::dimension::dim"],[12838,"ndarray"],[12839,"either"],[12840,"core::any"],[12841,"polars_core::frame"],[12842,"polars_core::chunked_array::arithmetic::numeric"],[12843,"polars_core::chunked_array::builder::list::anonymous"],[12844,"polars_core::chunked_array::builder::list::boolean"],[12845,"polars_core::chunked_array::builder::list::primitive"],[12846,"polars_core::chunked_array::builder::list"],[12847,"polars_core::chunked_array::builder"],[12848,"polars_core::chunked_array::builder::list::binary"],[12849,"polars_core::chunked_array::builder::list::null"],[12850,"polars_core::chunked_array::builder::string"],[12851,"polars_arrow::array::binview"],[12852,"polars_core::chunked_array::builder::boolean"],[12853,"polars_core::chunked_array::builder::null"],[12854,"polars_core::chunked_array::builder::primitive"],[12855,"polars_core::series::implementations::null"],[12856,"serde::de"],[12857,"core::hash"],[12858,"polars_core::chunked_array::collect"],[12859,"polars_core::chunked_array::float"],[12860,"polars_core::chunked_array::from_iterator_par"],[12861,"polars_arrow::array::boolean"],[12862,"polars_arrow::array::fixed_size_list"],[12863,"polars_core::chunked_array::metadata::env"],[12864,"polars_core::chunked_array::metadata::collect"],[12865,"bitflags::iter"],[12866,"std::fs"],[12867,"std::sync::mutex"],[12868,"polars_arrow::datatypes"],[12869,"polars_arrow::bitmap::utils::iterator"],[12870,"polars_arrow::bitmap::utils::zip_validity"],[12871,"polars_core::chunked_array::object::builder"],[12872,"polars_core::chunked_array::object::registry"],[12873,"polars_core::chunked_array::ops"],[12874,"polars_arrow::legacy::array::slice"],[12875,"polars_core::chunked_array::ops::arity"],[12876,"polars_arrow::array::static_array"],[12877,"core::error"],[12878,"polars_arrow::array::primitive"],[12879,"polars_row::row"],[12880,"polars_core::chunked_array::ops::search_sorted"],[12881,"polars_core::utils"],[12882,"chrono::naive::datetime"],[12883,"chrono_tz::timezones"],[12884,"chrono::naive::time"],[12885,"polars_core::chunked_array::logical::categorical"],[12886,"polars_core::chunked_array::logical::categorical::builder"],[12887,"polars_arrow::array::static_array_collect"],[12888,"std::ffi::os_str"],[12889,"std::path"],[12890,"bytemuck::zeroable"],[12891,"polars_core::chunked_array::logical::categorical::revmap"],[12892,"polars_core::chunked_array::logical::categorical::merge"],[12893,"polars_arrow::datatypes::reshape"],[12894,"core::cmp"],[12895,"polars_core::datatypes::_serde"],[12896,"polars_arrow::types"],[12897,"polars_arrow::datatypes::physical_type"],[12898,"chrono::time_delta"],[12899,"chrono::naive::date"],[12900,"polars_core::datatypes::into_scalar"],[12901,"polars_plan::dsl::expr"],[12902,"polars_core::chunked_array::logical::categorical::string_cache"],[12903,"polars_core::chunked_array::logical::enum_"],[12904,"polars_error::warning"],[12905,"object_store"],[12906,"simdutf8::basic"],[12907,"regex::error"],[12908,"planus::errors"],[12909,"std::io::error"],[12910,"alloc::collections"],[12911,"polars_parquet::parquet::error"],[12912,"polars_schema::schema"],[12913,"polars_arrow::record_batch"],[12914,"hashbrown::set"],[12915,"polars_core::frame::row"],[12916,"polars_core::frame::group_by"],[12917,"polars_time::group_by::dynamic"],[12918,"polars_lazy::frame"],[12919,"polars_core::series::from"],[12920,"polars_core::chunked_array::ndarray"],[12921,"polars_arrow::array::struct_"],[12922,"polars_time::windows::duration"],[12923,"polars_core::frame::column::scalar"],[12924,"polars_core::frame::column::partitioned"],[12925,"polars_core::frame::explode"],[12926,"polars_utils::idx_vec"],[12927,"rayon::iter::plumbing"],[12928,"polars_plan::plans::aexpr"],[12929,"polars_core::frame::group_by::into_groups"],[12930,"core::iter::adapters::copied"],[12931,"core::iter::adapters::zip"],[12932,"polars_arrow::legacy::kernels::rolling"],[12933,"polars_utils::float"],[12934,"polars_arrow::types::native"],[12935,"polars_core::frame::group_by::aggregations::agg_list"],[12936,"polars_core::frame::group_by::aggregations"],[12937,"polars_core::frame::group_by::expr"],[12938,"polars_core::frame::row::av_buffer"],[12939,"polars_utils::arena"],[12940,"polars_plan::plans::ir"],[12941,"polars_ops::frame::join::hash_join"],[12942,"polars_ops::frame::join::args"],[12943,"polars_plan::dsl::struct_"],[12944,"polars_ops::chunked_array::gather::chunked"],[12945,"polars_ops::frame"],[12946,"polars_io::csv::read::reader"],[12947,"polars_io::predicates"],[12948,"polars_io::mmap"],[12949,"polars_plan::dsl::selector"],[12950,"polars_plan::frame::opt_state"],[12951,"core::alloc"],[12952,"polars_plan::plans::anonymous_scan"],[12953,"polars_lazy::scan::anonymous_scan"],[12954,"polars_plan::dsl::expr_dyn_fn"],[12955,"polars_plan::plans::visitor"],[12956,"polars_plan::dsl::function_expr"],[12957,"polars_ops::series::ops::arg_min_max"],[12958,"polars_plan::dsl::array"],[12959,"polars_plan::dsl::list"],[12960,"polars_plan::dsl::function_expr::schema"],[12961,"polars_io::ipc::ipc_stream"],[12962,"std::io"],[12963,"icu_provider::any"],[12964,"polars_ops::chunked_array::binary"],[12965,"polars_time::chunkedarray::string"],[12966,"std::os::fd::owned"],[12967,"polars_ops::chunked_array::list"],[12968,"std::os::fd::raw"],[12969,"polars_ops::series::ops"],[12970,"polars_ops::chunked_array::strings"],[12971,"core::mem::maybe_uninit"],[12972,"polars_ops::chunked_array::strings::namespace"],[12973,"polars_io::csv::read::read_impl::batched"],[12974,"polars_io::csv::write::writer"],[12975,"polars_io::ipc::write"],[12976,"polars_io::parquet::read::reader"],[12977,"polars_io::parquet::read::read_impl"],[12978,"polars_io::parquet::write::writer"],[12979,"polars_io::parquet::write::batched_writer"],[12980,"polars_plan::dsl::binary"],[12981,"icu_provider::key"],[12982,"icu_provider::marker"],[12983,"icu_provider::data_provider"],[12984,"hyper::service::service"],[12985,"http::request"],[12986,"polars_plan::dsl::udf"],[12987,"polars_lazy::frame::exitable"],[12988,"hashbrown::map"],[12989,"polars_plan::dsl::cat"],[12990,"polars_ops::series::ops::round"],[12991,"polars_time::series"],[12992,"polars_lazy::scan::csv"],[12993,"polars_lazy::scan::ipc"],[12994,"polars_lazy::scan::ndjson"],[12995,"polars_lazy::scan::parquet"],[12996,"polars_time::chunkedarray::rolling_window"],[12997,"polars_time::windows::bounds"],[12998,"polars_time::windows::group_by"],[12999,"polars_time::windows::window"],[13000,"polars_ops::frame::join::asof"],[13001,"polars_ops::frame::join::iejoin"],[13002,"polars_ops::series::ops::interpolation::interpolate"],[13003,"polars_ops::series::ops::is_between"],[13004,"polars_ops::series::ops::rank"],[13005,"polars_io::csv::read::options"],[13006,"polars_io::csv::write::options"],[13007,"polars_plan::dsl::arity"],[13008,"polars_io::ipc::ipc_file"],[13009,"polars_io::ipc::ipc_reader_async"],[13010,"polars_io::json"],[13011,"polars_io::parquet::read::options"],[13012,"polars_parquet::arrow::write"],[13013,"polars_io::parquet::write::options"],[13014,"polars_parquet::parquet::metadata::file_metadata"],[13015,"polars_plan::dsl::function_expr::boolean"],[13016,"polars_plan::dsl::function_expr::cat"],[13017,"polars_plan::dsl::function_expr::datetime"],[13018,"polars_plan::dsl::function_expr::pow"],[13019,"polars_plan::dsl::function_expr::strings"],[13020,"polars_plan::dsl::function_expr::struct_"],[13021,"polars_plan::dsl::functions::temporal"],[13022,"polars_plan::dsl::options"],[13023,"polars_plan::plans::lit"],[13024,"polars_plan::plans::options"],[13025,"polars_plan::plans"],[13026,"polars_arrow::legacy::kernels::time"],[13027,"tracing_core::span"],[13028,"tracing_core::subscriber"],[13029,"polars_lazy::scan::file_list_reader"],[13030,"polars_io::cloud::options"],[13031,"polars_parquet::parquet::metadata::column_order"],[13032,"polars_ops::chunked_array::binary::namespace"],[13033,"object_store::path"],[13034,"core::future::future"],[13035,"core::pin"],[13036,"polars_io::ndjson::core"],[13037,"polars_arrow::io::ipc::read::file"],[13038,"polars_parquet::parquet::metadata::row_metadata"],[13039,"polars_ops::frame::join::cross_join"],[13040,"polars_lazy::dsl::eval"],[13041,"polars_time::chunkedarray::date"],[13042,"polars_time::chunkedarray::datetime"],[13043,"polars_time::chunkedarray::duration"],[13044,"core::ffi::c_str"],[13045,"core::default"],[13046,"futures_core::stream"],[13047,"polars_parquet::parquet::metadata::column_chunk_metadata"],[13048,"polars_core::series::ops"],[13049,"polars_plan::dsl::dt"],[13050,"tracing_core::metadata"],[13051,"polars_ops::series::ops::various"],[13052,"polars_arrow::scalar"],[13053,"polars_lazy::dsl::list"],[13054,"tracing_core::event"],[13055,"crossterm::command"],[13056,"polars_io::shared"],[13057,"polars_plan::plans::apply"],[13058,"polars_parquet::arrow::read::statistics"],[13059,"polars_plan::dsl::function_expr::range"],[13060,"polars_plan::dsl::function_expr::binary"],[13061,"polars_plan::dsl::function_expr::list"],[13062,"polars_plan::dsl::function_expr::array"],[13063,"alloc::ffi::c_str"],[13064,"polars_arrow::array::growable::structure"],[13065,"polars_core::schema"],[13066,"polars_arrow::legacy::array::default_arrays"],[13067,"polars_arrow::buffer::immutable"],[13068,"polars_arrow::array::list"],[13069,"polars_core::named_from"],[13070,"polars_ops::frame::join"],[13071,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[13072,"polars_time::chunkedarray::time"],[13073,"core::num::nonzero"],[13074,"polars_arrow::array::struct_::iterator"],[13075,"polars_ops::frame::join::asof::groups"],[13076,"polars_ops::chunked_array::list::namespace"],[13077,"polars_plan::dsl::name"],[13078,"polars_parquet_format::parquet_format"],[13079,"icu_provider::request"],[13080,"icu_provider::response"],[13081,"icu_provider::error"],[13082,"icu_provider::buf"],[13083,"polars_core::utils::supertype"],[13084,"polars_io::options"],[13085,"polars_core::chunked_array::ops::aggregate"],[13086,"polars_core::chunked_array::ops::aggregate::quantile"],[13087,"polars_arrow::legacy::index"],[13088,"polars_plan::plans::ir::scan_sources"],[13089,"polars_ops::chunked_array::strings::split"],[13090,"object_store::payload"],[13091,"core::io::borrowed_buf"],[13092,"polars_parquet_format::thrift::varint::decode"],[13093,"polars_time::chunkedarray::rolling_window::dispatch"],[13094,"polars_time::round"],[13095,"polars_parquet::parquet::metadata::schema_descriptor"],[13096,"futures_task::future_obj"],[13097,"futures_task::spawn"],[13098,"polars_core::chunked_array::ops::aggregate::var"],[13099,"polars_plan::dsl::string"],[13100,"polars_ops::series::ops::to_dummies"],[13101,"polars_time::truncate"],[13102,"polars_io::csv::read::schema_inference"],[13103,"polars_time::upsample"],[13104,"polars_core::hashing::vector_hasher"],[13105,"alloc::collections::btree::map"],[13106,"writeable"],[13107,"polars_io::csv::read::parser"],[13108,"polars_utils::mmap::private"],[13109,"polars_parquet::arrow::read::deserialize::utils::filter"],[13110,"polars_ops::chunked_array::array::namespace"],[13111,"polars_ops::chunked_array::array"],[13112,"polars_io::csv::read::buffer"],[13113,"polars_io::utils::byte_source"],[13114,"polars_time::chunkedarray::string::patterns"],[13115,"polars_time::chunkedarray::string::infer"],[13116,"polars_io::cloud::glob"],[13117,"polars_io::cloud::polars_object_store"],[13118,"tokio::fs::file"],[13119,"polars_io::cloud::adaptors"],[13120,"url"],[13121,"bytes::bytes"],[13122,"polars_io::cloud::credential_provider"],[13123,"polars_io::utils::compression"],[13124,"polars_arrow::legacy::array::fixed_size_list"],[13125,"polars_plan::dsl::function_expr::rolling"],[13126,"polars_plan::dsl::function_expr::rolling_by"],[13127,"polars_arrow::legacy::array::null"],[13128,"polars_arrow::bitmap::mutable"],[13129,"polars_arrow::array::utf8"],[13130,"polars_core::series::iterator"],[13131,"alloc::rc"],[13132,"polars_core::series::arithmetic::list"],[13133,"polars_core::series::arithmetic::fixed_size_list"],[13134,"polars_core"],[13135,"polars_core::chunked_array::struct_"],[13136,"polars_core::chunked_array::iterator::par"],[13137,"polars_core::chunked_array::object::extension"],[13138,"polars_core::chunked_array::ops::float_sorted_arg_max"],[13139,"polars_core::chunked_array::ops::gather"],[13140,"polars_core::chunked_array::ops::row_encode"],[13141,"polars_core::chunked_array::ops::sort"],[13142,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[13143,"polars_core::chunked_array::temporal"],[13144,"polars_core::chunked_array::temporal::conversion"],[13145,"polars_core::chunked_array::temporal::time"],[13146,"polars_core::chunked_array::logical::date"],[13147,"polars_core::chunked_array::logical::datetime"],[13148,"polars_core::chunked_array::logical::decimal"],[13149,"polars_core::chunked_array::logical::duration"],[13150,"polars_core::datatypes::aliases"],[13151,"polars_utils::aliases"],[13152,"polars_core::chunked_array::logical::time"],[13153,"polars_error::constants"],[13154,"polars_core::functions"],[13155,"polars_core::frame::horizontal"],[13156,"polars_arrow::datatypes::schema"],[13157,"polars_io::utils::other"],[13158,"polars_io::parquet::metadata"],[13159,"polars_arrow::legacy::prelude"],[13160,"polars_arrow::legacy::array"],[13161,"polars_io::path_utils"],[13162,"polars_ops::series::ops::rolling"],[13163,"polars_parquet::parquet::write"],[13164,"polars_io::utils"],[13165,"polars_ops::frame::join::general"],[13166,"polars_io::csv::read"],[13167,"polars_io::parquet::read"],[13168,"polars_ops::series::ops::abs"],[13169,"polars_plan::dsl::functions::selectors"],[13170,"polars_plan::dsl::functions::horizontal"],[13171,"polars_plan::dsl::functions::arity"],[13172,"polars_plan::dsl"],[13173,"polars_plan::dsl::functions::range"],[13174,"polars_plan::dsl::functions::index"],[13175,"polars_ops::chunked_array"],[13176,"polars_plan::dsl::functions::coerce"],[13177,"polars_plan::dsl::functions::syntactic_sugar"],[13178,"polars_time::base_utc_offset"],[13179,"polars_time"],[13180,"polars_ops::series::ops::clip"],[13181,"polars_io"],[13182,"polars_ops::series::ops::horizontal"],[13183,"polars_lazy::dsl::functions"],[13184,"polars_plan::dsl::functions::concat"],[13185,"polars_ops::series::ops::index"],[13186,"polars_ops::series::ops::bitwise"],[13187,"polars_ops::series::ops::cum_agg"],[13188,"polars_ops::series::ops::diff"],[13189,"polars_time::dst_offset"],[13190,"polars_ops::chunked_array::strings::escape_regex"],[13191,"polars_ops::series::ops::floor_divide"],[13192,"polars_ops::chunked_array::strings::concat"],[13193,"polars_ops::series::ops::duration"],[13194,"polars_ops::chunked_array::datetime::replace_time_zone"],[13195,"polars_time::date_range"],[13196,"polars_ops::series::ops::interpolation"],[13197,"polars_ops::series::ops::interpolation::interpolate_by"],[13198,"polars_ops::series::ops::is_first_distinct"],[13199,"polars_ops::series::ops::is_in"],[13200,"polars_ops::series::ops::is_last_distinct"],[13201,"polars_io::parquet::read::utils"],[13202,"polars_ops::series::ops::negate"],[13203,"polars_ops::series::ops::not"],[13204,"polars_ops::series::ops::int_range"],[13205,"polars_plan::client"],[13206,"polars_plan::dsl::functions::repeat"],[13207,"polars_ops::chunked_array::repeat_by"],[13208,"polars_ops::series::ops::replace"],[13209,"polars_ops::chunked_array::strings::strip"],[13210,"polars_ops::series::ops::unique"],[13211,"polars_io::partition"],[13212,"polars_io::csv::read::read_impl"],[13213,"polars_io::parquet::read::predicates"],[13214,"polars_io::parquet::read::mmap"],[13215,"polars_time::chunkedarray"],[13216,"polars_io::cloud::object_store_setup"],[13217,"polars_io::cloud"],[13218,"polars_ops::series::ops::concat_arr"],[13219,"polars_ops::chunked_array::mode"],[13220,"polars_ops::chunked_array::nan_propagating_aggregate"],[13221,"polars_arrow::legacy::array::utf8"]],"i":"````````````````````Mf000`l0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`00000000000000000001010``000000000000000000000000000`0`000000010100000001000000000000000000000000000000000000`00000000000010000000000000000000000000000000000000000`0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001000000000000000000000000000000`0000000000000000000000000000000000000000000000`00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`00`000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`0000000000000000000000000010010010000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000`ABl00000000000000000000000000````````````````AD`ADdADfADhABn0AC`ACbACdACfACh54ACjACl5ACn5<;:98845<3487216055213<;921558721605<;:98721605<;:95<;:9<;:9<;:9878721605<;:98721605<;:98721605<;:9216542165438704<<;:9`8721605<;:9ADl000`9832716=<;:327659832716=<;:`9832716=<;:64<;:=<;:9832716=<;:9832716=<;:9832716=<;:9832716=<;:````````5556555`5`Gb00000000000000000000000000000``AEbAEd1000101000`AEf``AEhAEj````AEnAFbAFd21021021021021021021021021210210`210210210210210``AGbKhHb0Jn`3Ml22````````42110Mn4AFf43434343434344334343215604321560431150431504315043AFh545426543326715432671544541G`7774378265652652657777777266666555554378265656655656565775077773543782656565654378265656576577776565220777707773653655657757777775776565653372656543782654378265334378265653437826513````AGf00000K`1111`111111110011111111111111111111``111111101111111110Cd2222222222`AHb0000000000000000000000````AHd00AHf00000001```00`0`10000AIh`````````````````````````````0AHl``AIjAJh33333EEn4``0``4FdFl6AHh6AHn077AI`AIb0AId`65;65;AIf0076<76<76<7676<76<7676<76<76<::777666AIl0`AInAJ``:9?::99?`AJbAJd`AJf0??=<AIh>=0>=00AJjAJlFdFlAJh021AHh0AJn1143?43AK`AIj065?2AKb0AKdAKf`AKh0`:9=0AKjAKlAKn0`AIb0AL`<ALbALdALfFdFlAIh210210210AId7321323232232232`ALh`AMbALnALj``````````````````````````````````````````````AMh00`0`0000000000000000000`000000`````>>````8787878787>>`````````````B@f`JlEnDn```````21AGh`2``3`0320```32````3`````3200``32`3`3200``0`320``Dd04341```11`51431``431```AOl`3EF`EFb````B@n``9``875``875``875``875``5`666555B@b986``4``6BA`Ld1010Al<;9`<;`<``:3:```````````BAn``35`>=<`=`=<:=`=<::````:0`=<:``=<:``=<:``=<:``:<:`::ALl0<0:L`6:ANbB@dJlB@fEnB@hOj;NhNdFfNjObOfKlLbEhEjKnLnBfBdFhBbLjLfLlB@jB@lB@nAGhBA`ANbJl01L`1CfLhNhNdFfNjObOfKlLbEhEjBfBdBbAhANdANb110ANf0ANh0EnJlL`0Dd0003OjANnALl3433:BC`5EFdDjjCfLhCbBAfB@bAOlANbB@dJlB@fEnB@hOjLdNhNdFfNjObOfKlLbEhEjKnLnBfBdFhBbLjLfLlB@jAhB@lB@nAGhBA`DdANdBC`L`EFdDjjCfLhCbBAfB@bAOlANbB@dJlB@fEnB@hOjLdNhNdFfNjObOfKlLbEhEjKnLnBfBdFhBbLjLfLlB@jAhB@lB@nAGhBA`EnAOl`JlB@`13L`0100000ANb`LhNhNdFfNjObOfKlLbEhEjDd=B@bAOl>B@dJlB@fEnB@hOjLdNhNdFfNjObOfKlLbEhEjKnLnBfBdFhBbLjLfLlB@jB@lB@nAGhBA`DdL`B@bAOlANbB@dJlB@fEnB@hOjLdNhNdFfNjObOfKlLbEhEjKnLnBfBdFhBbLjLfLlB@jB@lB@nAGhBA`DdL`B@bAOlANbB@dJlB@fEnB@hOjLdNhNdFfNjObOfKlLbEhEjKnLnBfBdFhBbLjLfLlB@jB@lB@nAGhBA`Dd4OjBAd00026En500`L`4BAfB@bAOlJlB@f6;99ANdBC`77EFdDjjCfLhCb<;:ANbB@d;:EnB@hOjLdNhNdFfNjObOfKlLbEhEjKnLnBfBdFhBbLjLfLlB@jAhB@lB@nAGhBA`DdANdBC`L`0EFdDjjCfLhCbBAfB@bAOlANbB@dJlB@fEnB@hOjLdNhNdFfNjObOfKlLbEhEjKnLnBfBdFhBbLjLfLlB@jAhB@lB@nAGhBA`DdB@bJlB@fEnOjLd;:987L`CfLhNhNdFfNjObOfKlLbEhEjAhANdDd1BC`L`EFdDjjCfLhCbBAfB@bAOlANbB@dJlB@fEnB@hOjLdNhNdFfNjObOfKlLbEhEjKnLnBfBdFhBbLjLfLlB@jAhB@lB@nAGhBA`B@`L`0000ANbJlOj0Dd0`0B@b3B@fEn0B@h5Ld>=<;7888888555777333222111666000>>>===<<<;;;9AOlAOnANdBAf9983B@d<<8776;55B@lB@n0AGhBA`>>>>>6BC`L`00EFdDjjCfLhCb=B@bAOlANb?Jl00000B@fEn0000B@hOj00Ld0NhNdFfNjObOfKlLbEhEjKnLnBfBdFhBbLjLfLlB@jAhB@lB@nAGh00BA`EnANb0L`01Dd00000001111110002ALl00030AOl9833333B@`544444051DnjCfLhCbNhNdFfNjObOfKlLbEhEjKnLnBfBdFhBbLjLfLlB@jAhAOlB@n0ANbEnJlBBlALl444444Dd3B@f5OjLd9AGhBA`8L`09:6ANdBC`2EFdDjjCfLhCbBAfB@bAOlANbB@dJlB@fEnB@hOjLdNhNdFfNjObOfKlLbEhEjKnLnBfBdFhBbLjLfLlB@jAhB@lB@nAGhBA`En2DdANdBC`L`EFdDjjCfLhCbBAfB@bAOlANbB@dJlB@fEnB@hOjLdNhNdFfNjObOfKlLbEhEjKnLnBfBdFhBbLjLfLlB@jAhB@lB@nAGhBA`L`ANbBC`BBn333332JlDdEn00200055020AOl3111013193131319111311111319ALl702173777777``2B@f338`BAf::49:::CfLhNhNdFfNjObOfKlLbEhEjAhANb0Oj0L`0EF`EFbANd33333333BAf5B@lB@n06B@hBC`:::::::188DdJlLd6;=;8CfLhNhNdFfNjObOfKlLbEhEjAhL`0AOl111Dd2B@bANbJlB@fEnOjLd:B@lB@nAGhBA`5====BC`::9>>>9>CfLhNhNdFfNjObOfKlLbEhEjAhL`00ANbEnOjLd203AGh440Dd6B@bAOl7B@dJlB@f9B@h98NhNdFfNjObOfKlLbEhEjKnLnBfBdFhBbLjLfLlB@jB@lB@nAGhBA`En2L`Dd1111Jl3Ld7133ANf0ANh0BAd00045ANdBC`8EFdDjjCfLhCbBAfB@bAOlANbB@dJlB@fEnB@hOjLdNhNdFfNjObOfKlLbEhEjKnLnBfBdFhBbLjLfLlB@jAhB@l0B@nAGhBA`DdANdBC`L`EFdDjjCfLhCbBAfB@bAOlANbB@dJlB@fEnB@hOjLdNhNdFfNjObOfKlLbEhEjKnLnBfBdFhBbLjLfLlB@jAhB@lB@nAGhBA`JlEnDd21Ld61ANdBC`L`EFdDjjCfLhCbBAfB@bAOlANbB@dJlB@fEnB@hOjLdNhNdFfNjObOfKlLbEhEjKnLnBfBdFhBbLjLfLlB@jAhB@lB@nAGhBA`1ANb0ALl10En1DdANdBC`L`EFdDjjCfLhCbBAfB@bAOl?B@dJlB@fEnB@hOjLdNhNdFfNjObOfKlLbEhEjKnLnBfBdFhBbLjLfLlB@jAhB@lB@nAGhBA`EF`EFbALlDd00Jl`````AOl`B@b10``AOn`````2121``BCl0000`00`0000000`0`BCn0000000000000000``BDbn000EFf`112101```111111121BD`302302`223002302302`3002230022222222`302302`0``````02302302023023022EFhEFj10```BEl`0BEj11``0``01AB`000000000000000000BG`BGb34210342222342342342`222421034210342421034222222222242224442`22222223422103422222222222222222`222242222222222222103422103421022222222222222222222222102222222222222222`22222222222242222222210222222222222222222234222222221034222221034221034222222222210342222222``Fj0`0BHd11111111111111111111111111101111011111111111110101010101110101011111010111111101010111111111111111010111101111111110111111110101BEh122211222222221122221222222222221212122222222222222221222122212222222222212222222222122222122122222222222222212222221222222222221222222212221222222`BHj00000000000000000000000000000`BI`0``0``````BIhC``2`22222222210`222BHl1BFb40`1023BJbBIdBIb453762104537453745374537345621004537621045373162104453745444555`643445377`621044455377445335BIl4673215648732156486355255765564447644444543345644656446644564887321564873215648873215648666473215648EFlEFn0``````````BJjBJl0`BJn0BK`BKb``1011110101010101010`10011010101010BF`211210210210210210`02102102100000022110`2102102121021```210210210210210``BNfBM`BCb`C@f1CJjCGj01`CHh`CBj5```CEn4AMhB@fBEl7`;``;;`CLdJlEnDn``?``````````7```?```CIhCFn`CFdAIhBNfCKbCJn``9CLh9AGh``BCb5`;``<``15<2;1`````CEdCFl``CJ``EG`CIjBGnBMf000CLn8;`=JlEn``````1`CK`BNf?`````````````````````````````````````0``0CEl`=`n>CIh`CJn``24CKb0031C@fBI`2CEn```````888884`````<CEfCEh`DGj7>CLh>AGh0``1`9JlEn``;`1`;13022``CFnEG`CIj5BNf`CLnCBj22`CInBCbn`CJn;=:<`````BMfDEfCKb>=>77EGbA@`EFf38`BM`9CLb```=>AGh66688````;CKd0`````BNf``0=CLn9C@fBI`BEl66`CLhB@f8Jl2En:``130:``8CBjBGnCFdAIh<CEh```CEnAHlBCb``0BNfCK``CJl`AOl``CLn`BI```````CLbCFf?0?CJ``44DnEF`EFbCKb0EGbA@`CJn`CEn``n=DGjBIhC``````C@fBI``BCb```B@n``8`CLhB@f``Jl2EnAGh``2410``2410``2410``BNf0`BM`2```````>``````````CJj0`000`0CJn1Dn222001AIjAJhCLbCLn`````CEl``DOhCKd``1```2BCbCI``>`>``>C@fBI`BElDEf``````EGdCEdCEfCEnCFlAMh`;CKb0B@b`CFjEGbA@`JlEnAGh````BNf````````BCb`AOl`CBj0`CGf984<CFf202CJ`0CF`08CLnCFnC@fAIhBI`1<210<20CJnBA`LdEGbA@`443287656BNf?50?CEh6CGhCKdCBjBMf`=;CInCGj``==<;:AlCFdCFj<;CHh;`0`n``1CEdEEnCFlCIhBElCJj>>BCb`DEfJlCLhEnAGhCMdBNf`````53`5`EFfAIhCF`0```CBjCFnCJn:ABlnBLnCL```Dn`BMf0````````FjB@b3```````:```````````BAn`?`CIhCKd`C@fBI`BJd```>`8DEfCMdCFnBNf0CLh1```BCb`922CKb33CJn4``14EGdCEdCEfCEnCFlAMhCL``;;```````BM`8<<``CIhBMf0n01CEh`FjABlCLn`````44```?BA`1`BCb=````CLh5``````BNf8000CGh53CKbBIhC`8``CJ`EEn8:8```B@n555`CK``6``C@fBI`B@f<Jl=En`n``>```2`<<<<<<`21AGh``?1``3`BM`BCbCKd98BNfCEhBMfCKb``3``5`2CJn;CLh;99``1```922`2511111111ABlBAnCBj`47?3><``?3><``?3><``?3><````CJ`=CLn`::`En?```;8`CGfAGh0=ALl0C@fBI`BJd``CEh>>`BCb`01``CKdCJn=0CI`AIhDn:?`CClBGdBMdBMnCDhCDjCDlCDnCE`BFdBGhCEbBHbCEdCEfCEhCEjABbA@jBKnCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdC@fCHfCHhBCbCHjCHlCHnCI`CIbCIdCIfCIhCIjCIlCInCBjCJ`CJbBNbCJdCJfCJhCJjCJlCJnCK`N`CKbCKdBNfCKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMfA@bBH`BGnCLhBBbCLjMjCLlCLnA@`BJdCM`CMbCMd`BGdBKl`00``BL`1?AHhBLbBLd0BLf6BLh`BCbBLn1BM`BHb0BMb1BMd5`5`5BMf`N`CDnBMjCKnBMl00CKf<BLbBGd0>`>ACfACh1010AHl<BCb`0AHn011``22AI`27`BH`BNhBNjBNl62106AIb7<`0AId8=`BNnCKn`:ANf880ANh099`BO`BMlBLbBOd=1=N`MjBOhBOj000333C@b44C@f5ANnC@h9ALlC@j`699`BCbC@n0`CGlBLhCAbCAhCAlCB`CBb5`8`BM`BMf00000100CD`BNjAMjBMjCBfCA`CClBGdBMdBMnCDhCDjCDlCDnBLhDKdDFdBNnCE`CAbBFdBGhCEbBHbBNlCEdDH`CEfDBlCO`CEhBL`CEjBO`DBnD@bCAhDOhDC`DCbABbA@jCNnDKfCAnCAlCB`BKnCElCBbCEnCF`CFbCFdCFfCFhDHhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdC@fCHfCHhBCbCHjCHlCHnCI`CIbD@lCIdCIfCIhCIjCIlCInCBjCJ`CJbBNbCJdCJfCJhCJjCJlCJnCK`N`0CKbCKdBNfCKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMfDEfA@bBH`BGnCLhBBbCLjMjCLlCLnA@`BJdCM`CMbCMdCD`BNjAMjBMjCBfCA`CClBGdBMdBMnCDhCDjCDlCDnBLhDKdDFdBNnCE`CAbBFdBGhCEbBHbBNlCEdDH`CEfDBlCO`CEhBL`CEjBO`DBnD@bCAhDOhDC`DCbABbA@jCNnDKfCAnCAlCB`BKnCElCBbCEnCF`CFbCFdCFfCFhDHhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdC@fCHfCHhBCbCHjCHlCHnCI`CIbD@lCIdCIfCIhCIjCIlCInCBjCJ`CJbBNbCJdCJfCJhCJjCJlCJnCK`N`CKbCKdBNfCKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMfDEfA@bBH`BGnCLhBBbCLjMjCLlCLnA@`BJdCM`CMbCMdBGdN`>BLb`ACd`3CDjCDnCKlCCb66CCh`BOdCCj2CCl`9;AIfBCbB@`>2201`1=1CDb2A@bCDdBH`CDfBLb10CGb`11`8`8`8:BGdBMdBMnCDhCDjCDlCDnCE`BFdBGhCEbBHbCEdCEfCEhCEjABbA@jBKnCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdC@fCHfCHhBCbCHjCHlCHnCI`CIbCIdCIfCIhCIjCIlCInCBjCJ`CJbBNbCJdCJfCJhCJjCJlCJnCK`N`CKbCKdBNfCKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMfA@bBH`BGnCLhBBbCLjMjCLlCLnA@`BJdCM`CMbCMdBLbCClBGdBMdBMnCDhCDjCDlCDnCE`BFdBGhCEbBHbCEdCEfCEhCEjABbA@jBKnCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdC@fCHfCHhBCbCHjCHlCHnCI`CIbCIdCIfCIhCIjCIlCInCBjCJ`CJbBNbCJdCJfCJhCJjCJlCJnCK`N`CKbCKdBNfCKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMfA@bBH`BGnCLhBBbCLjMjCLlCLnA@`BJdCM`CMbCMdN`CClBGdBMdBMnCDhCDjCDlCDnCE`BFdBGhCEbBHbCEdCEfCEhCEjABbA@jBKnCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdC@fCHfCHhBCbCHjCHlCHnCI`CIbCIdCIfCIhCIjCIlCInCBjCJ`CJbBNbCJdCJfCJhCJjCJlCJnCK`N`CKbCKdBNfCKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMfA@bBH`BGnCLhBBbCLjMjCLlCLnA@`BJdCM`CMbCMdCE`BFdBGh`CMjCDhCDlCDjCDnBHbN``BMjCElBKn``BGd`BAd000AEbAEd100033`CJh0CGbBLf`CGd<;CGjBMf`CHnCIlCLn`C@n```CMjCDh````BNjCNd4BNl9155``N`0BGdCNnBCb99``CO````BKl`CJh5COf0`4``4`4`4``4COh84CIl`CHf```0`````COlCOnCDdCKfD@`BHbCKh1CKjCM`CGdN`0BGdBMnCDjCDnBFdBGhCEhD@bBKnCElCF`CFbCFdCFfCFhCFlCG`CGbCGdCGfCGlCHfCHhBCbCHlCHnCI`CIbCIfCIhCIlCJ`BNb00N`000CKfCKhCKlCKnCL`CLbCLfBMfA@bBGnBBbCLjMjCLlCLnA@```N`0CD`BNjAMj0BMjCBfCA`CClBGdBMdBMnCDhCDjCDlCDnBLhDKdDFdBNnCE`CAbBFdBGhCEbBHbBNlCEdDH`CEfDBlCO`CEhBL`CEjBO`DBnD@bCAhDOhDC`DCbABbA@jCNnDKfCAnCAlCB`BKnCElCBbCEnCF`CFbCFdCFfCFhDHhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdC@fCHfCHhBCbCHjCHlCHnCI`CIbD@lCIdCIfCIhCIjCIlCInCBjCJ`CJbBNb0CJdCJfCJhCJjCJlCJnCK`N`0CKbCKdBNfCKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMfDEfA@bBH`BGnCLhBBbCLjMjCLlCLnA@`BJdCM`CMbCMdCD`BNjAMj0BMjCBfCA`CClBGdBMdBMnCDhCDjCDlCDnBLhDKdDFdBNnCE`CAbBFdBGhCEbBHbBNlCEdDH`CEfDBlCO`CEhBL`CEjBO`DBnD@bCAhDOhDC`DCbABbA@jCNnDKfCAnCAlCB`BKnCElCBbCEnCF`CFbCFdCFfCFhDHhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdC@fCHfCHhBCbCHjCHlCHnCI`CIbD@lCIdCIfCIhCIjCIlCInCBjCJ`CJbBNbCJdCJfCJhCJjCJlCJnCK`N`CKbCKdBNfCKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMfDEfA@bBH`BGnCLhBBbCLjMjCLlCLnA@`BJdCM`CMbCMdCG`FdFl8BGd0009N``CE`BFdBGhBHbCEdCEfCEhBKnCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlC@fCHfCHhBCbCHjCHnCI`CIbCIdCIfCIhCIjCIlCInCBjCJ`CJbBNb0000CJdCJfCJjCJlCJnCK`N`CKbCKdBNfCKjCKlCKnCL`CLbCLdCLfBM`A@bBGnCLhBBbCLjMjCLlCLnA@`BJdCM`CMbCMdBFb`7`BNlBCbBMf9D@lCIfBLn4BMb5N`000CD`BNjAMjBMjCBfCA`CCl0BGd0BMdBMnCDhCDjCDlCDnBLhDKdDFdBNnCE`CAbBFdBGhCEbBHbBNlCEdDH`CEfDBlCO`CEhBL`CEjBO`DBnD@bCAhDOhDC`DCbABbA@jCNnDKfCAnCAlCB`BKnCElCBbCEnCF`CFbCFdCFfCFhDHhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdC@fCHfCHhBCbCHjCHlCHnCI`CIbD@lCIdCIfCIhCIjCIlCInCBjCJ`CJbBNbCJdCJfCJhCJjCJlCJnCK`N`0CKbCKdBNfCKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMfDEfA@bBH`BGnCLhBBbCLjMjCLlCLnA@`BJdCM`CMbCMdBCbBGd01BLbN```3B@`2BH`?=OjBBb``CGb`CIfBMf777CGdCNd0```DAj:2CE`BFdBGhBHbCEdCEfCEhABbBKnCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlC@fCHfCHhBCb0CHjCHnCI`CIbD@lCIdCIfCIhCIjCIlCInCBjCJ`CJbBNb0CJdCJfCJjCJlCJnCK`N`00CKbCKdBNfCKjCKlCKnCL`CLbCLdCLfBM`A@bBH`0BGnCLhBBbCLjMjCLlA@`BJdCM`CMbCMdBCbAIj0BFd00BGh00BHb00CEd00CEf00CEh00ABb00BKn00CEl00CEn00CF`00CFb00CFd00CFf00CFh00CFj00CFl00CGb00CGd00CGf00CGh00CGj00CGl00CHf00CHh00BCb00CHn00CI`00CIb00CId00CIf00CIh00CIl00CIn00CBj00CJ`00CJb00CJd00CJf00CJj00CJl00CJn00CK`00N`00CKb00CKd00CKj00CKl00CKn00CL`00CLb00CLd00CLf00BM`00BGn00BBb00CLj00CLl00A@`00CMd00``DB`N`0BFd?BCb022```BGdBNj1AIl30`BMf4C@nA@j111ACfCCl701BLbBL`00BH`CGb;<`;<<AInAJ`5=>999AChDBhDBjAOnBMjCMjCDhCDlBLhCAbDBlBO`DBnCAhDC`DCbCNnCAlCB`CBbACf?>=:CAn`BGdBNlBCbBLb`1CHf0`BNbCDb44`N`0BOdCCjCCbCE`BFdBGhCEbBHb0CEdCEfCEhABbA@jBMlDCdBKnCElCEn0CF`0CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCHfCHhBCb0CHjCHnCI`CIbD@lCIdCIfCIhCIjCIlCInCBj0CJ`CJbBNbCJdCJfCJhCJj0CJl0CJn0CK`0N`00CKb0CKd0BNf0CKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMf0000A@bBH`BGnCLhBBbCLjMjCLlA@`BJdCM`CMbCMd`7CE`=`BMjCKnCKl`BCbCD`BNjAMj6CBfCA`CClBGd00BMdBMnCDhCDjCDlCDnBLhDKdDFdBNnCE`CAbBFdBGhCEbBHbBNlCEdDH`CEfDBlCO`CEhBL`CEjBO`DBnD@bCAhDOhDC`DCbABb0A@jCNnDKfCAnCAlCB`BKn0CElCBbCEnCF`CFbCFdCFfCFhDHhCFjCFlCFnCG`CGbCGdCGfCGh0CGjCGlCGnCH`CHbCHdC@fCHfCHhBCb0000000000000CHjCHlCHnCI`CIbD@l0CIdCIfCIhCIjCIlCInCBj0CJ`CJbBNb0000000000CJdCJfCJhCJjCJlCJnCK`N`00000000000000000CKbCKdBNf0000CKfCKhCKjCKlCKnCL`0CLbCLdCLfBM`0000CChBMfDEfA@bBH`0BGnCLh0BBbCLjMj000000000000CLlCLnA@`BJdCM`CMbCMdDDjBMf000DDlDE`DEbAMj0N`5EGf00ADl13310732?CNn3311DEf55BNbCO`CB`DEhALl0`AJb1CIfBGdDEjAJd5BH`CCh`BCb`00N`BLbBNjBNl<43AJfB@`10CD`<CLhDnCEj00D@dBN`DDj?BNn`CAlCB`>??>>?6CGbN`0`DCd`BBlALlBLbCMjCDhCDnBGdDFh11``BIlAJhBCb<10=8BFdBGhBHbCEdCEfCEhBKnCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlC@fCHfCHhBCbCHjCHnCI`CIbCIdCIfCIhCIlCInCBjCJ`CJbCJdCJfCJjCJlCJnCK`N`CKbCKdBNfCKjCKlCKnCL`CLbCLdCLfBM`BGnCLhBBbCLjCLlA@`CMdDFl00BMdBNlBCbN`C@n0CDjCDn`DFnCOnCDdCKfD@`CKhBMjBKnABbCGb```>`CAbCGlBFd>=21N`0CLfBHj`3BGh``DCbCNnBMn:CD`BNjAMjBMjCBfCA`CClBGdBMd9CDhCDjCDlCDnBLhDKdDFdBNnCE`CAbBFdBGhCEbBHbBNlCEdDH`CEfDBlCO`CEhBL`CEjBO`DBnD@bCAhDOhDC`DCbABbA@jCNnDKfCAnCAlCB`BKnCElCBbCEnCF`CFbCFdCFfCFhDHhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdC@fCHfCHhBCbCHjCHlCHnCI`CIbD@lCIdCIfCIhCIjCIlCInCBjCJ`CJbBNbCJdCJfCJhCJjCJlCJnCK`N`CKbCKdBNfCKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMfDEfA@bBH`BGnCLhBBbCLjMjCLlCLnA@`BJdCM`CMbCMdABbACfBGdDEjA@jCChBMf````BCb``011CD`BNjAMjBMjCBfCA`CCl<BMdBMnCDhCDjCDlCDnBLhDKdDFdBNnCE`CAbBFdBGhCEbBHbBNlCEdDH`CEfDBlCO`CEhBL`CEjBO`DBnD@bCAhDOhDC`DCbABbA@jCNnDKfCAnCAlCB`BKnCElCBbCEnCF`CFbCFdCFfCFhDHhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdC@fCHfCHhBCbCHjCHlCHnCI`CIbD@lCIdCIfCIhCIjCIlCInCBjCJ`CJbBNbCJdCJfCJhCJjCJlCJnCK`N`CKbCKdBNfCKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMfDEfA@bBH`BGnCLhBBbCLjMjCLlCLnA@`BJdCM`CMbCMdBEhN`9>AMj1DKdDFdBCbBMfBH`=DGbBNl88CGbBBnBGf;MjBGl;8CBjCEn`;`1BHb1CIf<BLbCAn?`AJjBCb456`00`AJl1COlCOnCDd4=4`74`7A@j5>ABbBBb``N`CLhBGfDAj35CF`4BHb;:9?ALlBMfBH`DDj2DGjBNjBGdBNlDEjDGl3DGn0BMjBKn1BL`DH`CJh0BFd`:9ALlBCbBLbDHd>N```CFbBGd?<ABl00`5BNl7BH`37FdFlCHf;888`DHfBHbDHhCLhMj=====BCb0<BMdCDlCNnCDnCGbCId6DGn00000000000000000000AJh8N`19CGlCHnCIbCIlFdFl``6BGdDH`BCb`0BNn0BNb020302`22`1?1111CIjCLh``DDj`BNj8BNlAHh8N`DJfBLbCJhD@lCIf`BGd87?4`908AJnBCb6DJh7DBl`CO`BBbCG`CMbCKfD@`CKhCDd21`BNj=BNlAHh=0CE`CKjA@bDJfBLbD@lCIfDFnCOn<?>=CGd`BCbCOl3?CKfBHb0BLn14BMbFdFl=CMjCDhCDlBMnCDjCDnDKfCGbCAb1BNjBNlAIdBCbBLb01:CChOjBBb44`DFnCOnCDdD@`BHbCKhN`CF`3<``3DJj==BNnEF`DBhDBjEFbDJlAMjBMjCDhCDlBLh:CAbBHbDBlCEjBO`DBnD@bCAhDC`DCbCNnCAnCAlBKnCBbBNbN`CKfCKhBM`CChBH`BBbMj772AK`BLbCGh:`05CDhCDl2<<<<<10<<<<DKdDFdBMlCBfCA`CAnBCb0`0BMfAIj0``ABbA@jCHf?BGd6D@lCIfCGdFdFlCAlCB`CJhBFdBGhCEjAIlBMjCLfBHjCFh0BGdCChBCbBLbCOlCOnCDd0CH`CHdDKf77`CDnCIdCLlBHb9DFn9CGb22N`1BFdBGhBCb33````0:DH`0``CMbDJf3BGd8BH`888888`1AJn6DJhBLbCOlCOnCDd>CGdCHf0CGbDL`?N`00CAlCB`2222CMj;CDhCDlCDjCDn9CLlBLb99`9AKb0BLnBCbBMbBMf`5BGd?BL`N```5`C@n60BNn11``7`7`CChAKd<BNj7BNl;CFbBMjDFh;>AKf?BLbBCbDLl10101011101010101010101010101DLnCDb3CEj0140`CIlCJhCMjCDhCDlBMnCDjCDnCGbCKn0DGnBNbBCb0BMlBGd00000DM`AKh0DBlBO`5CAnCAlCB`CJhBMnCDnDKfCGbCId5`BMf2>`DFnCOnCDdCKfD@`CKhN`BGd00CGdCHfCE`BFdBGhBHbCEdCEfCEhBKnCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlC@fCHfCHhBCbCHjCHnCI`CIbCIdCIfCIhCIjCIlCInCBjCJ`CJbBNb0000CJdCJfCJjCJlCJnCK`N`CKbCKdBNfCKjCKlCKnCL`CLbCLdCLfBM`A@bBGnCLhBBbCLjMjCLlCLnA@`BJdCM`CMbCMdCGl`AKhBMfBGdCAl0CBbDBlBO`DCb4CB`DBhBCbBH`AKjBLbBNj<BNl5AKl>6BKn7ACh58BGd00000CNdBMnCGbCLj1:48=<<6AKn=0=====`AIb;6:??60<N`CMjCDhCDl33C@nBLbBH`022`2`2BCbBFd>4>4CIl99BNjBGdBNlAL`68DNb9A@j8;;`;;;;;CFbCDdCKl;``>`>`>`>`>N`<BLn=BM`BMf0BMbBMjDH`BKn01`BNjBGdBNlAHhBCbDJfBLbBNbCBj=N`8BMd86ALb5DNf066ALd7BH``CGnCHbCHf`CKfCKh1CDdBGdCLn1CLhBNlDDj;ALf5DNjBLfBCbC@nBNj1DH`ABbCCl=BMdBMnCDhCDjCDlCDnCE`BFdBGhCEbBHbCEdCEfCEhCEjABbA@jBKnCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdC@fCHfCHhBCbCHjCHlCHnCI`CIbCIdCIfCIhCIjCIlCInCBjCJ`CJbBNbCJdCJfCJhCJjCJlCJnCK`N`CKbCKdBNfCKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMfA@bBH`BGnCLhBBbCLjMjCLlCLnA@`BJdCM`CMbCMdBCbBNnCDdBHbCEnCF`5CBjCJjCJlCJnCK`N`CKbCKdBNfDDjCLlC@n0DH`CHnCIlBMfCFb0BGdBH`000``ABl00DNlBHb0CEj10CGd21ANf660ANh077N`BAd000AEbAEd1000CD`BNjAMjBMjCBfCA`CClBGdBMdBMnCDhCDjCDlCDnBLhDKdDFdBNnCE`CAbBFdBGhCEbBHbBNlCEdDH`CEfDBlCO`CEhBL`CEjBO`DBnD@bCAhDOhDC`DCbABbA@jCNnDKfCAnCAlCB`BKnCElCBbCEnCF`CFbCFdCFfCFhDHhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdC@fCHfCHhBCbCHjCHlCHnCI`CIbD@lCIdCIfCIhCIjCIlCInCBjCJ`CJbBNbCJdCJfCJhCJjCJlCJnCK`N`0CKbCKdBNfCKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMfDEfA@bBH`BGnCLhBBbCLjMjCLlCLnA@`BJdCM`CMbCMdCJhDDjCD`BNjAMjBMjCBfCA`CClBGdBMdBMnCDhCDjCDlCDnBLhDKdDFdBNnCE`CAbBFdBGhCEbBHbBNlCEdDH`CEfDBlCO`CEhBL`CEjBO`DBnD@bCAhDOhDC`DCbABbA@jCNnDKfCAnCAlCB`BKnCElCBbCEnCF`CFbCFdCFfCFhDHhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdC@fCHfCHhBCbCHjCHlCHnCI`CIbD@lCIdCIfCIhCIjCIlCInCBjCJ`CJbBNbCJdCJfCJhCJjCJlCJnCK`N`CKbCKdBNfCKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMfDEfA@bBH`BGnCLhBBbCLjMjCLlCLnA@`BJdCM`CMbCMdCGbBNn0BCb11DJjCJbCJdCJfN`BH`11111BHbCGd133BOdCCbBN``4CEnCF`=CBjCJjCJlCJnCK`=CKbCKdBNfN`CD`BNjAMjBMjCBfCA`CClBGdBMdBMnCDhCDjCDlCDnBLhDKdDFdBNnCE`CAbBFdBGhCEbBHbBNlCEdDH`CEfDBlCO`CEhBL`CEjBO`DBnD@bCAhDOhDC`DCbABbA@jCNnDKfCAnCAlCB`BKnCElCBbCEnCF`CFbCFdCFfCFhDHhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdC@fCHfCHhBCbCHjCHlCHnCI`CIbD@lCIdCIfCIhCIjCIlCInCBjCJ`CJbBNbCJdCJfCJhCJjCJlCJnCK`N`CKbCKdBNfCKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMfDEfA@bBH`BGnCLhBBbCLjMjCLlCLnA@`BJdCM`CMbCMdCd`BMfAIdBNjBGdBNlBCbBLb`13432133N`0MjCGb4DOd0CAlCB`CDnCId`BMjBKnBH`0ALl:DAj>CLfBHj3434BNjBGdBNlAL`BCbBLbDNb187DOf0CJhN`CD`:AMjBMjCBfCA`CCl>BMdBMnCDhCDjCDlCDnBLhDKdDFdBNnCE`CAbBFdBGhCEbBHbBNlCEdDH`CEfDBlCO`CEhBL`CEjBO`DBnD@bCAhDOhDC`DCbABbA@jCNnDKfCAnCAlCB`BKnCElCBbCEnCF`CFbCFdCFfCFhDHhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdC@fCHfCHhBCbCHjCHlCHnCI`CIbD@lCIdCIfCIhCIjCIlCInCBjCJ`CJbBNbCJdCJfCJhCJjCJlCJnCK`N`CKbCKdBNfCKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMfDEfA@bBH`BGnCLhBBbCLjMjCLlCLnA@`BJdCM`CMbCMdN`COlCOnCDd10CEhBHbCKh1A@b`CH`CHdCE`CKj4BMjCKfCAlCB`CDlCAbDCbCDhEF`EFb2CNnCGb47BGdBKn111DBlBO`=4DKf49CGdDBnCAh1D@b1CBb90CAb0CKfCKhCDh8BNn1?19196BL`55322CGb>CAlCB`76765CDlDCbCNn5DBl5493936DC`3=:7BBb=<<=<;CGd>CMj==774BO`6;6;?CAb?3BGdCAh>9>49=<CHl294;:>=?02CDh4740CGb71><04CBb8522??<7=CAlCB`355BNn5CDlDCbCNn782107CKfCKh:>CGd>;:;:87>CMj<6:BKnCAb55>3>3BGdBH`0ALl1782ABl00000000000000000N`0CHnCIl`2222222BCbBLbCOlCOnCDdCKf`ALhEGhEGjEGl2102EGnEH`EHbEHd0EHfEHhEHjEHlEHnEI`EIbEId55EIfEIhEIj14;3EIl:EIn49EJ`EJb0>EJdEHd240;4:029513622><??>;EJfEJhEJj0EJlEJn4EK`EKbEKdEKf3EKh528EKj1EKl11098432323570;5EKnEL`ELb0ELdELfELhELjELl01ELn1EM`EMbEMdEMfEMhEMj697EFlEFn0EMl00EFhEFj10EMnEN`ENb21ENdENfENhENj03421ENl0CNb00``0E@h101`11100101010`10101010``1010101`01E@j00`00`000`0000`0`0000``````````BJjBJl0`AMbALnALj``````````````````````````````````EA`000000000000000EAb`CBh000000000000000EAd`0`00`0000000000000`00ENnEO`EOb32103210321032103321032103`21033210321032103`2103EOd00`EAh``0`EAf0`0EAlEAj321032222310321032103221033332EAn21402140214214321433321432143214342143````````BOj0000CE`COlCOnD@`3DFn213232114021320213230232DLl0000000000000132`433543`EBb0000``007777EB`8111111111111111`11111111`EBj``EBd000000000`0000EBf11111211111ECd0````0000``CMlEBnECbEBl3421034203`323232`03103421034232110342034333103110321034243022`32103421034231021``01031321034210342103421034233111`ED``EOf``1EDb1201202020201201202120202220002012022012012022012012012012077``777766EDd`00000000000`0000`B@f`JlEnDn```````21AGh`2``3`0320```32````3`````3200``32`3`3200``0`320``3230```00`40320``320```AOl`2EF`EFb````B@n``8``764``764``764``764``4`555444B@b875``4``5BA`Ld1010Al;:8`;:`;``939```````````BAn``35`=<;`<`<;9<`<;99````90`<;9``<;9``<;9``<;9``9;9`99ALl0;0ANf0ANh0ANn3`B@`0`BAd000`1Oj`AOn7777733DnBBl9BBn::```4EF`EFb;;::7777<<<10<`````AOl`B@b10``7`````1010````````````DDlDE`DEb`DAf00000000000000000000000000000000000000000000000000`BJn0`EDf000000000000000000``BNfCJj000111111CKbCJn33`03`CK`4144142221244444111114441224222CKd055355`51CJl443665555553555531446646633363631365636`13666166466364666366366664444246`4444446`1646`3344463333333336664633133````EGnEH`EHbEKnEL`ELb0ELdELfELhELjELl01ELn1EM`EMbEMdEMfEMhEMj697EMnEN`ENb21ENdENfENhENj03421ENl0`CJlCK`0`0EDh000`0000000000000000000000000000EDj000`0000000000000000000000000000````CFj0`````````EDl00000000000000000000000000000``````````DOb000000000`0000``000000000AMh00`````EE`CDd000000000000000000`````AKn0````FdFl1010101022```C@jC@n0000000``000000000`0000000`0`00000`00000`0`0`0`0`00000`CCh0000``EOhEOjMb``0``AIjBHh2````02AbBLb111111`0101100`110010011101111111111111111EEf352035211222212212112252152522222203522035252222203521125242224222225552222221211522203522222222222222222222222222222222222222222222222222222222222222122111122222215222222`2035203522220BGf32333322033332232333333333332232232333323223333333333333333333333333333333333333333333333333333332315333533332`233222333233326233363322331233223223333333332332332223333363333333333333331463333333333146333333333333333146333332322214633323``Ef000000000000000000000`````BLnEEjEEl`210BMbBn3232`3232323232432103232323232324321043210432103232323232``CDfGd10DAb0`00000000000000000000000000","f":"``````{{}b}`````````{{}d}````````{{fh}b}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Ah}}}}}d}{{{f{{l{c}}}}}AjAl}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}e}{}Al{AnB`}}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}}{{{l{Bd}}{l{Bd}}}}{{{l{Bb}}{l{Bb}}}}{{{f{{l{Bf}}}}{f{{l{Bf}}}}}}{{{l{Bf}}{l{Bf}}}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}}{{{f{{l{Bf}}}}{f{Bh}}}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}e}{}Al{AnB`}}{{{f{{l{Bd}}}}{f{{Bl{Bj}}}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{j}}}}{f{C`}}}Ab}{{{f{{l{Bd}}}}{f{C`}}}Ab}{{{f{{l{{Cb{c}}}}}}{f{C`}}}AbCd}{{{f{{l{c}}}}{f{C`}}}AbAl}{{{f{{l{Bb}}}}{f{C`}}}Ab}{{{f{{l{Bf}}}}{f{C`}}}Ab}{{{f{{l{Cf}}}}{f{C`}}}Ab}{{{f{{l{Ah}}}}{f{C`}}}Ab}{{{f{{l{Bb}}}}}d}{{{f{{l{Bb}}}}}{{Ch{d}}}}{{{f{{l{Cf}}}}}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{Ah}}}}}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{Ah}}}}Dd}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{Cf}}}}Dd}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}54{{{f{Df{l{c}}}}{f{{l{c}}}}}{{A`{bn}}}{{Dn{}{{Dh{Dj}}{Dl{Dj}}}}}}{{{f{{l{Bf}}}}c}{{l{Bf}}}{{Eb{{Ch{{f{Bh}}}}}{{Ad{{Ch{{E`{Bh}}}}}}}}Ed}}{{{f{{l{Bd}}}}c}{{l{Bd}}}{{Eb{{Ch{{f{{Bl{Bj}}}}}}}{{Ad{{Ch{{E`{{Bl{Bj}}}}}}}}}}Ed}}{{{f{{l{c}}}}e}{{l{c}}}Al{{Eb{Ch}{{Ad{Ch}}}}Ed}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Eb{{Ch{Ab}}}{{Ad{{Ch{Ab}}}}}}Ed}}{{{f{{l{{Cb{c}}}}}}e}{{l{{Cb{c}}}}}Cd{{Eb{{Ch{{f{c}}}}}{{Ad{{Ch{c}}}}}}Ed}}{{{f{{l{Bb}}}}c}{{l{Bb}}}{{Eb{{Ch{d}}}{{Ad{{Ch{d}}}}}}Ed}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Af{Ef}{{Ad{Ab}}}}}}{{{f{{l{Cf}}}}e}{{l{g}}}{}{{Af{{Ch{Ef}}}{{Ad{{Ch{c}}}}}}Ed}Dn}{{{f{{l{Ah}}}}e}{{l{g}}}{}{{Af{{Ch{Ef}}}{{Ad{{Ch{c}}}}}}Ed}Dn}{{{f{{l{Cf}}}}c}{{l{Cf}}}{{Af{Ef}{{Ad{Ab}}}}}}{{{f{{l{Eh}}}}c}Ab{{Eb{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Ej}}}}c}Ab{{Eb{{f{Ab}}}{{Ad{Ab}}}}}}{{{l{c}}e}{{l{c}}}Al{{Eb{}{{Ad{}}}}Ed}}{{{f{{l{c}}}}e}{{l{Bf}}}Dn{{Af{{f{DfEl}}}}}}{{{f{{l{Bb}}}}{f{Eb}}}{{l{Bb}}}}{{{f{{l{Bf}}}}{f{Eb}}}{{l{Bf}}}}{{{f{{l{c}}}}{f{Eb}}}{{l{c}}}Al}{{{f{{l{Bd}}}}{f{Eb}}}{{l{Bd}}}}{{{f{{l{Bb}}}}{f{Eb}}}{{l{c}}}Dn}{{{f{{l{c}}}}{f{Eb}}}{{l{e}}}AlDn}{{{f{{l{Bd}}}}{f{Eb}}}{{l{c}}}Dn}{{{f{{l{Bf}}}}{f{Eb}}}{{l{c}}}Dn}{{{f{Df{l{c}}}}e}bAl{{Eb{}{{Ad{}}}}Ed}}{{{f{{l{Bf}}}}c}{{l{Bf}}}{{Af{{f{Bh}}}{{Ad{{f{Bh}}}}}}}}{{{f{{l{Bd}}}}c}{{l{Bd}}}{{Af{{f{{Bl{Bj}}}}}{{Ad{{f{{Bl{Bj}}}}}}}}}}{{{f{{l{c}}}}Eng}{{l{i}}}Dn{}{{Af{}{{Ad{e}}}}}Dn}{{{f{{l{Cf}}}}{f{Eb}}}{{A`{{l{Cf}}n}}}}{{{f{{l{Ah}}}}{f{Eb}}}{{A`{{l{Ah}}n}}}}{{{f{{l{{Cb{c}}}}}}g{f{Df{Bl{e}}}}}bCd{}{{Eb{{Ch{{f{c}}}}{f{e}}}{{Ad{e}}}}}}{{{f{{l{Ah}}}}e{f{Df{Bl{c}}}}}b{}{{Eb{{Ch{Ab}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Bf}}}}e{f{Df{Bl{c}}}}}b{}{{Eb{{Ch{{f{Bh}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Bb}}}}e{f{Df{Bl{c}}}}}b{}{{Eb{{Ch{d}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Bd}}}}e{f{Df{Bl{c}}}}}b{}{{Eb{{Ch{{f{{Bl{Bj}}}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{c}}}}g{f{Df{Bl{e}}}}}bAl{}{{Eb{Ch{f{e}}}{{Ad{e}}}}}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Eb{Ab}{{Ad{Ab}}}}Ed}}{{{f{{l{c}}}}e}{{l{c}}}Al{{Eb{}{{Ad{}}}}Ed}}{{{f{{l{Bb}}}}c}{{l{Bb}}}{{Eb{d}{{Ad{d}}}}Ed}}{{{f{{l{Bf}}}}c}{{l{Bf}}}{{Eb{{f{Bh}}}{{Ad{{E`{Bh}}}}}}Ed}}{{{f{{l{{Cb{c}}}}}}e}{{l{{Cb{c}}}}}Cd{{Eb{{f{c}}}{{Ad{c}}}}Ed}}{{{f{{l{Bd}}}}c}{{l{Bd}}}{{Eb{{f{{Bl{Bj}}}}}{{Ad{{E`{{Bl{Bj}}}}}}}}Ed}}{{{f{{l{Bf}}}}c}{{l{Bf}}}{{Af{F`{f{Bh}}}{{Ad{F`}}}}Ed}}{{{f{{l{c}}}}}FbDn}{{{f{{l{c}}}}Fd}{{l{Ff}}}Al}{{{f{{l{Bb}}}}Fd}{{l{Ff}}}}{{{f{{l{Bd}}}}Fd}{{l{Ff}}}}{{{f{{l{Bf}}}}Fd}{{l{Ff}}}}{{{f{{l{Fh}}}}Fd}{{l{Ff}}}}{{{f{{l{j}}}}Fd}{{l{Ff}}}}{{{f{{l{Bd}}}}{f{{Bl{Fj}}}}{f{Fl}}}{{A`{{l{Ff}}n}}}}{{{f{{l{Bf}}}}{f{{Bl{Fj}}}}{f{Fl}}}{{A`{{l{Ff}}n}}}}{{{f{{l{c}}}}{f{{Bl{Fj}}}}{f{Fl}}}{{A`{{l{Ff}}n}}}Al}{{{f{{l{Fh}}}}{f{{Bl{Fj}}}}{f{Fl}}}{{A`{{l{Ff}}n}}}}{{{f{{l{Bb}}}}{f{{Bl{Fj}}}}{f{Fl}}}{{A`{{l{Ff}}n}}}}{{{f{{l{Bd}}}}}{{A`{{l{Ff}}n}}}}{{{f{{l{{Cb{c}}}}}}}{{A`{{l{Ff}}n}}}Cd}{{{f{{l{Bf}}}}}{{A`{{l{Ff}}n}}}}{{{f{{l{Bb}}}}}{{A`{{l{Ff}}n}}}}{{{f{{l{c}}}}}{{A`{{l{Ff}}n}}}Al}`{{{f{{l{Cf}}}}}{{f{{l{Cf}}}}}}{{{f{{l{Bd}}}}}{{f{{l{Bd}}}}}}{{{f{{l{Bf}}}}}{{l{Bd}}}}{{{f{{l{Ah}}}}}{{f{{l{Ah}}}}}}{{{f{{l{c}}}}}{{f{{l{c}}}}}Dn}{{{f{{l{c}}}}}{{f{En}}}Dn}{{{f{{l{Bf}}}}}{{f{{l{Bf}}}}}}0{{{f{{l{Ah}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{Ah}}}DnDn{{Af{{Ch{Ef}}ChCh}{{Ad{{Ch{Ab}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Fn}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}}{{{l{Bb}}{l{Bb}}}}120102{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0{{{f{{l{c}}}}}{{Cn{G`}}}Dn}``{{{f{{l{j}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}{{l{g}}}Al{{Eb{}{{Ad{}}}}Ed}Al}{{{f{{l{c}}}}{f{En}}}{{A`{Abn}}}Al}{{{f{{l{Bb}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{Fh}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{Bd}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{Ah}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{Cf}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{Bf}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{Ah}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{l{Bf}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{l{Fh}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{l{j}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{l{Bb}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{l{Bd}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{l{Cf}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{l{c}}}}{f{En}}Gb}{{A`{Abn}}}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Gd}{{{f{{l{c}}}}e}{{A`{Abn}}}GdB`}{{{f{{l{c}}}}}{{Gl{{Gf{{Cn{Cl}}}}{Gj{{f{{Cn{Cl}}}}}{{Ad{Gh}}}}}}}Dn}{{{f{{l{c}}}}}{{`{{D`{}{{Cj{Gh}}}}}}}Dn}{{{f{{l{c}}}}}{{f{{Gn{{Cn{Cl}}}}}}}Dn}{{{f{Df{l{c}}}}}{{f{Df{Gn{{Cn{Cl}}}}}}}Dn}{{{f{{l{c}}}}}{{l{c}}}Dn}0{{f{f{Dfc}}}b{}}{fb}`{{{f{Df{l{c}}}}}b{DnAl}}`{fH`}{{{f{{l{c}}}}}{{A`{{f{Bl}}n}}}Al}{{{f{Df{l{c}}}}{f{{l{c}}}}Hb}bDn}{{{f{Df{l{c}}}}{f{{l{e}}}}Hb}bDnDn}{{{f{{l{c}}}}}{{`{Hd}}}Al}{{}{{l{c}}}Dn}{Gh{{f{c}}}{}}0{Gh{{f{Dfc}}}{}}0{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{f{{l{c}}}}e}{}Al{AnB`}}{{{l{c}}{l{c}}}{}Al}{{{l{c}}e}{}Al{AnB`}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{Df{l{c}}}}}bDn}{Ghb}0{{{f{{l{c}}}}}{{l{c}}}Dn}{{{f{{l{c}}}}}{{f{En}}}Dn}{{{f{{l{c}}}}e}{{l{Bb}}}AlB`}{{{f{{l{Cf}}}}{f{{l{Cf}}}}}{{l{Bb}}}}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}{{l{Bb}}}}{{{f{{l{Bf}}}}{f{{l{Bf}}}}}{{l{Bb}}}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{Bb}}}}{{{f{{l{Bf}}}}{f{Bh}}}{{l{Bb}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Bb}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bb}}}Al}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Bb}}}}{{{f{{l{Bd}}}}{f{{Bl{Bj}}}}}{{l{Bb}}}}9243857160{{{f{{l{Ah}}}}}{{A`{{Hj{Ab{Hh{Hf}}}}n}}}}{{{f{{l{Cf}}}}}{{A`{{Hj{Ab{Hh{Hf}}}}n}}}}{{{f{Df{l{c}}}}{f{{l{c}}}}}{{A`{bn}}}Al}{{{f{{l{j}}}}{f{Bh}}}{{A`{Abn}}}}{{{f{{l{j}}}}}{{Gn{Ab}}}}{{{f{{l{Bd}}}}{f{{Bl{Bj}}}}}{{A`{{l{Bd}}n}}}}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}Al}{{{f{{l{Bb}}}}d}{{A`{{l{Bb}}n}}}}{{{f{{l{c}}}}{f{{l{Bb}}}}}{{A`{{l{c}}n}}}{{Dn{}{{Hl{Dj}}{Dl{Dj}}}}}}{{{f{{l{{Cb{c}}}}}}{f{{l{Bb}}}}}{{A`{{l{{Cb{c}}}}n}}}Cd}{{{f{{l{Bf}}}}{f{{l{Bb}}}}}{{A`{{l{Bf}}n}}}}{{{f{{l{Bd}}}}{f{{l{Bb}}}}}{{A`{{l{Bd}}n}}}}{{{f{{l{c}}}}}ChDn}{{{f{{l{c}}}}}{{Ch{Gh}}}Dn}`{{{f{{l{Ah}}}}{f{DfHn}}}{{A`{bI`}}}}{{{f{{l{c}}}}{f{DfHn}}}{{A`{bI`}}}Al}{{{f{{l{Cf}}}}{f{DfHn}}}{{A`{bI`}}}}{{{f{{l{{Cb{c}}}}}}{f{DfHn}}}{{A`{bI`}}}Cd}{{{f{{l{Bd}}}}{f{DfHn}}}{{A`{bI`}}}}{{{f{{l{Bf}}}}{f{DfHn}}}{{A`{bI`}}}}{{{f{{l{Bb}}}}{f{DfHn}}}{{A`{bI`}}}}{{{f{{l{c}}}}e}bDn{{Af{Ch}}}}{{{f{{l{Cf}}}}c}b{{Af{{Ch{Ef}}}}}}{{{f{{l{Ah}}}}c}b{{Af{{Ch{Ef}}}}}}{cc{}}{c{{l{e}}}Cl{{Dn{}{{Ib{c}}}}}}1{{Ddc}{{l{e}}}Id{{Dn{}{{Ib{}}}}Dn}}{{{f{{l{c}}}}e}{{l{c}}}{{Dn{}{{Ib{}}}}Dn}Id}{{Dd{Gn{{Cn{Cl}}}}}{{l{c}}}Dn}{{Dd{Gn{{Cn{Cl}}}}En}{{l{c}}}Dn}{{DdGh{f{{Bl{Fj}}}}}{{A`{{l{j}}n}}}}{e{{l{Bd}}}{{If{{Bl{Bj}}}}}{{Id{}{{Cj{{Ch{c}}}}}}}}{c{{l{e}}}{{Id{}{{Cj{{Hj{Gn{Ch{Ih}}}}}}}}}Al}{e{{l{Bd}}}{{Ij{{Bl{Bj}}}}}{{Id{}{{Cj{c}}}}}}{e{{l{{Cb{c}}}}}Cd{{Id{}{{Cj{{Ch{c}}}}}}}}{e{{l{Bf}}}{{Ij{Bh}}}{{Id{}{{Cj{c}}}}}}{e{{l{Ah}}}{{Il{Ab}}}{{Id{}{{Cj{c}}}}}}{c{{l{Ah}}}{{Id{}{{Cj{{Ch{Fj}}}}}}}}{c{{l{Ah}}}{{Id{}{{Cj{{Ch{Ab}}}}}}}}{e{{l{Bf}}}{{If{Bh}}}{{Id{}{{Cj{{Ch{c}}}}}}}}{c{{l{Ah}}}{{Id{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}{c{{l{Bb}}}{{Id{}{{Cj{d}}}}}}{c{{l{Bb}}}{{Id{}{{Cj{{Ch{d}}}}}}}}{c{{l{e}}}{{Id{}{{Cj{Ch}}}}}Al}{{Dde}{{l{Bd}}}{{If{{Bl{Bj}}}}}{{D`{}{{Cj{{Ch{c}}}}}}}}{{Dde}{{l{{Cb{c}}}}}Cd{{D`{}{{Cj{{Ch{c}}}}}}}}{{Ddc}{{l{e}}}{{D`{}{{Cj{Ch}}}}}Al}{{Dde}{{l{Bf}}}{{If{Bh}}}{{D`{}{{Cj{{Ch{c}}}}}}}}{{Ddc}{{l{Bb}}}{{D`{}{{Cj{{Ch{d}}}}}}}}6><5:7=9{e{{l{Bd}}}{{If{{Bl{Bj}}}}}{{Id{}{{Cj{{Ch{c}}}}}}}}{e{{l{Fh}}}{{Ij{{Bl{Bj}}}}}{{Id{}{{Cj{c}}}}}}{e{{l{Fh}}}{{If{{Bl{Bj}}}}}{{Id{}{{Cj{{Ch{c}}}}}}}}{e{{l{Bd}}}{{Ij{{Bl{Bj}}}}}{{Id{}{{Cj{c}}}}}}{{Dde}{{l{Bf}}}{{If{Bh}}}{{D`{}{{Cj{c}}}}}}{{Ddc}{{l{e}}}{{D`{}{{Cj{}}}}}Al}{{Dde}{{l{{Cb{c}}}}}Cd{{D`{}{{Cj{c}}}}}}{{Ddc}{{l{Bb}}}{{D`{}{{Cj{d}}}}}}{{Dde}{{l{Bd}}}{{If{{Bl{Bj}}}}}{{D`{}{{Cj{c}}}}}}`{e{{l{Bd}}}{{If{{Bl{Bj}}}}InJ`}{{Jb{}{{Cj{{Ch{c}}}}}}}}{e{{l{Bd}}}{{Ij{{Bl{Bj}}}}InJ`Jd}{{Jb{}{{Cj{c}}}}}}{e{{l{Bf}}}{{Ij{Bh}}InJ`Jd}{{Jb{}{{Cj{c}}}}}}{c{{l{Bb}}}{{Jb{}{{Cj{{Ch{d}}}}}}}}{c{{l{Ah}}}{{Jb{}{{Cj{{Ch{Ab}}}}}}}}{c{{l{Bb}}}{{Jb{}{{Cj{d}}}}}}{e{{l{Bf}}}{{If{Bh}}InJ`}{{Jb{}{{Cj{{Ch{c}}}}}}}}{c{{l{e}}}{{Jb{}{{Cj{Ch}}}}}Al}{{cDdEn}{{l{Ah}}}{{Jb{}{{Cj{{Ch{Ab}}}}}}}}{{DdGhc}{{A`{{l{j}}n}}}{{Jf{}{{Cj{{f{Ab}}}}}}Jh}}{{Dd{f{{Bl{c}}}}}{{l{Bf}}}{{If{Bh}}}}{{Dd{f{{Bl{c}}}}}{{l{Bd}}}{{If{{Bl{Bj}}}}}}{{Dd{f{Bl}}}{{l{c}}}Al}{{Dd{f{{Bl{c}}}}}{{l{{Cb{c}}}}}Cd}{{Dd{f{{Bl{d}}}}}{{l{Bb}}}}{{Dd{f{{Bl{{Ch{c}}}}}}}{{l{Bf}}}{{If{Bh}}}}{{Dd{f{{Bl{{Ch{c}}}}}}}{{l{Bd}}}{{If{{Bl{Bj}}}}}}{{Dd{f{{Bl{{Ch{c}}}}}}}{{l{{Cb{c}}}}}Cd}{{Dd{f{{Bl{{Ch{d}}}}}}}{{l{Bb}}}}{{Dd{f{{Bl{Ch}}}}}{{l{c}}}Al}{c{{l{Bb}}}{{Jj{}{{Cj{{Ch{d}}}}}}}}{c{{l{e}}}{{Jj{}{{Cj{Ch}}}}}Al}{{DdGn}{{l{c}}}Al}{{DdGn{Ch{Ih}}}{{l{c}}}Al}{{Dd{f{{Bl{Bj}}}}Gh}{{l{Fh}}}}{{DdGh}{{l{c}}}Al}{{DdcGh}{{l{{Cb{c}}}}}Cd}{{Dd{f{Ab}}Gh}{{l{Cf}}}}{{Dd{f{Ab}}Gh}{{l{Ah}}}}{{Dd{f{{Bl{Bj}}}}Gh}{{l{Bd}}}}{{Dd{f{Bh}}Gh}{{l{Bf}}}}{{DddGh}{{l{Bb}}}}{{DdGh}{{l{{Cb{c}}}}}Cd}7{{DdGh}{{l{j}}}}{{DdGh}{{l{Cf}}}}{{DdGh}{{l{Ah}}}}{{DdGh}{{l{Fh}}}}{{DdGh}{{l{Bd}}}}{{DdGh}{{l{Bf}}}}{{DdGh}{{l{Bb}}}}{{{f{{l{c}}}}Gh}{{l{c}}}Dn}{{DdGh{f{En}}}{{l{Ah}}}}{{DdGh{f{En}}Gh}{{l{Cf}}}}{{{f{{l{c}}}}Gh}ChDn}{{{f{{l{c}}}}Gh}{{A`{Jln}}}Al}{{{f{{l{j}}}}Gh}{{A`{Jln}}}}{{{f{{l{Bd}}}}Gh}{{A`{Jln}}}}{{{f{{l{Cf}}}}Gh}{{A`{Jln}}}}{{{f{{l{Bb}}}}Gh}{{A`{Jln}}}}{{{f{{l{Ah}}}}Gh}{{A`{Jln}}}}{{{f{{l{{Cb{c}}}}}}Gh}{{A`{Jln}}}Cd}{{{f{{l{Fh}}}}Gh}{{A`{Jln}}}}{{{f{{l{Bf}}}}Gh}{{A`{Jln}}}}{{{f{{l{Bf}}}}Gh}Jl}{{{f{{l{c}}}}Gh}JlAl}{{{f{{l{{Cb{c}}}}}}Gh}JlCd}{{{f{{l{j}}}}Gh}Jl}{{{f{{l{Fh}}}}Gh}Jl}{{{f{{l{Ah}}}}Gh}Jl}{{{f{{l{Bd}}}}Gh}Jl}{{{f{{l{Bb}}}}Gh}Jl}{{{f{{l{Cf}}}}Gh}Jl}{{{f{{l{Cf}}}}Gh}{{Ch{Ab}}}}{{{f{{l{Ah}}}}Gh}{{Ch{Ab}}}}{{{f{{l{c}}}}}{{Ch{Fb}}}Dn}{{{f{{l{c}}}}}dDn}{{{f{{l{c}}}}}JnDn}{{{f{{l{Ah}}}}}Ab}{{{f{{l{Cf}}}}}Ab}0{{{f{{l{c}}}}}ChDn}0{{{f{{l{{Cb{c}}}}}}Gh}{{Ch{{f{K`}}}}}Cd}0{{{f{{l{j}}}}Fd}{{A`{{l{Fh}}n}}}}{{{f{{l{j}}}}Fd}{{A`{{Kb{Hf}}n}}}}{{{f{{l{c}}}}Gh}ChDn}{{{f{{l{Fh}}}}}Gh}{{{f{{l{Ah}}}}}Gh}{{{f{{l{Cf}}}}}Gh}{{{f{{l{Bf}}}}}Gh}{{{f{{l{c}}}}dd}{{A`{C`n}}}Al}{{{f{{l{Bb}}}}dd}{{A`{C`n}}}}{{{f{{l{Bf}}}}dd}{{A`{C`n}}}}{{{f{{l{{Cb{c}}}}}}dd}{{A`{C`n}}}Cd}{{{f{{l{Cf}}}}dd}{{A`{C`n}}}}{{{f{{l{Ah}}}}dd}{{A`{C`n}}}}{{{f{{l{Fh}}}}dd}{{A`{C`n}}}}{{{f{{l{Bd}}}}dd}{{A`{C`n}}}}{{{f{{l{c}}}}GhdGh}C`Fn}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{Bb}}}}{{{f{{l{Bf}}}}{f{{l{Bf}}}}}{{l{Bb}}}}{{{f{{l{Bd}}}}{f{{Bl{Bj}}}}}{{l{Bb}}}}{{{f{{l{c}}}}e}{{l{Bb}}}AlB`}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}{{l{Bb}}}}{{{f{{l{Bf}}}}{f{Bh}}}{{l{Bb}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bb}}}Al}3624051{{{f{{l{c}}}}}dDn}{{{f{{l{c}}}}{Ch{Gh}}}{{l{c}}}Dn}{{}Gh}0{{GhKd{Ch{Kf}}}{{l{c}}}Al}{{{f{{l{Cf}}}}}{{f{En}}}}{{{f{{l{Ah}}}}}{{f{En}}}}{{{f{{l{c}}}}}{{Kj{{Kh{c}}}}}Dn}{{}c{}}0{{}Fj}{{{l{Kl}}}{{L`{KnKl}}}}{{{l{Lb}}Ld{Ch{Dd}}}{{L`{LfLb}}}}{{{l{Lh}}{Ch{Gh}}Gh}{{A`{{L`{LjLh}}n}}}}{{{l{Lh}}{Ch{Gh}}Gh}{{L`{LjLh}}}}{{{l{Lb}}Ld}{{L`{LlLb}}}}{{{f{{l{Ah}}}}}}{{{f{{l{{Cb{c}}}}}}}{}Cd}{{{f{{l{Fh}}}}}}{{{f{{l{Bd}}}}}}{{{f{{l{Bf}}}}}}{{{f{{l{Bb}}}}}}{{{f{{l{c}}}}}{}Al}{{{f{{l{Cf}}}}}}{{{f{{l{c}}}}}{{`{InJ`JfHdJj}}}Al}{{{l{c}}}AbDn}{{{l{Lh}}}Ab}{{{l{Lb}}}{{L`{LnLb}}}}{{{f{{l{c}}}}}dDn}{{{f{{l{c}}}}}{{l{Bb}}}M`}000{{{f{{l{c}}}}}{{l{Bb}}}Dn}02{{{f{{l{c}}}}}MbDn}{{{f{{l{c}}}}}{{`{Md}}}Dn}{{{f{{l{c}}}}}{{`{{D`{}{{Cj{{l{c}}}}}}}}}Dn}{{{f{{l{c}}}}}{{Gl{{Gf{{Cn{Cl}}}}{Gj{{f{{Cn{Cl}}}}}{{Ad{{Ch{{f{Ih}}}}}}}}}}}Dn}`{{fc}H`{{If{Bh}}}}{{{f{{l{c}}}}}ChDn}{{{f{{l{c}}}}}{{Ch{Gh}}}Dn}{{{f{{l{c}}}}}{{Mf{c}}}Dn}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}}{}Al}{{{f{{l{c}}}}}{}Al}10{{{f{{l{c}}}}}GhDn}0{{{f{{l{c}}}}e}{{l{c}}}Al{AnMh}}00{{{f{{l{c}}}}Gh}{{l{c}}}Dn}{{{f{{l{c}}}}e}{{l{Bb}}}AlB`}{{{f{{l{Bd}}}}{f{{Bl{Bj}}}}}{{l{Bb}}}}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}{{l{Bb}}}}{{{f{{l{Bf}}}}{f{Bh}}}{{l{Bb}}}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{Bb}}}}{{{f{{l{Bf}}}}{f{{l{Bf}}}}}{{l{Bb}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bb}}}Al}5402163{{{f{{l{c}}}}}ChAl}{{{f{{l{Bb}}}}}{{Ch{d}}}}{{{f{{l{Bd}}}}}{{Ch{{f{{Bl{Bj}}}}}}}}{{{f{{l{Bd}}}}}Mj}{{{f{{l{Bb}}}}}Mj}{{{f{{l{c}}}}}MjAl}{{{f{{l{Bf}}}}}Mj}{{{f{{l{Bb}}}}}{{Ch{Aj}}}}{{{f{{l{c}}}}}{{Ch{Aj}}}Al}{{{f{{l{Eh}}}}}{{Ch{Kd}}}}{{{f{{l{c}}}}}{{Ch{Aj}}}Fn}{{{f{{l{Ej}}}}}{{Ch{Aj}}}}{{{f{{l{Ej}}}}}Mj}{{{f{{l{Eh}}}}}Mj}{{{f{{l{c}}}}}MjFn}{{{f{Df{l{c}}}}{Kh{c}}}bDn}`{{{f{{l{c}}}}}{{Ml{c}}}Dn}{{{f{{l{c}}}}}{{f{{N`{{Mn{c}}}}}}}Dn}{{{f{{l{c}}}}}{{Ch{{Nb{G`}}}}}Dn}{{{f{Df{l{c}}}}}{{f{Df{N`{{Mn{c}}}}}}}Dn}{{{f{{l{c}}}}}{{N`{{Mn{c}}}}}Dn}{{{f{{l{c}}}}}ChAl}{{{f{{l{Bb}}}}}{{Ch{d}}}}{{{f{{l{Bd}}}}}{{Ch{{f{{Bl{Bj}}}}}}}}{{{f{{l{c}}}}}{{Ch{Hj}}}Al}{{{f{{l{Bf}}}}}Mj}{{{f{{l{Bd}}}}}Mj}{{{f{{l{c}}}}}MjAl}{{{f{{l{Bb}}}}}Mj}{{Dd{f{Bl}}}{{l{c}}}Al}{{Dd{f{{Bl{Bj}}}}GhGh}{{l{Bb}}}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}e}{}Al{AnB`}}{{{f{{l{c}}}}e}{}Al{AnB`}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{c}}}}}GhDn}{{{f{{l{Bd}}}}}{{A`{Ghn}}}}{{{f{{l{c}}}}}{{A`{Ghn}}}Al}{{{f{{l{Bf}}}}}{{A`{Ghn}}}}{{{f{{l{c}}}}}{{f{Dd}}}Dn}{{Ddc}{{l{Ff}}}{{If{{Bl{{Ch{Fb}}}}}}}}{{Ddc}{{l{Nd}}}{{If{{Bl{{Ch{Nf}}}}}}}}{{Ddc}{{l{Nh}}}{{If{{Bl{Bj}}}}}}{{Dde}{{l{{Cb{c}}}}}Cd{{If{{Bl{{Ch{c}}}}}}}}{{Dd{f{{Bl{c}}}}}{{l{{Cb{c}}}}}Cd}{{Ddc}{{l{Bb}}}{{If{{Bl{d}}}}}}{{Ddc}{{l{Bd}}}{{If{{Bl{{E`{{Bl{Bj}}}}}}}}}}{{Ddc}{{l{Bd}}}{{If{{Bl{{Gn{Bj}}}}}}}}{{Ddc}{{l{Bd}}}{{If{{Bl{{Ch{{f{{Bl{Bj}}}}}}}}}}}}{{Ddc}{{l{Bd}}}{{If{{Bl{{f{{Bl{Bj}}}}}}}}}}{{Ddc}{{l{Bf}}}{{If{{Bl{{Ch{{E`{Bh}}}}}}}}}}{{Ddc}{{l{Bf}}}{{If{{Bl{El}}}}}}{{Ddc}{{l{Bf}}}{{If{{Bl{{E`{Bh}}}}}}}}{{Ddc}{{l{Nd}}}{{If{{Bl{Nf}}}}}}{{Ddc}{{l{Ff}}}{{If{{Bl{Fb}}}}}}{{Ddc}{{l{Nj}}}{{If{{Bl{Kf}}}}}}{{Ddc}{{l{Bf}}}{{If{{Bl{{Ch{{f{Bh}}}}}}}}}}{{Ddc}{{l{Bf}}}{{If{{Bl{{f{Bh}}}}}}}}{{Dd{Nl{Fb}}}{{l{Ff}}}}{{Dd{Nl{Kf}}}{{l{Nj}}}}{{Dd{Nl{Nn}}}{{l{Kl}}}}{{Dd{Nl{Hf}}}{{l{Lb}}}}{{Ddc}{{l{Ej}}}{{If{{Bl{{Ch{Aj}}}}}}}}{{Ddc}{{l{Eh}}}{{If{{Bl{{Ch{Kd}}}}}}}}{{Ddc}{{l{Lh}}}{{If{{Bl{{Ch{O`}}}}}}}}{{Ddc}{{l{Lb}}}{{If{{Bl{{Ch{Hf}}}}}}}}{{Ddc}{{l{Ob}}}{{If{{Bl{Od}}}}}}{{Ddc}{{l{Of}}}{{If{{Bl{Oh}}}}}}{{Ddc}{{l{Kl}}}{{If{{Bl{{Ch{Nn}}}}}}}}{{Ddc}{{l{Kl}}}{{If{{Bl{Nn}}}}}}{{Ddc}{{l{Of}}}{{If{{Bl{{Ch{Oh}}}}}}}}{{Ddc}{{l{Lb}}}{{If{{Bl{Hf}}}}}}{{Ddc}{{l{Lh}}}{{If{{Bl{O`}}}}}}{{Ddc}{{l{Eh}}}{{If{{Bl{Kd}}}}}}{{Ddc}{{l{Ob}}}{{If{{Bl{{Ch{Od}}}}}}}}{{Ddc}{{l{Nj}}}{{If{{Bl{{Ch{Kf}}}}}}}}{{Ddc}{{l{Ej}}}{{If{{Bl{Aj}}}}}}{{Ddc}{{l{Bf}}}{{If{{Bl{{Ch{El}}}}}}}}{{Ddc}{{l{Bd}}}{{If{{Bl{{Ch{{Gn{Bj}}}}}}}}}}{{Ddc}{{l{Bb}}}{{If{{Bl{{Ch{d}}}}}}}}{{Ddc}{{l{Nh}}}{{If{{Bl{{Ch{Bj}}}}}}}}{{Ddc}{{l{Bd}}}{{If{{Bl{{Ch{{E`{{Bl{Bj}}}}}}}}}}}}{Dd{{l{{Cb{c}}}}}Cd}{{{f{{l{Ah}}}}GhGh}{{l{Ah}}}}{{{f{{l{Fh}}}}GhGh}{{l{Fh}}}}{{{f{{l{j}}}}GhGh}{{l{j}}}}{{{f{{l{Bd}}}}GhGh}{{l{Bd}}}}{{{f{{l{Cf}}}}GhGh}{{l{Cf}}}}{{{f{{l{Bf}}}}GhGh}{{l{Bf}}}}{{{f{{l{Bb}}}}GhGh}{{l{Bb}}}}{{{f{{l{c}}}}GhGh}{{l{c}}}Al}{{{f{{l{{Cb{c}}}}}}GhGh}{{l{{Cb{c}}}}}Cd}{{Dd{Gn{c}}}{{l{{Cb{c}}}}}Cd}{{Dd{Gn{c}}Ih}{{l{{Cb{c}}}}}Cd}{{DdGn}{{l{c}}}Al}{{{N`{Oj}}{Gn{{Cn{Cl}}}}FbFb}{{l{c}}}Dn}{{{f{{l{c}}}}}{{l{c}}}M`}{{{f{{l{Bb}}}}}}{{{l{Bb}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Bb}}}}{{{f{{l{Bd}}}}{f{{Bl{Bj}}}}}{{l{Bb}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bb}}}Al}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}{{l{Bb}}}}{{{f{{l{c}}}}e}{{l{Bb}}}AlB`}{{{f{{l{Bf}}}}{f{Bh}}}{{l{Bb}}}}{{{f{{l{Cf}}}}{f{{l{Cf}}}}}{{l{Bb}}}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{Bb}}}}{{{f{{l{Bf}}}}{f{{l{Bf}}}}}{{l{Bb}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Bb}}}}4879056{{{f{{l{Cf}}}}{f{{l{Cf}}}}}}32{{{f{{l{c}}}}}GhDn}{{{f{{l{Bb}}}}}Gh}0`{{{f{{l{Ah}}}}}{{A`{{Hh{Hf}}n}}}}{{{f{{l{Cf}}}}}{{A`{{Hh{Hf}}n}}}}`{{{f{{l{Bf}}}}}{{`{{Ol{}{{Cj{{Ch{{f{Bh}}}}}}}}}}}}{{{f{{l{Ah}}}}}{{`{{Ol{}{{Cj{{Ch{Ab}}}}}}}}}}{{{f{Df{l{Ah}}}}}{{`{On}}}}{{{f{{l{Bf}}}}}{{`{On}}}}{{{f{{l{c}}}}}MjAl}{{{f{Df{l{c}}}}}bDn}{{{f{{l{Ej}}}}AjA@`}{{A`{{Ch{Aj}}n}}}}{{{f{{l{Eh}}}}AjA@`}{{A`{{Ch{Kd}}n}}}}{{{f{{l{c}}}}AjA@`}{{A`{{Ch{Aj}}n}}}Fn}{{{f{{l{Ej}}}}AjA@`}{{A`{Mjn}}}}{{{f{{l{Eh}}}}AjA@`}{{A`{Mjn}}}}{{{f{{l{c}}}}AjA@`}{{A`{Mjn}}}Fn}{{DdGhAj}{{A`{{l{Bb}}n}}}}{{DdGhAjAj}{{A`{{l{c}}n}}}Al}{{DdGh}{{l{c}}}Al}{{DdGhAjAj}{{l{c}}}Al}{{{f{{l{c}}}}}{{l{c}}}Dn}{{{f{{l{Ah}}}}}{{l{Ah}}}}{{{f{{l{c}}}}}{{Ch{Ih}}}Dn}{{{f{{l{c}}}}}{{f{Oj}}}Dn}{{{f{{l{Of}}}}}Ab}{{{f{{l{Eh}}}}}Ab}{{{f{{l{Ah}}}}}Ab}{{{f{{l{Kl}}}}}Ab}{{{f{{l{Ff}}}}}Ab}{{{f{{l{Nd}}}}}Ab}{{{f{{l{Lb}}}}}Ab}{{{f{{l{Ej}}}}}Ab}{{{f{{l{Ob}}}}}Ab}{{{f{{l{Nh}}}}}Ab}{{{f{{l{Nj}}}}}Ab}3162058749:{{{f{{l{c}}}}e}{}Al{AnB`}}{{{l{c}}e}{}Al{AnB`}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{Df{l{c}}}}Dd}bDn}{{{f{{l{Cf}}}}}{{l{Cf}}}}{{{f{{l{{Cb{c}}}}}}}{{l{{Cb{c}}}}}Cd}{{{f{{l{Bf}}}}}{{l{Bf}}}}{{{f{{l{Bd}}}}}{{l{Bd}}}}{{{f{{l{Ah}}}}}{{l{Ah}}}}{{{f{{l{Fh}}}}}{{l{Fh}}}}{{{f{{l{Bb}}}}}{{l{Bb}}}}{{{f{{l{c}}}}}{{l{c}}}Al}{{{f{{l{c}}}}{f{Eb}}A@b}{{A`{Abn}}}Al}{{{f{{l{c}}}}Ghe}{{A`{{l{c}}n}}}M`{{Af{{f{Df{l{c}}}}}{{Ad{Ch}}}}}}{{{f{{l{c}}}}Ajdd{Ch{Kf}}}{{A`{{l{c}}n}}}Dn}{{{f{{l{c}}}}Ghdd{Ch{Kf}}}{{A`{{l{c}}n}}}Dn}{{{f{{l{Bb}}}}{f{{Bl{Fb}}}}c}{{A`{Abn}}}{{Id{}{{Cj{{Ch{d}}}}}}}}{{{f{{l{Bf}}}}{f{{Bl{Fb}}}}c}{{A`{Abn}}}{{Id{}{{Cj{{Ch{{f{Bh}}}}}}}}}}{{{f{Df{l{c}}}}{f{{Bl{Fb}}}}e}{{A`{Abn}}}A@d{{Id{}{{Cj{Ch}}}}}}{{{f{{l{Bf}}}}c{Ch{{f{Bh}}}}}{{A`{{l{Bf}}n}}}{{Id{}{{Cj{Fb}}}}}}{{{f{{l{Bd}}}}c{Ch{{f{{Bl{Bj}}}}}}}{{A`{{l{Bd}}n}}}{{Id{}{{Cj{Fb}}}}}}{{{f{{l{c}}}}eCh}{{A`{{l{c}}n}}}Al{{Id{}{{Cj{Fb}}}}}}{{{f{{l{Bb}}}}c{Ch{d}}}{{A`{{l{Bb}}n}}}{{Id{}{{Cj{Fb}}}}}}{{{f{{l{Bb}}}}ce}{{A`{{l{Bb}}n}}}{{Id{}{{Cj{Fb}}}}}{{Eb{{Ch{d}}}{{Ad{{Ch{d}}}}}}}}{{{f{{l{c}}}}eg}{{A`{{l{c}}n}}}Al{{Id{}{{Cj{Fb}}}}}{{Eb{Ch}{{Ad{Ch}}}}}}{{{f{{l{Bd}}}}ce}{{A`{{l{Bd}}n}}}{{Id{}{{Cj{Fb}}}}}{{Eb{{Ch{{f{{Bl{Bj}}}}}}}{{Ad{{Ch{{Gn{Bj}}}}}}}}}}{{{f{{l{Bf}}}}ce}{{A`{{l{Bf}}n}}}{{Id{}{{Cj{Fb}}}}}{{Eb{{Ch{{f{Bh}}}}}{{Ad{{Ch{El}}}}}}}}{{{f{{l{Cf}}}}c}A`A@f}{{{f{{l{Bd}}}}c}A`A@f}{{{f{{l{Ah}}}}c}A`A@f}{{{f{{l{Bb}}}}c}A`A@f}{{{f{{l{j}}}}c}A`A@f}{{{f{{l{c}}}}e}A`AlA@f}{{{f{{l{Bf}}}}c}A`A@f}{{{f{{l{c}}}}{f{{l{Bb}}}}Ch}{{A`{{l{c}}n}}}Al}{{{f{{l{Bf}}}}{f{{l{Bb}}}}{Ch{{f{Bh}}}}}{{A`{{l{Bf}}n}}}}{{{f{{l{Bb}}}}{f{{l{Bb}}}}{Ch{d}}}{{A`{{l{Bb}}n}}}}{{{f{{l{Bd}}}}{f{{l{Bb}}}}{Ch{{f{{Bl{Bj}}}}}}}{{A`{{l{Bd}}n}}}}{{{f{Df{l{Ah}}}}}b}{{{f{Df{l{c}}}}d}bDn}{{{f{Df{l{Ah}}}}En}b}{{{f{Df{l{c}}}}Fb}bDn}{{{f{Df{l{c}}}}Mb}bDn}{{{f{{l{Bd}}}}Hf}{{l{Bd}}}}{{{f{{l{j}}}}Hf}{{l{j}}}}{{{f{{l{{Cb{c}}}}}}Hf}{{l{{Cb{c}}}}}Cd}{{{f{{l{c}}}}Hf}{{l{c}}}Al}{{{f{{l{Ah}}}}Hf}{{l{Ah}}}}{{{f{{l{Bb}}}}Hf}{{l{Bb}}}}{{{f{{l{Cf}}}}Hf}{{l{Cf}}}}{{{f{{l{Bf}}}}Hf}{{l{Bf}}}}{{{f{{l{Fh}}}}Hf}{{l{Fh}}}}{{{f{{l{c}}}}HfCh}{{l{c}}}Al}{{{f{{l{{Cb{c}}}}}}Hf{Ch{{Cb{c}}}}}{{l{{Cb{c}}}}}Cd}{{{f{{l{Ah}}}}Hf{Ch{{f{Ab}}}}}{{l{Ah}}}}{{{f{{l{Fh}}}}Hf{Ch{{f{{Bl{Bj}}}}}}}{{l{Fh}}}}{{{f{{l{Bd}}}}Hf{Ch{{f{{Bl{Bj}}}}}}}{{l{Bd}}}}{{{f{{l{Bf}}}}Hf{Ch{{f{Bh}}}}}{{l{Bf}}}}{{{f{{l{Bb}}}}Hf{Ch{d}}}{{l{Bb}}}}{{{f{{l{Cf}}}}Hf{Ch{{f{Ab}}}}}{{l{Cf}}}}{{{f{Df{l{c}}}}}bDn}{{{f{{l{c}}}}HfGh}{{l{c}}}Dn}0{{{f{{l{Bd}}}}d}{{l{Bd}}}}{{{f{{l{Bb}}}}d}{{l{Bb}}}}{{{f{{l{c}}}}d}{{l{c}}}Al}{{{f{{l{Fh}}}}d}{{l{Fh}}}}{{{f{{l{Bf}}}}d}{{l{Bf}}}}{{{f{{l{j}}}}d}{{l{j}}}}{{{f{{l{c}}}}Fd}{{l{c}}}Al}{{{f{{l{Fh}}}}Fd}{{l{Fh}}}}{{{f{{l{Bd}}}}Fd}{{l{Bd}}}}{{{f{{l{Bb}}}}Fd}{{l{Bb}}}}{{{f{{l{j}}}}Fd}{{l{j}}}}{{{f{{l{Bf}}}}Fd}{{l{Bf}}}}{{{f{{l{c}}}}Hf}{{Hj{{l{c}}{l{c}}}}}Dn}0{{{f{{l{c}}}}Bj}{{Ch{Aj}}}Al}{{{f{{l{Ej}}}}Bj}Mj}{{{f{{l{c}}}}Bj}MjFn}{{{f{{l{Eh}}}}Bj}Mj}{{{f{{l{j}}}}}{{f{{Bl{Oj}}}}}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{f{{l{c}}}}e}{}Al{AnB`}}{{{l{c}}e}{}Al{AnB`}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{Bb}}}}}{{Ch{Fb}}}}{{{f{{l{c}}}}}ChAl}{{{f{{l{Bb}}}}}Mj}{{{f{{l{c}}}}}MjAl}{{{f{{l{Bd}}}}}Mj}{{{f{{l{c}}}}{Ch{Gh}}}{{l{c}}}Dn}{{{f{{l{c}}}}{f{{l{Ff}}}}}{{A`{{l{c}}n}}}Dn}{{{f{{l{c}}}}{f{e}}}{{A`{{l{c}}n}}}Dn{{If{{Bl{Fb}}}}A@h}}{{{f{{l{c}}}}{f{{Bl{A@j}}}}Mb}{{l{c}}}Dn}{{{f{{l{c}}}}{f{{Bl{A@j}}}}}{{l{c}}}Dn}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Dn{}{{Hl{Dj}}{A@l{Dj}}{Dh{Dj}}}}Dn}{{If{{Bl{Fb}}}}A@h}}{{{f{{l{Bf}}}}{f{c}}}{{l{Bf}}}{{If{{Bl{Fb}}}}A@h}}{{{f{{l{j}}}}{f{{l{Ff}}}}}{{l{j}}}}{{{f{{l{j}}}}{f{c}}}{{l{j}}}{{If{{Bl{Fb}}}}A@h}}{{{f{{l{Bd}}}}{f{c}}}{{l{Bd}}}{{If{{Bl{Fb}}}}A@h}}{{{f{{l{Cf}}}}{f{{l{Ff}}}}}{{l{Cf}}}}{{{f{{l{Cf}}}}{f{c}}}{{l{Cf}}}{{If{{Bl{Fb}}}}A@h}}{{{f{{l{Ah}}}}{f{{l{Ff}}}}}{{l{Ah}}}}{{{f{{l{Ah}}}}{f{c}}}{{l{Ah}}}{{If{{Bl{Fb}}}}A@h}}{{{f{{l{Bf}}}}{f{{l{Ff}}}}}{{l{Bf}}}}{{{f{{l{Bd}}}}{f{{l{Ff}}}}}{{l{Bd}}}}{{{f{{l{c}}}}{f{{l{Ff}}}}}{{l{c}}}{{Dn{}{{Hl{Dj}}{A@l{Dj}}{Dh{Dj}}}}Dn}}`{{{f{{l{c}}}}dA@n}{{Gn{{Gn{AA`}}}}}Dn}{{{f{{l{c}}}}}{{l{c}}}M`}{{{f{{l{Bf}}}}Gh}{{A`{Abn}}}}{{{f{Df{l{Cf}}}}En}b}{{{f{Df{l{Ah}}}}En}b}{{{f{{l{Ah}}}}}{{A`{{AAh{AAb{AAf{{AAd{Gh}}}}}}n}}}}{{{f{{l{c}}}}}{{A`{{AAh{{AAj{f}}{AAf{{AAd{Gh}}}}}}n}}}Al}{fc{}}{{{f{{l{Bd}}}}}{{l{Bf}}}}{{{f{{l{c}}}}}{{Gn{Ch}}}Al}{{{f{{l{c}}}}}{{AAl{Gn{Gn{Ch}}}}}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}}{}Al}{{{l{c}}}{}Al}10{{{f{{l{Ah}}}}c}{{A`{{l{Ah}}n}}}{{Af{Ef}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{Cf}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Ch{Ef}}}{{Ad{{A`{{Ch{c}}n}}}}}}Ed}Dn}{{{f{{l{Ah}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Ch{Ef}}}{{Ad{{A`{{Ch{c}}n}}}}}}Ed}Dn}{{{f{{l{Cf}}}}c}{{A`{{l{Cf}}n}}}{{Af{Ef}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{Cf}}}}c}{{A`{{l{Ah}}n}}}{{Af{Ef}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{c}}}}g}{{A`{{l{Bf}}e}}}Dn{}{{Af{{f{DfEl}}}{{Ad{{A`{be}}}}}}}}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dn}{c{{A`{e}}}{}{}}0{{Ddg}{{A`{{l{i}}e}}}Cl{}{{Id{}{{Cj{{A`{ce}}}}}}}{{Dn{}{{Ib{c}}}}Dn}}{{}{{A`{c}}}{}}0{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{A`{{l{Ah}}n}}}Dn{{Af{{Ch{Ef}}Ch}{{Ad{{A`{{Ch{Ab}}n}}}}}}}}{fAAn}0{{{f{{l{Bf}}}}}{{A`{{l{Bf}}n}}}}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}Al}{{{f{{l{Bd}}}}}{{A`{{l{Bd}}n}}}}{{{f{{l{{Cb{c}}}}}}}{{A`{{l{{Cb{c}}}}n}}}Cd}{{{f{{l{Bb}}}}}{{A`{{l{Bb}}n}}}}{{{l{j}}}AB`}{{{f{{l{c}}}}{f{Ab}}}{{A`{{f{{l{c}}}}n}}}Dn}{{{f{Df{l{c}}}}}bDn}{{{f{{l{c}}}}Gh}{}Dn}{{{f{{l{c}}}}Bj}{{Ch{Aj}}}Al}{{{f{{l{c}}}}Bj}MjFn}{{{f{{l{Eh}}}}Bj}Mj}{{{f{{l{Ej}}}}Bj}Mj}{{{f{{l{{Cb{c}}}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}Cd}{{{f{{l{Lh}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lb}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ob}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bb}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Eh}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Fh}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ej}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bd}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Kl}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bf}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ff}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nj}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Of}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nh}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nd}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bb}}}}A@n{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ff}}}}A@n{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{{Cb{c}}}}}}A@n{f{Df{Bl{Kf}}}}}{{A`{bn}}}Cd}{{{f{{l{Fh}}}}A@n{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bd}}}}A@n{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bf}}}}A@n{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ob}}}}A@n{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lh}}}}A@n{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Of}}}}A@n{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Eh}}}}A@n{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ej}}}}A@n{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nh}}}}A@n{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nd}}}}A@n{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lb}}}}A@n{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Kl}}}}A@n{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nj}}}}A@n{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{}c{}}0{{{f{{l{Cf}}}}}Gh}{{Ddc}{{l{e}}}Cl{{Dn{}{{Ib{c}}}}Dn}}{{{f{{l{e}}}}c}{{l{e}}}Cl{{Dn{}{{Ib{c}}}}Dn}}{{{f{{l{c}}}}{Gn{{Cn{Cl}}}}}{{l{c}}}Dn}{{{l{c}}Dd}{{l{c}}}Dn}{{{f{{Bl{ABb}}}}e}c{}{{ABd{{f{{l{Ff}}}}}{{Ad{c}}}}}}{{{l{j}}{Ch{Ih}}}{{l{j}}}}{{{l{j}}{l{Bb}}}{{l{j}}}}{{{f{{l{c}}}}Mb}{{l{c}}}Dn}{{{l{c}}}{}Al}{{{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}32013232102323103232103232103232{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{l{Ah}}}Dn{{Af{{Ch{Ef}}Ch}{{Ad{{Ch{Ab}}}}}}}}{{{f{{l{Cf}}}}{f{{l{c}}}}e}{{l{Cf}}}Dn{{Af{{Ch{Ef}}Ch}{{Ad{{Ch{Ab}}}}}}}}{{{f{Df{l{j}}}}{f{{l{j}}}}}b}{{{f{{l{j}}}}{f{{l{Bb}}}}{f{{l{j}}}}}{{A`{{l{j}}n}}}}{{{f{{l{c}}}}{f{{l{Bb}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}{{Dn{}{{A@l{Dj}}}}}}````{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}e{}{}{}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}c}e{}{}{}}{{c{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}e{}{}{}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}g{}{}{}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}c}g{}{}{}}{{c{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}g{}{}{}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}e{}{}{}}65654654650654654````````````````{{fh}b}000{{{f{DfABn}}{f{Cl}}}b}{{{f{DfABn}}}b}{{{f{DfAC`}}}b}{{{f{DfACb}}c}b{{D`{}{{Cj{{Ch{d}}}}}}Jj}}{{{f{Df{ACd{c}}}}e}bAl{{D`{}{{Cj{Ch}}}}Jj}}{{{f{DfACf}}}b}{{{f{DfACh}}}b}54{{{f{DfACj}}}b}{{{f{DfACl}}}b}{{{f{DfACb}}}b}{{{f{DfACn}}}b}{{{f{Df{ACd{c}}}}}bAl}{{{f{Df{AD`{c}}}}}b{ADbA@h}}{{{f{DfADd}}}b}{{{f{DfADf}}}b}{{{f{Df{ADh{c}}}}}bAl}{{{f{DfABn}}{Ch{{f{Cl}}}}}b}{{{f{DfABn}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACf}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{Df{ACd{c}}}}{Ch{{f{Bl}}}}}bAl}{{{f{Df{AD`{c}}}}{Ch{e}}}b{ADbA@h}{{If{c}}}}{{{f{DfACh}}{Ch{c}}}b{}}{{{f{DfACf}}{f{Ab}}}{{A`{bn}}}}{{{f{DfABn}}{f{Ab}}}{{A`{bn}}}}{{{f{DfAC`}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACj}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACl}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACb}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACn}}{f{Ab}}}{{A`{bn}}}}{{{f{Df{ACd{c}}}}{f{Ab}}}{{A`{bn}}}Al}{{{f{Df{ACd{c}}}}{f{Bl}}}bAl}{{{f{DfACj}}c}b{{D`{}{{Cj{{Ch{{f{Bh}}}}}}}}Jj}}{{{f{DfACl}}c}b{{D`{}{{Cj{{Ch{{f{{Bl{Bj}}}}}}}}}}Jj}}{{{f{DfACh}}c}b{}}{{{f{Df{AD`{c}}}}e}b{ADbA@h}{{If{c}}}}{{{f{DfADd}}d}b}{{{f{Df{ADh{c}}}}}bAl}{{{f{DfACj}}c}b{{D`{}{{Cj{{f{Bh}}}}}}}}{{{f{DfACl}}c}b{{D`{}{{Cj{{f{{Bl{Bj}}}}}}}}}}{{{f{Df{ACd{c}}}}e}bAl{{D`{}{{Cj{}}}}}}{{{f{Df{ACd{c}}}}e}bAl{{D`{}{{Cj{}}}}Jj}}{f{{f{c}}}{}}0000000000{{{f{Df}}}{{f{Dfc}}}{}}0000000000`{{{f{{AD`{c}}}}}{{AD`{c}}}{ADbA@h}}{{{f{ADd}}}ADd}{{{f{ADf}}}ADf}{{{f{{ADh{c}}}}}{{ADh{c}}}{JhAl}}{{f{f{Dfc}}}b{}}000{fb}000{{}ABn}{{}AC`}{Gh{{f{c}}}{}}0000000000{Gh{{f{Dfc}}}{}}0000000000{Ghb}0000000000{{{f{ACj}}}d}{{{f{ACl}}}d}{{{f{ACb}}}d}{{{f{{ACd{c}}}}}dAl}{{{f{ACf}}}d}{{{f{ACj}}}{{f{Oj}}}}{{{f{ACl}}}{{f{Oj}}}}{{{f{ACb}}}{{f{Oj}}}}{{{f{{ACd{c}}}}}{{f{Oj}}}Al}{{{f{ACf}}}{{f{Oj}}}}{ACh{{l{c}}}Dn}{{{f{DfABn}}}{{l{Ah}}}}{{{f{DfAC`}}}{{l{Ah}}}}{{{f{DfACn}}}{{l{Ah}}}}{{{f{DfACf}}}{{l{Ah}}}}{{{AD`{Bh}}}{{l{Bf}}}}{{{AD`{{Bl{Bj}}}}}{{l{Bd}}}}{ADd{{l{Bb}}}}{ADfADj}{{{ADh{c}}}{{l{c}}}Al}`{cc{}}0000000000{{Dde}ADl{}{{D`{}{{Cj{{Ch{c}}}}}}}}{{Dde}ADl{}{{D`{}{{Cj{c}}}}}}{{Dd{f{{Bl{c}}}}}ADl{}}{{Dd{f{{Bl{{Ch{c}}}}}}}ADl{}}{{{f{En}}GhGhDd}{{Cn{ACf}}}}{{}Gh}0000000000{{{f{DfACj}}}{{Cn{Cl}}}}{{{f{DfACl}}}{{Cn{Cl}}}}{{{f{DfACb}}}{{Cn{Cl}}}}{{{f{Df{ACd{c}}}}}{{Cn{Cl}}}Al}{{{f{DfACf}}}{{Cn{Cl}}}}{{}c{}}0000000000`{{DdGh{Ch{En}}}ABn}{{DdGh{Ch{En}}}AC`}{{DdGhGh}ACj}{{DdGhGh}ACl}{{DdGhGh}ACb}{{DdGh}ACn}{{DdGhGhEn}{{ACd{c}}}Al}{{DdGh}{{AD`{c}}}{ADbA@h}}{{DdGh}ADd}{{DdGh}ADf}{{DdGh}{{ADh{c}}}Al}{{DdGhGhEnEn}{{ACd{c}}}Al}{{{f{DfACh}}}b}{{{f{DfADd}}}b}{{{f{DfADf}}}b}{{{f{Df{ADh{c}}}}}bAl}{fc{}}000{c{{A`{e}}}{}{}}0000000000{{}{{A`{c}}}{}}0000000000{fAAn}0000000000{{}c{}}0000000000````````{{{f{DfACf}}}b}{{{f{DfACf}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACf}}{f{Ab}}}{{A`{bn}}}}`{{{f{ACf}}}d}{{{f{ACf}}}{{f{Oj}}}}{{{f{DfACf}}}{{l{Ah}}}}{{{f{En}}GhGhDd}{{Cn{ACf}}}}{{{f{DfACf}}}{{Cn{Cl}}}}````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{Gb}}}Gb}{{f{f{Dfc}}}b{}}{fb}{{}Gb}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{c{{A`{Gb}}}ADn}{Ghb}{{{f{Gb}}{f{Gb}}}d}{{f{f{c}}}d{}}00{{{f{Gb}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{{f{Gb}}{f{Dfc}}}bAE`}{{}Gh}{{}c{}}{{{f{Gb}}c}A`A@f}{{{f{Gb}}}d}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}6``{{AEbDd}{{l{c}}}Dn}{{AEd{f{{l{c}}}}}{{l{c}}}Dn}10{{AEdDdEn}{{l{c}}}Dn}0{{AEbDd}{{A`{{l{c}}e}}}Dn{}}{{AEd{f{{l{c}}}}}{{A`{{l{c}}e}}}Dn{}}10{{AEdDdEn}{{A`{{l{c}}e}}}Dn{}}0`{AEfAEf}``{{AEhDdEn}e{}{{AEj{c}}}}{{eDdEn}AEj{}{{Jb{}{{Cj{c}}}}}}````{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{Gh{{f{c}}}{}}00{Gh{{f{Dfc}}}{}}00{Ghb}00{cc{}}00{{}Gh}00{{}c{}}00000{{{f{AEl}}}AEn}{{{f{AF`}}En}AFb}{{{f{DfAEn}}}Ch}{{{f{DfAFb}}}Ch}{{{f{Df{AFd{c}}}}}ChD`}21{{{f{Df{AFd{c}}}}}ChHd}`{{{f{AEn}}}{{Hj{Gh{Ch{Gh}}}}}}{{{f{AFb}}}{{Hj{Gh{Ch{Gh}}}}}}{{{f{{AFd{c}}}}}{{Hj{Gh{Ch{Gh}}}}}D`}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAn}00<<<`````````````````````````{{fh}b}0000{{}Hb}{{}Jn}{{HbHb}Hb}{{JnJn}Jn}{{{f{DfHb}}Hb}b}{{{f{DfJn}}Jn}b}3210{{{f{Hb}}}Fb}0{{{f{Jn}}}Bj}05432{f{{f{c}}}{}}000000{{{f{Df}}}{{f{Dfc}}}{}}000000{{{f{{Mn{c}}}}}{{Cn{G`}}}Dn}{{{f{{Mn{c}}}}}{{Mn{c}}}Dn}{{{f{{Kh{c}}}}}{{Kh{c}}}Dn}{{{f{AFf}}}AFf}{{{f{Hb}}}Hb}{{{f{Jn}}}Jn}{{f{f{Dfc}}}b{}}0000{fb}0000{{{f{DfAFh}}}b}{HbHb}{JnJn}{{{f{Hb}}Hb}d}{{{f{Jn}}Jn}d}{{}{{Mn{c}}}Dn}{{}{{Kh{c}}}Dn}{{}Hb}{{}Jn}{Gh{{f{c}}}{}}{{{f{{Ml{c}}}}}fDn}111111{Gh{{f{Dfc}}}{}}000000{c{{A`{Jn}}}ADn}{{HbHb}Hb}{{JnJn}Jn}{{}d}{{{f{G`}}}{{Ch{Fb}}}}{{{f{{Kh{c}}}}}{{Ch{Fb}}}Dn}{{{Kh{c}}Fb}{{Kh{c}}}Dn}{{{Kh{c}}{Ch{Fb}}}{{Kh{c}}}Dn}{Ghb}000000=<5{{{f{Hb}}{f{Hb}}}d}{{{f{Jn}}{f{Jn}}}d}7{{{f{DfHb}}c}b{{Id{}{{Cj{Hb}}}}}}{{{f{DfJn}}c}b{{Id{}{{Cj{Jn}}}}}}{{{Kh{c}}d}{{Kh{c}}}Dn}{{{Kh{c}}{Ch{d}}}{{Kh{c}}}Dn}{{{f{{Kh{c}}}}Hb}{{Kh{c}}}Dn}{{{f{{Kh{c}}}}Hb}{{Kh{e}}}DnDn}{{{Kh{c}}Jn}{{Kh{c}}}Dn}{{{Kh{c}}{Ch{Jn}}}{{Kh{c}}}Dn}{{{f{{Kh{c}}}}{f{DfHn}}}{{A`{bI`}}}Dn}{{{f{AFf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Hb}}{f{DfHn}}}{{A`{bI`}}}}0000{{{f{Jn}}{f{DfHn}}}{{A`{bI`}}}}0000{cc{}}000000{Fb{{Ch{Hb}}}}{Bj{{Ch{Jn}}}}{FbHb}0{BjJn}010{cHb{{Id{}{{Cj{Hb}}}}}}{cJn{{Id{}{{Cj{Jn}}}}}}{{{f{Bh}}}{{Ch{Hb}}}}{{{f{Bh}}}{{Ch{Jn}}}}{{{f{{Kh{c}}}}}{{Ch{Fb}}}Dn}{{{f{{Kh{c}}}}}dDn}{{{f{Jn}}}d}{{{f{G`}}}Jn}{{{f{{Kh{c}}}}}JnDn}0{{{f{{Kh{c}}}}}{{Ch{f}}}Dn}0{{{f{Df{Mn{c}}}}}{{f{Df{Kh{c}}}}}Dn}{{{f{Jn}}}Mb}{{}Gh}000000{{{f{DfHb}}Hb}b}{{{f{DfJn}}Jn}b}{{HbHb}Hb}{{JnJn}Jn}{{{f{Hb}}Hb}d}{{{f{Jn}}Jn}d}{{}c{}}000000{Hb}{Jn}{{{f{Hb}}}d}{{{f{Jn}}}d}{{{f{{Kh{c}}}}}dDn}21{{{f{{Kh{c}}}}}MbDn}111{{{f{Hb}}}{{AFj{Hb}}}}{{{f{Jn}}}{{AFj{Jn}}}}{{{f{Hb}}}{{AFl{Hb}}}}{{{f{Jn}}}{{AFl{Jn}}}}{{}d}{{}{{f{{AG`{AFn}}}}}}{{{f{G`}}}{{Ch{Mj}}}}{{{Kh{c}}}{{Kh{c}}}Dn}{{{f{{Kh{c}}}}}{{Ch{Mj}}}Dn}{{{Kh{c}}Ch}{{Kh{c}}}Dn}{{{f{{Kh{c}}}}{Kh{c}}}{{AGb{c}}}Dn}4321{{{Kh{c}}}{{Mn{c}}}Dn}{HbHb}{JnJn}{{{f{{Mn{c}}}}}{{Nb{{Kh{c}}}}}Dn}{{{f{DfHb}}Hb}b}{{{f{DfJn}}Jn}b}{{{f{Jn}}c}A`A@f}{{{f{DfHb}}Hbd}b}{{{f{DfJn}}Jnd}b}{{{f{Df{Kh{c}}}}{Ch{Fb}}}bDn}{{{f{Df{Kh{c}}}}d}bDn}{{{f{DfJn}}d}b}{{{f{Df{Kh{c}}}}Jn}bDn}{{{f{Df{Kh{c}}}}Ch}bDn}033{{{f{Df{Kh{c}}}}Mb}bDn}{{{f{DfJn}}Mb}b}{{{Kh{c}}Mb}{{Kh{c}}}Dn}{{{Kh{c}}{Ch{Mb}}}{{Kh{c}}}Dn}{{HbHb}Hb}{{JnJn}Jn}?>10{{{Mn{c}}}{{Kh{c}}}Dn}{fc{}}0000{{{f{DfHb}}Hb}b}{{{f{DfJn}}Jn}b}{c{{A`{e}}}{}{}}000000{{}{{A`{c}}}{}}000000{{{f{{Mn{c}}}}}{{Ch{{Nb{{Kh{c}}}}}}}Dn}{{{f{{Mn{c}}}}}{{Ch{{Kj{{Kh{c}}}}}}}Dn}{fAAn}000000:9{{{f{{Mn{c}}}}}{{f{{AGd{G`}}}}}Dn}{{}c{}}000000{AFhAFh}{{{f{{Mn{c}}}}}{{Kj{{Kh{c}}}}}Dn}````{{fh}b}{{{f{{AGf{c}}}}Gh}{{Hj{{AGf{c}}{AGf{c}}}}}Cd}{e{{AGf{c}}}Cd{{Id{}{{Cj{{f{c}}}}}}}}{e{{AGf{c}}}Cd{{Id{}{{Cj{{Ch{{f{c}}}}}}}}}}{{AGhe}g{}{{Id{}{{Cj{c}}}}}{}}0{{{f{K`}}}{{f{AGj}}}}{{{f{{AGf{c}}}}}{{f{AGj}}}Cd}{{{f{Df{AGf{c}}}}}{{f{DfAGj}}}Cd}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}`{{{f{{AGf{c}}}}Gh}dCd}{{{f{{AGf{c}}}}}{{AGf{c}}}{JhCd}}{{f{f{Dfc}}}b{}}{fb}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{{{f{{AGf{c}}}}}{{f{AGh}}}Cd}{{{f{{f{K`}}}}{f{{f{K`}}}}}d}{{{f{K`}}{f{K`}}}d}{{{f{{AGf{c}}}}{f{DfHn}}}{{A`{bI`}}}{AGlCd}}{{{Gn{c}}}{{AGf{c}}}Cd}{cc{}}{{GhAGh}{{AGf{c}}}Cd}{{{f{{AGf{c}}}}Gh}{{Ch{{f{c}}}}}Cd}{{}AGh}{{{f{Ih}}{f{{AGf{c}}}}{f{{AGf{c}}}}}{{AGf{c}}}Cd}{{AGh{f{Ih}}}{{AGf{c}}}Cd}{{{f{Ih}}{f{{AGf{c}}}}}{{AGf{c}}}Cd}0{{}Gh}{{}c{}}{{{f{{AGf{c}}}}}{}Cd}{{{f{{AGf{c}}}}Gh}dCd}0{{fGh}d}{{{f{{AGf{c}}}}}{{AH`{{f{c}}{Gf{c}}AGn}}}Cd}{{{f{{AGf{c}}}}}{{AH`{AGn}}}Cd}{{{f{{AGf{c}}}}}GhCd}0`{db}{{{f{Df{AGf{c}}}}{Ch{Ih}}}bCd}{{{f{Df{AGf{c}}}}GhGh}bCd}{{fGhGh}c{}}01{{{f{{AGf{c}}}}Gh}{{Hj{{Cn{Cl}}{Cn{Cl}}}}}Cd}0{{{f{K`}}}{{Cn{K`}}}}{{{f{{AGf{c}}}}}{{Cn{Cl}}}Cd}{fc{}}{g{{A`{{AGf{c}}e}}}Cd{}{{Id{}{{Cj{{A`{{f{c}}e}}}}}}}}{g{{A`{{AGf{c}}e}}}Cd{}{{Id{}{{Cj{{A`{{Ch{{f{c}}}}e}}}}}}}}{{AGhg}{{A`{ie}}}{}{}{{Id{}{{Cj{{A`{ce}}}}}}}{}}0{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}{{{f{K`}}}{{f{Bh}}}}{{}{{f{Bh}}}}{{{f{{AGf{c}}}}}{{Ch{{f{Ih}}}}}Cd}{{{f{{AGf{c}}}}Gh}{{f{c}}}Cd}{{{f{{AGf{c}}}}Gh}{}Cd}1{{{f{{AGf{c}}}}}{{Gf{c}}}Cd}{{{f{{AGf{c}}}}}{}Cd}{{}c{}}{{{AGf{c}}{Ch{Ih}}}{{AGf{c}}}Cd}{{{f{{AGf{c}}}}{Ch{Ih}}}{{Cn{Cl}}}Cd}1`{{{f{Df{AHb{c}}}}}bCd}0{{{f{Df{AHb{c}}}}{Ch{c}}}bCd}{{{f{Df{AHb{c}}}}{f{AGj}}}bCd}{{{f{Df{AHb{c}}}}c}bCd}{{{f{Df{AHb{c}}}}{f{AGj}}}{{A`{bn}}}Cd}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}{{AHb{c}}}Cd}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{{{AHb{c}}}{{l{{Cb{c}}}}}Cd}{cc{}}{{{f{{AHb{c}}}}DdGhGh}{{Cn{ACf}}}Cd}{{}Gh}{{}c{}}{{DdGh}{{AHb{c}}}Cd}{{{f{Df{AHb{c}}}}}AbCd}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}5````{{{f{DfAHd}}}b}{{{f{DfAHd}}{Ch{{f{AGj}}}}}b}{{{f{DfAHd}}{f{AGj}}}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}`{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{{{f{AHf}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{{f{AHd}}DdGhGh}{{Cn{ACf}}}}{{DdGh}{{Cn{AHd}}}}{{}{{N`{Eb}}}}{{}AGh}{{}Gh}{{}c{}}{{}d}`{{{Cn{Eb}}{N`{Eb}}AGh}b}{{{f{DfAHd}}}Ab}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}6`````````````````````````````````````````````````{{fh}b}00{{{f{AHh}}}Aj}{{{f{{AHl{}{{AHj{c}}}}}}g}{{AHl{}{{AHj{c}}}}}{}{}{{Eb{{Ch{e}}}{{Ad{{Ch{c}}}}}}Ed}}{{{f{AHn}}{f{Eb}}}AHn}{{{f{AHn}}{f{Eb}}}{{l{c}}}Dn}{{{f{{AHl{}{{AHj{c}}}}}}i{f{Df{Bl{g}}}}}b{}{}{}{{Eb{{Ch{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AHl{}{{AHj{c}}}}}}g}{{AHl{}{{AHj{c}}}}}{}{}{{Eb{e}{{Ad{c}}}}Ed}}{{{f{AI`}}}Fb}{{{f{AIb}}Fd}{{l{Ff}}}}{{{f{AIb}}{f{{Bl{Fj}}}}{f{Fl}}}{{A`{{l{Ff}}n}}}}{{{f{AId}}}{{A`{{l{Ff}}n}}}}`{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{{{f{AIf}}{f{En}}}{{A`{Abn}}}}0{{{f{AIf}}{f{En}}Gb}{{A`{Abn}}}}{{{f{Fd}}}Fd}{{{f{Fl}}}Fl}{{{f{AIh}}}AIh}{{f{f{Dfc}}}b{}}00{fb}00{{}Fd}{{}Fl}{Gh{{f{c}}}{}}00{Gh{{f{Dfc}}}{}}00``{c{{A`{Fd}}}ADn}{c{{A`{Fl}}}ADn}{c{{A`{AIh}}}ADn}{Ghb}00{{{f{Fd}}{f{Fd}}}d}{{{f{Fl}}{f{Fl}}}d}{{{f{AIh}}{f{AIh}}}d}{{{f{{AIj{}{{Cj{c}}}}}}e}c{}{}}0{{f{f{c}}}d{}}00000{{{f{AIl}}}{{A`{Abn}}}}{{{f{AIl}}}{{A`{{Hj{Ab{Hh{Hf}}}}n}}}}`{{{f{AIn}}c}{{A`{AInn}}}{}}{{{f{AJ`}}{f{{l{Bb}}}}}{{A`{{l{c}}n}}}Dn}`{{{f{Fd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Fl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{AIh}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{{f{Fl}}}Fd}1{{{f{Fd}}}Fl}2`{{DdcGh}AJb{}}{{DdGh}AJd}`{{{f{AJf}}Gh}{{A`{Jln}}}}{{{f{AJf}}Gh}Jl}{{{f{{AJh{}{{Cj{c}}}}}}e}c{}{}}0{{{f{Fd}}{f{Dfc}}}bAE`}{{{f{Fl}}{f{Dfc}}}bAE`}{{{f{AIh}}{f{Dfc}}}bAE`}{{}Gh}00{{}c{}}00{{{f{AIh}}}d}{{{f{AJj}}}{{A`{{l{Bb}}n}}}}{{{f{AJl}}}{{A`{{l{Bb}}n}}}}``88``{{{f{AHh}}}{{Ch{c}}}{}}{{{f{AHh}}}{{Ch{Aj}}}}{{{f{AJn}}}{{Ch{c}}}{}}2{{{f{AHh}}}{{Ch{{Hj{cc}}}}}{}}``{{{f{AId}}}{{A`{Ghn}}}}{{}Fd}{{}Fl}{{{f{AK`}}GhGh}{{l{c}}}Dn}{{{f{{AIj{}{{Cj{c}}}}}}e}c{}{}}0``{{{f{AIl}}}{{A`{{Hh{Hf}}n}}}}{{{f{AJn}}AjA@`}{{A`{{Ch{c}}n}}}{}}{{{f{AKb}}}Ab}0{{{f{AKd}}}AKd}{{{f{AKf}}{f{Eb}}A@b}{{A`{Abn}}}}`{{{f{AKh}}c{Ch{e}}}{{A`{AKhn}}}{{Id{}{{Cj{Fb}}}}}{}}{{{f{AKh}}ci}{{A`{AKhn}}}{{Id{}{{Cj{Fb}}}}}{}{}{{Eb{{Ch{e}}}{{Ad{{Ch{g}}}}}}}}`{{{f{Fd}}c}A`A@f}{{{f{Fl}}c}A`A@f}{{{f{AIh}}c}A`A@f}{{{f{AKh}}{f{{l{Bb}}}}{Ch{c}}}{{A`{AKhn}}}{}}{{{f{AKj}}Hf}{{l{c}}}Dn}{{{f{AKl}}Hfc}{{l{e}}}{}Dn}{{{f{AKn}}GhGh}AKn}0`{{{f{AIb}}d}{{l{c}}}Dn}{{{f{AIb}}Fd}{{l{c}}}Dn}{{{f{AL`}}Bj}{{Ch{Aj}}}}{{{f{AHh}}}{{Ch{c}}}{}}{{{f{ALb}}{f{c}}}{{A`{ALbn}}}A@h}{{{f{ALd}}{f{c}}}ALdA@h}{{{f{ALf}}}{{Gn{{f{{Bl{Bj}}}}}}}}{fc{}}00{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAn}00{{{f{AId}}}{{A`{AIdn}}}}9{{}c{}}00{{Fdd}Fd}{{Fld}Fl}1010{{Flc}Fl{{Id{}{{Cj{d}}}}}}210{FdFd}{FlFl}`{{{f{ALh}}{f{{l{Bb}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dn}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DnDn{{Eb{ff}{{Ad{}}}}}{{Eb{f}{{Ad{}}}}}{{Eb{f}{{Ad{}}}}}Dn}{{{l{c}}{l{e}}gik}{{l{m}}}DnDn{{Eb{}{{Ad{}}}}}{{Eb{}{{Ad{}}}}}{{Eb{}{{Ad{}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DnDnCl{{Af{ff}{{Ad{g}}}}}{{Dn{}{{Ib{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DnDn{{ALj{ChCh}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}g}bDnDn{{Af{ChCh}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{Bf}}}DnDn{{Af{{f{DfEl}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DnDn{}{{Af{}{{Ad{g}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DnDn{ClALl}{{Af{ff}{{Ad{g}}}}}{{Dn{}{{Ib{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DnDnCl{{Af{ff}{{Ad{g}}}}}{{Dn{}{{Ib{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DnDnCl{{Af{}{{Ad{g}}}}}{{Dn{}{{Ib{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DnDn{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DnDn{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DnDn{}{}{{Af{ChCh}{{Ad{{A`{{Ch{g}}i}}}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DnDnDn{{ALn{ChChCh}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DnDnClAM`{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dn{}{{Ib{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kDd}{{A`{{l{m}}i}}}DnDnClAM`{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dn{}{{Ib{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DnDnAM`{{Af{ff}{{Ad{{A`{{Cn{Cl}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DnDnDn{}{}{{Af{ChChCh}{{Ad{{A`{{Ch{i}}k}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{}{}{{Af{Ch}{{Ad{{A`{{Ch{e}}g}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{ClALl}AM`{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dn{}{{Ib{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dn{{AMb{Ch}}}Dn}{{{f{{l{c}}}}e}{{l{g}}}DnAMbDn}{{{f{{l{c}}}}g}{{l{i}}}DnCl{{Af{f}{{Ad{e}}}}}{{Dn{}{{Ib{e}}}}}}{{{l{c}}g}{{l{i}}}DnCl{{Af{}{{Ad{e}}}}}{{Dn{}{{Ib{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dn{ClALl}{{Af{f}{{Ad{e}}}}}{{Dn{}{{Ib{e}}}}}}0{{{f{{l{c}}}}}GhAl}0{{MbMb}Mb}{{{f{{l{Ff}}}}Fb}{{A`{bn}}}}{{{f{{AMd{Fb}}}}Fb}{{A`{bn}}}}{{{f{{Bl{Fj}}}}{f{{Bl{d}}}}{f{{Bl{d}}}}}{{A`{AMfn}}}}{{{f{{Bl{Fj}}}}{f{{Bl{d}}}}{f{{Bl{d}}}}}{{A`{{Kb{Hf}}n}}}}{{Dd{f{{Bl{Fj}}}}{f{{Bl{d}}}}{f{{Bl{d}}}}}{{A`{{l{Fh}}n}}}}{{Dd{f{{Bl{Ab}}}}}{{A`{{l{Fh}}n}}}}{{{f{Ab}}}{{A`{{Cn{Cl}}n}}}}{{{f{{Bl{Ab}}}}}{{A`{AMfn}}}}{{{f{{Bl{Ab}}}}}{{A`{{l{Fh}}n}}}}00````{{fh}b}{{{f{{l{c}}}}eAMhd}{{Gn{Fb}}}Dn{{D`{}{{Cj{Ch}}}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{AMh}}}AMh}{{f{f{Dfc}}}b{}}{fb}{{}AMh}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{c{{A`{AMh}}}ADn}{Ghb}{{{f{AMh}}{f{AMh}}}d}{{f{f{c}}}d{}}00{{{f{AMh}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{{f{AMh}}{f{Dfc}}}bAE`}{{}Gh}{{}c{}}{{{f{{Bl{f}}}}cFbe}{{Gn{Fb}}}{{D`{}{{Cj{Ch}}}}}{{Eb{fGhf}{{Ad{d}}}}}}{{{f{AMh}}c}A`A@f}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}6`{{Gh{f{Df{Gn{d}}}}}b}```{{{f{AKn}}GhGh}AKn}0{{Gh{f{{Bl{Fj}}}}{f{DfFl}}}{{A`{{AMj{{l{Ff}}}}n}}}}`````````````11`{AMlHf}00{{{f{Bh}}{f{En}}}{{A`{Eln}}}}{{{f{Bh}}}{{A`{Ddn}}}}{{{f{Bh}}}{{A`{AMnn}}}}{{{f{AN`}}}Hf}{{{f{Bh}}}{{A`{bn}}}}5554```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}00000000000000000000000000000000000{{{f{ANb}}}d}{{{f{Jl}}}{{`{{D`{}{{Cj{Jl}}}}}}}}{{{f{Jl}}{f{Df{Gn{Jl}}}}}b}{{ANbd}ANb}{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{Jl}}{f{Jl}}}Jl}{{{f{{l{Cf}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{Bf}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bd}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{DfANd}}{Ch{{f{Bh}}}}}b}{{{f{DfANb}}{f{ANb}}}{{A`{bn}}}}{{{f{DfANd}}}b}{{{f{DfANd}}{f{Bh}}}b}{{{f{ANb}}Fd}{{l{Ff}}}}{eANf{}{{Id{}{{Cj{c}}}}}}0{{AGhe}ANh{}{{Id{}{{Cj{c}}}}}}0{{{f{En}}}{{Ch{{f{En}}}}}}{{{f{Jl}}}Jl}{{{f{{L`{KnKl}}}}}{{`{Jj}}}}{{{f{{L`{LfLb}}}}}{{`{Jj}}}}{{{f{Dd}}}{{f{{Bl{Bj}}}}}}{{{f{Dd}}}{{f{ANj}}}}{{{f{Dd}}}{{f{ANl}}}}{{{f{Dd}}}{{f{Bh}}}}{{{f{En}}}{{f{En}}}}{{{f{Oj}}}{{f{En}}}}{{{f{ANn}}}{{f{En}}}}{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}}{{Ch{{f{{Bl{c}}}}}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}4{{{f{{L`{LnLb}}}}}{{`{Jj}}}}{f{{f{c}}}{}}6000000000000000000000000000000000000000000000{{{f{Df}}}{{f{Dfc}}}{}}000000000000000000000000000000000000000000000{En{{Cn{En}}}}{{{AOj{Bh}}}AOl}{{{f{ANb}}{f{ANb}}c}{{A`{ANbn}}}AOn}{{{f{Jl}}{f{En}}}d}{{{f{B@`}}{f{En}}}{{A`{Abn}}}}{{{f{Jl}}{f{En}}}Jl}{{{f{En}}En}En}{{{f{{L`{LlLb}}}}Ld}{{L`{LlLb}}}}{{{f{{L`{LfLb}}}}Ld}{{L`{LfLb}}}}{{{f{B@`}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{L`{LnLb}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{L`{LfLb}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{L`{LlLb}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{L`{KnKl}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{L`{LjLh}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{ANb}}{f{En}}Gb}{{A`{Abn}}}}`{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}00000000{{{f{{l{Eh}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Ej}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{Dd}}}Dd}{{{f{{L`{ce}}}}}{{L`{ce}}}DnDn}{{{f{B@b}}}B@b}{{{f{AOl}}}AOl}{{{f{ANb}}}ANb}{{{f{B@d}}}B@d}{{{f{Jl}}}Jl}{{{f{B@f}}}B@f}{{{f{En}}}En}{{{f{B@h}}}B@h}{{{f{Oj}}}Oj}{{{f{Ld}}}Ld}{{{f{Nh}}}Nh}{{{f{Nd}}}Nd}{{{f{Ff}}}Ff}{{{f{Nj}}}Nj}{{{f{Ob}}}Ob}{{{f{Of}}}Of}{{{f{Kl}}}Kl}{{{f{Lb}}}Lb}{{{f{Eh}}}Eh}{{{f{Ej}}}Ej}{{{f{Kn}}}Kn}{{{f{Ln}}}Ln}{{{f{Bf}}}Bf}{{{f{Bd}}}Bd}{{{f{Fh}}}Fh}{{{f{Bb}}}Bb}{{{f{Lj}}}Lj}{{{f{Lf}}}Lf}{{{f{Ll}}}Ll}{{{f{B@j}}}B@j}{{{f{B@l}}}B@l}{{{f{B@n}}}B@n}{{{f{AGh}}}AGh}{{{f{BA`}}}BA`}{{f{f{Dfc}}}b{}}00000000000000000000000000000000000{fb}00000000000000000000000000000000000{{{f{Dd}}{f{Dd}}}BAb}{{{f{B@l}}{f{B@l}}}BAb}{{{f{DfOj}}En}b}{BAde{}{{ANf{c}}ALl}}0{{BAdAGh}e{}{{ANh{c}}ALl}}0{{f{f{c}}}BAb{}}0{{{f{En}}}d}{{{f{AGh}}}d}11{{{AOj{Bh}}}En}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}{{}Dd}{{}BAf}{{}B@b}{{}AOl}{{}Jl}{{}B@f}{{}En}{{}AGh}{{{f{Dd}}}f}{Gh{{f{c}}}{}}000{{{f{{L`{ce}}}}}fDnDn}111111111111111111111111111111111111111111{Gh{{f{Dfc}}}{}}000{{{f{Df{L`{ce}}}}}{{f{Df}}}DnDn}111111111111111111111111111111111111111111{c{{A`{Dd}}}ADn}{c{{A`{B@b}}}ADn}{c{{A`{Jl}}}ADn}{c{{A`{B@f}}}ADn}{c{{A`{En}}}ADn}{c{{A`{Oj}}}ADn}{c{{A`{Ld}}}ADn}{c{{A`{Ah}}}ADn}{c{{A`{B@l}}}ADn}{c{{A`{B@n}}}ADn}{c{{A`{AGh}}}ADn}{c{{A`{BA`}}}ADn}{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{{l{Cf}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{ANdc}ANb{{Id{}{{Cj{{Ch{{f{Bh}}}}}}}}}}{Ghb}000000000000000000000000000000000000000000000{{{f{B@`}}}{{f{En}}}}{{{f{{L`{LfLb}}}}}{{f{En}}}}{{{f{{L`{LjLh}}}}}{{f{En}}}}{{{f{{L`{LlLb}}}}}{{f{En}}}}{{{f{{L`{LnLb}}}}}{{f{En}}}}{{{f{{L`{KnKl}}}}}{{f{En}}}}{{{f{ANb}}}{{f{En}}}}{{{f{Jl}}}En}{{{f{Oj}}}{{f{En}}}}`{fc{{BAj{BAh}}}}0`{{{f{Dd}}{f{c}}}d{{If{Bh}}A@h}}{{{f{B@b}}{f{B@b}}}d}{{{f{Jl}}{f{Jl}}}d}{{{f{B@f}}{f{B@f}}}d}{{{f{En}}{f{En}}}d}{{{f{En}}{f{AGh}}}d}{{{f{B@h}}{f{B@h}}}d}{{{f{Oj}}{f{Oj}}}d}{{{f{Ld}}{f{Ld}}}d}{{{f{B@l}}{f{B@l}}}d}{{{f{B@n}}{f{B@n}}}d}{{{f{AGh}}{f{AGh}}}d}{{{f{BA`}}{f{BA`}}}d}{{{f{Jl}}{f{Jl}}d}d}{{{f{ANb}}{f{{l{Bf}}}}}}{{{f{ANb}}{f{Bh}}}}{{{f{ANb}}{f{ANb}}}}102{{f{f{c}}}d{}}00000000000000000000000000000000{{{f{{L`{ce}}}}}OjDnDn}{{{f{AOl}}{f{Bh}}}{{Ch{Fb}}}}{{AOn{f{{l{Ff}}}}{f{{l{Ff}}}}}{{A`{{l{Ff}}n}}}}{ANdANb}{BAf{{N`{AOl}}}}{{{f{Dd}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{B@b}}{f{DfHn}}}{{A`{bI`}}}}{{{f{AOl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{B@d}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Jl}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{B@f}}{f{DfHn}}}{{A`{bI`}}}}{{{f{En}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{B@h}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Oj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Ld}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{B@l}}{f{DfHn}}}{{A`{bI`}}}}{{{f{B@n}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{AGh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BA`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{El}}}Dd}{cc{}}{{{f{Bh}}}Dd}{H`Dd}{ElDd}33{{{l{Kl}}}{{L`{KnKl}}}}4{{{l{Lb}}}{{L`{LnLb}}}}55555555555{{{f{{Bl{Bj}}}}}Jl}{{{Ch{c}}}Jl{{BAl{Jl}}}}{cJlBAn}8{{{f{Bh}}}Jl}{dJl}:{{{f{AGh}}}En};{JlEn}{{{f{Jl}}}En}{BB`En}>{{{f{BBb}}}Oj}?{{{f{Jl}}}Oj}{{{f{BA`}}}Ld}{cc{}}000000000000000000000000{BBdAGh}{BBfAGh}2{{{f{AGh}}d}En}{{{l{Ff}}En}ANb}{{{l{Ff}}{N`{AOl}}dB@b}ANb}{{DdcLd}{{L`{LlLb}}}{{Id{}{{Cj{BBh}}}}}}{{DdcLd}{{L`{LlLb}}}{{Id{}{{Cj{{Ch{BBh}}}}}}}}{{{l{Ff}}B@b}ANb}{cDd{{Id{}{{Cj{{Cn{Bh}}}}}}}}{cDd{{Id{}{{Cj{Dd}}}}}}{cDd{{Id{}{{Cj{{f{Dd}}}}}}}}{cDd{{Id{}{{Cj{El}}}}}}{cDd{{Id{}{{Cj{{f{Bh}}}}}}}}{cDd{{Id{}{{Cj{{E`{Bh}}}}}}}}{cDd{{Id{}{{Cj{BAh}}}}}}{cDd{{Id{}{{Cj{{f{BAh}}}}}}}}{{Ddc}{{L`{KnKl}}}{{Id{}{{Cj{BBj}}}}}}{{Ddc}{{L`{KnKl}}}{{Id{}{{Cj{{Ch{BBj}}}}}}}}{{DdcLd}{{L`{LfLb}}}{{Id{}{{Cj{AMl}}}}}}{{DdcLd}{{L`{LfLb}}}{{Id{}{{Cj{{Ch{AMl}}}}}}}}{{Ddc}{{L`{LnLb}}}{{Id{}{{Cj{AN`}}}}}}{{Ddc}{{L`{LnLb}}}{{Id{}{{Cj{{Ch{AN`}}}}}}}}{{{f{Bh}}}Dd}0{ElDd}{{{f{{l{Bf}}}}{f{{AOj{Bh}}}}B@b}{{A`{ANbn}}}}{{{Gn{c}}AGh}{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{Gn{c}}AGh}{{ALl{}{{AO`{e}}{AOb{c}}{AOd{g}}}}}{AOf{AOh{e}}}Jh{{Hd{}{{Cj{e}}}}JjInJ`}}{{GhcAGh}{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{GhAGh}{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{DddGhB@b}ANb}{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}Gh}{{Ch{c}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{f{AOl}}Fb}{{f{Bh}}}}{B@lKf}{B@n{{Ch{Kf}}}}{{{f{{L`{LjLh}}}}Gh}{{A`{Jln}}}}{{{f{{L`{LfLb}}}}Gh}{{A`{Jln}}}}{{{f{{L`{LlLb}}}}Gh}{{A`{Jln}}}}{{{f{{L`{LnLb}}}}Gh}{{A`{Jln}}}}{{{f{{L`{KnKl}}}}Gh}{{A`{Jln}}}}{{{f{B@`}}Gh}{{A`{Jln}}}}{{{f{ANb}}Gh}{{A`{Jln}}}}{{{f{{L`{KnKl}}}}Gh}Jl}{{{f{{L`{LlLb}}}}Gh}Jl}{{{f{{L`{LjLh}}}}Gh}Jl}{{{f{{L`{LfLb}}}}Gh}Jl}{{{f{{L`{LnLb}}}}Gh}Jl}{{{f{B@`}}Gh}Jl}{{{f{ANb}}Gh}Jl}{{{f{AOl}}}{{f{{AOj{Bh}}}}}}{{}En}0000000000000000000000000{{{f{AOl}}Fb}{{Ch{{f{Bh}}}}}}{{B@nKf}Kf}{{B@nc}Kf{{Eb{}{{Ad{Kf}}}}}}{{{f{ANb}}}{{f{{N`{AOl}}}}}}{{{f{En}}}{{Ch{{Gn{Gh}}}}}}{{{f{Jl}}}{{Ch{{f{Bh}}}}}}{{{f{BBl}}Gh}Jl}{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}Gh}{{Ch{c}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{f{ANb}}{f{Bh}}}}{{{f{ANb}}{f{ANb}}}}{{{f{ANb}}{f{{l{Bf}}}}}}102{{{f{Dd}}{f{Dfc}}}bAE`}{{{f{Jl}}{f{Dfc}}}bAE`}{{{f{B@f}}{f{Dfc}}}bAE`}{{{f{En}}{f{Dfc}}}bAE`}{{{f{Oj}}{f{Dfc}}}bAE`}{{{f{Ld}}{f{Dfc}}}bAE`}{{{f{B@n}}{f{Dfc}}}bAE`}{{{f{AGh}}{f{Dfc}}}bAE`}{{{f{BA`}}{f{Dfc}}}bAE`}{{{f{Jl}}{f{Dfc}}d}bAE`}{{{f{{L`{LnLb}}}}}{{l{Ob}}}}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}{{{f{Jl}}}Fb}{EnEn}{{}Gh}000000000000000000000000000000000000000000000{{{f{En}}}{{Ch{{f{En}}}}}}{{{f{AGh}}}{{Ch{{f{AGh}}}}}}{{}c{}}000000000000000000000000000000000000000000000{{}Fj}01{{BBnEn}{{A`{Mjn}}}}{{{L`{LlLb}}}Ab}{{{L`{KnKl}}}Ab}{{{L`{LnLb}}}Ab}{{{L`{LjLh}}}Ab}{{{L`{LfLb}}}Ab}{ANbAb}{JlJl}{DdEl}{{{f{En}}}d}00{{{f{Jl}}}d}111{{{f{ANb}}}d}0212{{{f{AOl}}}d}23330323{{{f{AGh}}}d}3434340444344444340{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}}{{AH`{cgAGn}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{f{ANb}}}BC`}{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}}{{Ch{c}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{f{En}}}{{f{En}}}}{{{f{AOl}}}Gh}{{{f{ANb}}}Gh}{DdBCb}{{{f{ANb}}{f{ANb}}}}{{{f{ANb}}{f{{l{Bf}}}}}}{{{f{ANb}}{f{Bh}}}}201{{{f{ANb}}{f{ANb}}}{{A`{{Hj{ANbANb}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hj{{l{Ah}}{l{Ah}}}}n}}}}{{{f{En}}{f{En}}}{{A`{dn}}}}{{{f{B@f}}}{{Ch{En}}}}{{{f{En}}}{{A`{Enn}}}}{{{f{En}}}{{A`{Mjn}}}}{{{f{ANb}}}Mj}{{{f{En}}{f{En}}}{{A`{Enn}}}}{{{f{DfBAf}}{f{{N`{AOl}}}}}{{A`{bn}}}}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}043{{{f{{L`{LnLb}}}}}{{l{Ob}}}}1{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{{l{Cf}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{ANb}}}{{A`{Ghn}}}}{{{f{ANb}}}{{f{Dd}}}}{{{f{Oj}}}{{f{Dd}}}}`{{{f{{L`{LnLb}}}}}{{l{Kl}}}}9{{}c{}}0{{DdGhB@b}ANd}{{Ddc}{{L`{KnKl}}}{{If{{Bl{{Ch{BBj}}}}}}}}{{Ddc}{{L`{LnLb}}}{{If{{Bl{AN`}}}}}}{{Ddc}{{L`{KnKl}}}{{If{{Bl{BBj}}}}}}{{Ddc}{{L`{LnLb}}}{{If{{Bl{{Ch{AN`}}}}}}}}{{Ddc}{{L`{LfLb}}}{{If{{Bl{AMl}}}}}}{{Ddc}{{L`{LfLb}}}{{If{{Bl{{Ch{AMl}}}}}}}}{{Ddc}{{L`{LlLb}}}{{If{{Bl{BBh}}}}}}{{Ddc}{{L`{LlLb}}}{{If{{Bl{{Ch{BBh}}}}}}}}{{{N`{AOl}}}BAf}{{DdEn}Oj}{KfB@l}{HfB@n}{KfB@n}{{{l{c}}}{{L`{ec}}}DnDn}{{}B@h}{{{f{DfBC`}}}Ch}{{{f{ANb}}{f{Bh}}}}{{{f{ANb}}{f{{l{Bf}}}}}}{{{f{ANb}}{f{ANb}}}}012{{{f{ANb}}}Gh}5{{Dd{f{{Bl{{f{Bh}}}}}}{f{Bh}}}{{L`{LnLb}}}}{{Dd{f{{Bl{{f{Bh}}}}}}{f{Bh}}}{{L`{KnKl}}}}{{{f{Dd}}{f{Dd}}}{{Ch{BAb}}}}{{{f{Jl}}{f{Jl}}}{{Ch{BAb}}}}{{{f{Ld}}{f{Ld}}}{{Ch{BAb}}}}{{{f{B@l}}{f{B@l}}}{{Ch{BAb}}}}{{{f{{L`{ce}}}}}{{f{{l{e}}}}}DnDn}{{{f{ANb}}}{{f{{l{Ff}}}}}}{{{f{{L`{LjLh}}}}}{{Ch{Gh}}}}{{{f{DfANd}}{f{Bh}}}{{Hj{Fbd}}}}{{{f{{l{Cf}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{L`{LfLb}}}}{f{{l{Bf}}}}{Ch{{f{AMn}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{{L`{KnKl}}}}{f{{l{Bf}}}}{Ch{{f{AMn}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{AOl}}{f{AOl}}}d}{{{f{{L`{LjLh}}}}}Gh}{{{f{{L`{LnLb}}}}}{{l{Ob}}}}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}{{{f{Dd}}c}A`A@f}{{{f{{L`{ce}}}}g}A`DnAlA@f}{{{f{B@b}}c}A`A@f}{{{f{ANb}}c}A`A@f}{{{f{Jl}}c}A`A@f}{{{f{B@f}}c}A`A@f}{{{f{En}}c}A`A@f}{{{f{Oj}}c}A`A@f}{{{f{Ld}}c}A`A@f}{{{f{Ah}}c}A`A@f}{{{f{B@l}}c}A`A@f}{{{f{B@n}}c}A`A@f}{{{f{AGh}}c}A`A@f}{{{f{BA`}}c}A`A@f}{{{f{DfOj}}Dd}b}{{{f{Df{L`{LlLb}}}}Ld}b}{{{f{Df{L`{LfLb}}}}Ld}b}{{{f{Df{L`{LfLb}}}}LdDd}{{A`{bn}}}}{{{f{Df{L`{LfLb}}}}Dd}{{A`{bn}}}}{{{f{BC`}}}{{Hj{Gh{Ch{Gh}}}}}}{{{f{ANb}}d}ANb}{{{f{ANb}}Fd}ANb}{{{f{Jl}}}{{E`{Bh}}}}{{{f{{L`{KnKl}}}}{f{Bh}}}{{A`{{l{Bf}}n}}}}{{{f{{L`{LfLb}}}}{f{Bh}}}{{A`{{l{Bf}}n}}}}{{{f{{L`{LnLb}}}}{f{Bh}}}{{l{Bf}}}}{{{f{Jl}}{f{En}}}{{Ch{Jl}}}}{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{{l{Cf}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{L`{LlLb}}}}}Ld}{{{f{{L`{LfLb}}}}}Ld}{{{f{{L`{LfLb}}}}}{{f{{Ch{Dd}}}}}}{{{f{ANb}}B@hd}{{Cn{Cl}}}}{{{f{En}}B@h}AGh}{{{f{Oj}}B@h}BBb}{LdBA`}{{{f{En}}DdB@h}BBb}{Ld{{f{Bh}}}}{{{f{ANb}}{f{{AOj{Bh}}}}BCd}ANb}{{AGhGhd}AGh}{{{f{ANb}}}{{A`{ANbn}}}}{{{f{ANb}}}ANb}{{{f{AGh}}}{{f{AGh}}}}{fc{}}00000000000000000000000000000000000{{{f{En}}}En}{{{f{AGh}}}BCf}{{{f{{L`{LjLh}}}}Gh}{{A`{{E`{{L`{LjLh}}}}n}}}}{fEl}{{{f{{L`{LnLb}}}}{f{Bh}}}{{l{Bf}}}}{{{f{{L`{LlLb}}}}{f{Bh}}}{{A`{{l{Bf}}n}}}}{{{f{{L`{LfLb}}}}{f{Bh}}}{{A`{{l{Bf}}n}}}}{{{f{{L`{KnKl}}}}{f{Bh}}}{{A`{{l{Bf}}n}}}}4444{{{f{Jl}}{f{Jl}}}d}{{{f{{L`{KnKl}}}}{Ch{{f{AMn}}}}{f{{l{Bf}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{AMn}}}}{f{{l{Bf}}}}}{{A`{{L`{LfLb}}n}}}}{g{{A`{ANfe}}}{}{}{{Id{}{{Cj{{A`{ce}}}}}}}}0{{AGhg}{{A`{ANhe}}}{}{}{{Id{}{{Cj{{A`{ce}}}}}}}}0{BAd{{A`{eg}}}{}{{ANf{c}}ALl}{}}0{{BAdAGh}{{A`{eg}}}{}{{ANh{c}}ALl}{}}0{{{f{Jl}}}{{A`{cn}}}Mh}{c{{A`{e}}}{}{}}000000000000000000000000000000000000000000{Hf{{A`{B@l}}}}111{{}{{A`{c}}}{}}000000000000000000000000000000000000000000000{{{f{Jl}}{f{En}}}{{A`{Jln}}}}{{{f{En}}B@h}{{A`{AGhn}}}}{f{{A`{H`BCh}}}}0000{fAAn}000000000000000000000000000000000000000000000{{{f{AGh}}}AGh}{{{f{ANb}}}{{A`{ANbn}}}}{{{f{ANb}}}d}{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}Gh}cJh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{f{ANb}}}{{A`{AB`n}}}}1{{{f{En}}Jl}d}{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}}gJh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{}c{}}000000000000000000000000000000000000000000000{Ghc{}}0{{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}{Ch{Ih}}}{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{f{DfDd}}BAh}{{A`{bI`}}}}{{{f{DfDd}}BCj}{{A`{bI`}}}}{{{f{DfDd}}{f{Bh}}}{{A`{bI`}}}}{{{f{En}}}Jl}```````````{{{f{ANb}}{f{ANb}}c}{{A`{ANbn}}}AOn}{{AOn{f{{l{Ff}}}}{f{{l{Ff}}}}}{{A`{{l{Ff}}n}}}}{{{f{ANb}}{f{ANb}}}{{A`{{Hj{ANbANb}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hj{{l{Ah}}{l{Ah}}}}n}}}}`````````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}BCl}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{{}b}{Ghb}{{{f{DfBCl}}}b}2{cc{}}6{{}Gh}{{}c{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}{{}d}4`{{{f{DfBCn}}Fb{f{AOl}}}{{A`{{f{DfBCn}}n}}}}{{{f{DfBCn}}}{{f{DfBCn}}}}{{{f{DfBCn}}{f{Bh}}}{{A`{{f{DfBCn}}n}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}?{BCnANb}>=<{{DdGh{N`{AOl}}B@bd}BCn}<;:=``````````````````````````{f{{f{AM`}}}}{{{f{BD`}}}{{f{Bh}}}}777666`{{nBD`}n}{nn}7{{{f{BD`}}}f}88777{Ghb}00`{{{f{BDb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BD`}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{n}}{f{DfHn}}}{{A`{bI`}}}}0{cc{}}0{cBD`{{BAl{{E`{Bh}}}}}}{BDdn}{BDfn}{BDhn}{BDjn}{BDln}{BDnn}{BE`n}8{{}{{Gj{{f{Bh}}BDb}{{Ad{b}}}}}}{{}Gh}00{{}c{}}00{cnAM`}{{{f{Bh}}}BD`}````{{{Gj{{f{Bh}}BDb}{{Ad{b}}}}}b}{cnBEb}{fEl}0{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{f{{A`{H`BCh}}}}0{fAAn}00999{{{f{n}}c}n{{ABd{{f{Bh}}}{{Ad{El}}}}}}``````````````````{{fh}b}00{{{f{DfAB`}}{Gn{Fj}}{f{{BEd{En}}}}}{{A`{bn}}}}{{{f{DfAB`}}{Gn{Ab}}{f{{BEd{En}}}}}{{A`{bn}}}}{{{f{AB`}}{f{Eb}}}{{Gn{Fj}}}}0{{{f{AB`}}{f{{l{Bb}}}}}{{A`{AB`n}}}}{{Gh{Gn{Fj}}}AB`}{{{f{AB`}}{f{{Bl{Dd}}}}}{{A`{AB`n}}}}0{{{f{AB`}}{f{{Bl{Dd}}}}{f{{BEd{En}}}}d}{{A`{AB`n}}}}{{{f{AB`}}HfGh}AB`}{{{f{AB`}}}AB`}{{{f{DfAB`}}}{{f{DfAB`}}}}0{{{f{DfAB`}}{BEf{{Cn{Cl}}}}}{{A`{bn}}}}{{{f{DfAB`}}{f{Bh}}e}{{A`{{f{DfAB`}}n}}}BEh{{ABd{{f{Fj}}}{{Ad{c}}}}}}{{{f{DfAB`}}Ghe}{{A`{{f{DfAB`}}n}}}BEh{{ABd{{f{Fj}}}{{Ad{c}}}}}}33{f{{f{c}}}{}}0000{{{f{Df}}}{{f{Dfc}}}{}}0000{{{f{AB`}}}{{`{{D`{}{{Cj{Gh}}}}}}}}7{{{f{DfAB`}}}b}{{{f{BEj}}}BEj}{{{f{BEl}}}BEl}:{{f{f{Dfc}}}b{}}00{fb}00`{{{f{AB`}}{f{Bh}}}{{A`{{f{Fj}}n}}}}{{{f{DfAB`}}c}b{{D`{}{{Cj{Fj}}}}}}{{{f{AB`}}e}{{A`{{Gn{{f{Fj}}}}n}}}{{If{Bh}}}{{Id{}{{Cj{c}}}}}}{{}BEl}{{}AB`}{Gh{{f{c}}}{}}0000{Gh{{f{Dfc}}}{}}0000{c{{A`{BEl}}}ADn}{c{{A`{AB`}}}ADn}{Ghb}0000{{{f{AB`}}{f{Bh}}}{{A`{AB`n}}}}{{{f{DfAB`}}{f{Bh}}}{{A`{Fjn}}}}{{{f{AB`}}e}AB`{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{AB`}}{f{{BEn{DdA@n}}}}}AB`}{{{f{AB`}}{Ch{{f{{Bl{c}}}}}}}{{A`{AB`n}}}{}}{{{f{AB`}}}{{Gn{En}}}};{{{f{{BEd{BBb}}}}}AB`}{{{f{{BEd{En}}}}}AB`}{{{f{BEl}}{f{BEl}}}d}{{{f{AB`}}{f{AB`}}}d}00{{f{f{c}}}d{}}00{{{f{AB`}}}Gh}`{{{f{AB`}}e}{{A`{AB`n}}}{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{AB`}}{Gn{Fj}}}{{A`{AB`n}}}}{{{f{DfAB`}}{f{AB`}}}{{A`{bn}}}}{{{f{AB`}}}{{Gn{Oj}}}}{{{f{AB`}}AIh}{{A`{AB`n}}}}{{{f{AB`}}{f{{l{Bb}}}}}{{A`{AB`n}}}}6{{{f{BEj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BEl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{AB`}}{f{DfHn}}}{{A`{bI`}}}}0{cc{}}0000{cAB`{{Id{}{{Cj{Ab}}}}}}{cAB`{{Id{}{{Cj{Fj}}}}}}{{{f{{Bl{BF`}}}}}{{A`{AB`n}}}}{{{f{{Bl{BF`}}}}{f{{BEd{En}}}}}{{A`{AB`n}}}}{{c{f{{BEd{En}}}}}{{A`{AB`n}}}{{D`{}{{Cj{{f{BF`}}}}}}}}{{{f{AB`}}Gh}{{Ch{{Gn{Jl}}}}}}{{{f{AB`}}{f{Bh}}}{{Ch{Gh}}}}{{{f{AB`}}}{{Gn{{f{Dd}}}}}}{{{f{AB`}}}{{Gn{Dd}}}}{{{f{AB`}}}{{Gn{{f{Bh}}}}}}{{{f{AB`}}}{{f{{Bl{Fj}}}}}}{{{f{DfAB`}}}{{f{Df{Gn{Fj}}}}}}{{{f{AB`}}Gh}{{A`{BF`n}}}}{{{f{AB`}}Gh{f{DfBF`}}}{{A`{bn}}}}{{{f{AB`}}Gh{f{DfBF`}}}b}{{{f{AB`}}}{{Ch{{A`{Enn}}}}}}`{{{f{AB`}}e}{{A`{BFbn}}}{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{AB`}}{Gn{Fj}}{f{BFd}}}{{A`{{Hj{Fj{Gn{Fj}}C`}}n}}}}1{{{f{AB`}}{Gn{Fj}}dd}{{A`{BFbn}}}}{{{f{BEl}}{f{Dfc}}}bAE`}{{{f{AB`}}{Ch{Gh}}}AB`}{{{f{AB`}}}Gh}{{{f{AB`}}{f{{Bl{Fj}}}}}{{A`{AB`n}}}}{{{f{DfAB`}}{f{{Bl{Fj}}}}}{{A`{{f{DfAB`}}n}}}}{{{f{DfAB`}}{f{{Bl{Fj}}}}}{{f{DfAB`}}}}{{{f{AB`}}{BFf{Gh}}}f}{{{f{AB`}}BFh}f}{{{f{AB`}}{BFj{Gh}}}f}{{{f{AB`}}{BFl{Gh}}}f}{{{f{AB`}}{BFn{Gh}}}f}{{{f{AB`}}{Nl{Gh}}}f}{{{f{AB`}}Gh}f}{{{f{AB`}}{f{Bh}}}f}{{}Gh}0000{{{f{DfAB`}}Ghc}{{A`{{f{DfAB`}}n}}}BEh}{{}c{}}000000{{AB`Dd}{{l{j}}}}{{{f{AB`}}}{{A`{{l{Bb}}n}}}}{{{f{AB`}}}d}1{{{f{AB`}}}{{`{Jf}}}}{{{f{AB`}}B@hd}BG`}{{{f{AB`}}}{{`{{D`{}{{Cj{AB`}}}}}}}}{{{f{AB`}}}BGb}{AB`BGd}{{{f{AB`}}}Gh}5{{{f{AB`}}}{{A`{{Ch{Fj}}n}}}}1{{{f{AB`}}BEj}{{A`{{Ch{Ab}}n}}}}12{{{Gn{Fj}}}{{A`{AB`n}}}}{{Gh{Gn{Fj}}}AB`}{{{Gn{Fj}}}AB`}22{{{Gn{Fj}}Gh}{{A`{AB`n}}}}0{{{f{DfBG`}}}Ch}{{{f{DfBGb}}}Ch}{{{f{AB`}}}AB`}{{{f{AB`}}}{{`{{Ol{}{{Cj{{f{Ab}}}}}}}}}}{{{f{AB`}}ed}{{A`{{Gn{AB`}}n}}}{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}}0{{AB`e}{{A`{cn}}}{}{{Eb{AB`}{{Ad{{A`{cn}}}}}}}}{{{f{DfAB`}}e}{{A`{cn}}}{}{{Eb{{f{DfAB`}}}{{Ad{{A`{cn}}}}}}}}{{AB`gc}{{A`{en}}}{}{}{{Eb{AB`c}{{Ad{{A`{en}}}}}}}}{{{f{DfAB`}}}{{Ch{Fj}}}}{{{f{DfAB`}}}b}{{AB`B@h}{{BEf{{Cn{Cl}}}}}}{{{f{DfAB`}}{f{Bh}}Dd}{{A`{{f{DfAB`}}n}}}}{{{f{DfAB`}}{f{Bh}}c}{{A`{{f{DfAB`}}n}}}BGf}{{{f{DfAB`}}Ghc}{{A`{{f{DfAB`}}n}}}BEh}{{{f{DfAB`}}Ddc}{{A`{{f{DfAB`}}n}}}BGf}<{{{f{AB`}}{Gn{Fj}}{f{BGh}}}{{A`{{Hj{Fj{Gn{Fj}}C`}}n}}}}`{{{f{AB`}}{f{Ab}}dd{Ch{Kf}}}{{A`{AB`n}}}}0{{{f{AB`}}Ghdd{Ch{Kf}}}{{A`{AB`n}}}}{{{f{AB`}}}{{BEd{En}}}}{{{f{AB`}}{f{AB`}}}{{A`{bn}}}}{{{f{AB`}}e}{{A`{AB`n}}}{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{AB`}}Gh}{{Ch{{f{Fj}}}}}}{{{f{AB`}}c}{{A`{AB`n}}}{{BGj{Gh}}}}{{{f{AB`}}c}{{A`{{Gn{Fj}}n}}}{{BGl{Dd}}}}3{{{f{AB`}}e{f{{N`{{BEd{En}}}}}}}{{A`{AB`n}}}{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{AB`}}e{f{{BEd{En}}}}}{{A`{AB`n}}}{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{BEl}}c}A`A@f}{{{f{AB`}}c}A`A@f}{{{f{DfAB`}}e}{{A`{bn}}}{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{DfAB`}}Gh}b}{{{f{AB`}}}{{Hj{GhGh}}}}{{{f{AB`}}Hf}AB`}{{{f{AB`}}}d}{{{f{DfAB`}}}b}{{{f{AB`}}}Gh}{{{f{BG`}}}{{Hj{Gh{Ch{Gh}}}}}}{{{f{BGb}}}{{Hj{Gh{Ch{Gh}}}}}}{{{f{AB`}}HfGh}AB`}00{{{f{AB`}}cFl}{{A`{AB`n}}}{{BGl{Dd}}}}{{{f{DfAB`}}cFl}{{A`{{f{DfAB`}}n}}}{{BGl{Dd}}}}{{{f{AB`}}Hf}{{Hj{AB`AB`}}}}0{{{f{DfAB`}}}{{`{{D`{}{{Cj{AB`}}}}}}}}{{AB`Ghd}{{Gn{AB`}}}}{{{f{AB`}}BEj}{{A`{{Ch{Ab}}n}}}}{{{f{AB`}}{Ch{Gh}}}AB`}{{{f{AB`}}{f{{l{Ff}}}}}{{A`{AB`n}}}}{{{f{AB`}}{f{{Bl{A@j}}}}Mb}AB`}{AB`{{Gn{Fj}}}}{{{f{AB`}}{f{{Bl{A@j}}}}}AB`}{{{f{AB`}}{f{{l{Ff}}}}}AB`}{{{f{AB`}}{f{{l{Ff}}}}d}AB`}{{{f{AB`}}}{{f{AB`}}}}{{{f{AB`}}BGn}{{A`{{AAh{AAb{AAf{{AAd{Gh}}}}}}n}}}}{fc{}}00{fEl}{{{f{DfAB`}}{Ch{{f{Bh}}}}{Ch{{AAl{El{Gn{El}}}}}}}{{A`{AB`n}}}}{{{f{DfAB`}}{Ch{{f{Bh}}}}{Ch{{AAl{Dd{Gn{Dd}}}}}}}{{A`{AB`n}}}}{{{f{DfAB`}}{f{Bh}}e}{{A`{{f{DfAB`}}n}}}BEh{{ABd{{f{Ab}}}{{Ad{{A`{cn}}}}}}}}{{{f{DfAB`}}Ghe}{{A`{{f{DfAB`}}n}}}BEh{{ABd{{f{Fj}}}{{Ad{{A`{cn}}}}}}}}{{{f{DfAB`}}c}{{A`{bn}}}{{Id{}{{Cj{{BEf{{Cn{Cl}}}}}}}}}}{{{f{DfAB`}}c}{{A`{bn}}}{{Id{}{{Cj{{A`{{BEf{{Cn{Cl}}}}n}}}}}}}}{c{{A`{e}}}{}{}}0000{{{Hj{{BEf{{Cn{Cl}}}}{f{{BEd{BBb}}}}}}}{{A`{AB`n}}}}{BH`{{A`{AB`n}}}}{{c{f{{BEd{En}}}}}{{A`{AB`n}}}{{D`{}{{Cj{{A`{{f{BF`}}n}}}}}}}}{{{f{AB`}}{f{Bh}}}{{A`{Ghn}}}}{{}{{A`{c}}}{}}0000{f{{A`{H`BCh}}}}{fAAn}0000{{{f{AB`}}{Ch{{f{{Bl{El}}}}}}BEl{Ch{{Hj{HfGh}}}}}{{A`{AB`n}}}}{{{f{AB`}}d{Ch{{Gn{Dd}}}}BEl{Ch{{Hj{HfGh}}}}}{{A`{AB`n}}}}1{{{f{AB`}}c}{{A`{AB`n}}}{{BGl{Dd}}}}{{{f{AB`}}c{f{Bh}}BHb}{{A`{AB`n}}}{{BGl{Dd}}}}0{{{f{AB`}}{f{AB`}}}{{A`{AB`n}}}}{{{f{DfAB`}}{f{AB`}}}{{A`{{f{DfAB`}}n}}}}{{{f{DfAB`}}{f{AB`}}}b}{{}c{}}0000{{{f{AB`}}}Gh}{{{f{DfAB`}}c}{{A`{{f{DfAB`}}n}}}BEh}{{{f{DfAB`}}c{f{{BEd{En}}}}}{{A`{{f{DfAB`}}n}}}BEh}{{{f{DfAB`}}Fj}{{f{DfAB`}}}}{{{f{AB`}}Dd{Ch{Fb}}}{{A`{AB`n}}}}{{{f{DfAB`}}Dd{Ch{Fb}}}{{f{DfAB`}}}}``````{{fh}b}0{{{f{Fj}}{f{Fj}}}}{{Fjc}{}{AnMh}}{{{f{Fj}}c}{}{AnMh}}{{FjFj}}{{{f{Fj}}{f{C`}}}Fj}0000000{{{f{Fj}}{f{C`}}AjA@`}Fj}{{{f{Fj}}{f{C`}}Bj}Fj}220{{{f{Fj}}}{{A`{Mjn}}}}{{{f{DfFj}}{f{Fj}}}{{A`{{f{DfFj}}n}}}}{{{f{Fj}}{f{Fj}}ceg}Fj{{Eb{{f{Ab}}{f{Ab}}}{{Ad{Ab}}}}}{{Eb{{f{Mj}}{f{Ab}}}{{Ad{Ab}}}}}{{Eb{{f{Ab}}{f{Mj}}}{{Ad{Ab}}}}}}{{{f{Fj}}{f{Fj}}c}{{A`{Fjn}}}{{Eb{{f{Ab}}{f{Ab}}}{{Ad{Ab}}}}}}{{{f{Fj}}c}Fj{{Eb{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{Fj}}}{{A`{Fbn}}}}{{{f{Fj}}Fd}{{l{Ff}}}}{{{f{Fj}}}{{A`{{f{{l{Cf}}}}n}}}}{{{f{Fj}}}{{l{Ah}}}}{{{f{BHd}}}{{f{Ab}}}}{{{f{Fj}}}{{f{Ab}}}}{{{f{Fj}}}{{Ch{{f{BHf}}}}}}{{{f{Fj}}}{{Ch{{f{BHd}}}}}}{{{f{Fj}}}{{Ch{{f{Ab}}}}}}{{{f{BHd}}}Ab}{{{f{Fj}}}{{A`{{f{{l{Bd}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Fh}}}}n}}}}{{{f{Fj}}}{{Ch{BHh}}}}{{FjFj}}{{{f{Fj}}{f{Fj}}}{{A`{Fjn}}}}{{{f{Fj}}{f{Fj}}}}102021{{{f{Fj}}}{{A`{{f{{l{Bb}}}}n}}}}{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0{{{f{BHd}}{f{En}}}{{A`{BHdn}}}}{{{f{Fj}}{f{En}}}{{A`{Fjn}}}}10{{{f{BHd}}{f{En}}Gb}{{A`{BHdn}}}}{{{f{Fj}}{f{En}}Gb}{{A`{Fjn}}}}{{{f{Fj}}}{{A`{{f{ANb}}n}}}}{{{f{Fj}}}Fj}{{{f{BHd}}}BHd}1{{f{f{Dfc}}}b{}}0{fb}0{{{f{Fj}}}{{A`{{f{{L`{KnKl}}}}n}}}}{{{f{Fj}}}{{A`{{f{{L`{LfLb}}}}n}}}}{{{f{Fj}}}{{A`{{f{{L`{LjLh}}}}n}}}}{{}Fj}{Gh{{f{c}}}{}}0{Gh{{f{Dfc}}}{}}0{c{{A`{Fj}}}ADn}{{{f{Fj}}c}{}{AnMh}}{{FjFj}}{{{f{Fj}}{f{Fj}}}}{{Fjc}{}{AnMh}}{{{f{Fj}}{f{Fj}}}{{A`{Fjn}}}}{Ghb}0?{{{f{Fj}}}Fj}{{{f{BHd}}}{{f{En}}}}{{{f{Fj}}}{{f{En}}}}{{{f{Fj}}}{{A`{{f{{L`{LlLb}}}}n}}}}{{{f{Fj}}{f{Fj}}}d}{{{f{Fj}}{f{Fj}}}{{A`{{l{Bb}}n}}}}011{{{f{Fj}}}{{A`{Fjn}}}}{{{f{DfFj}}{f{Fj}}}{{A`{{f{DfFj}}n}}}}{{{f{Fj}}JlGh}{{A`{Fjn}}}}{{{f{Fj}}}{{A`{{f{{l{Eh}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Ej}}}}n}}}}{{{f{Fj}}}{{E`{Oj}}}}{{{f{Fj}}AIh}{{A`{Fjn}}}}{{{f{Fj}}{f{{l{Bb}}}}}{{A`{Fjn}}}}{{{f{BHd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Fj}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}0{AbFj}{BHfFj}{BHdFj}{{AbGh}BHd}{{DdGh{f{En}}}Fj}{{{f{Fj}}GhGh}Fj}{{{f{Fj}}Gh}{{A`{Jln}}}}{{{f{Fj}}}Jn}{{{f{Fj}}}{{Ch{{Cn{G`}}}}}}{{{f{Fj}}Gh}{{Ch{{f{K`}}}}}}{{{f{Fj}}Gh}Jl}{{{f{Fj}}{f{Fj}}}{{A`{{l{Bb}}n}}}}0{{{f{BHd}}}d}{{{f{Fj}}}d}{{{f{Fj}}{Ch{Gh}}}Fj}{{{f{Fj}}}{{A`{{f{{l{Of}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Kl}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Lb}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Ob}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Ff}}}}n}}}}{{{f{Fj}}}{{A`{{l{Ah}}n}}}}{{}Gh}0{{}c{}}0{BEhFj}{BHdFj}{FjFj}{FjAB`}{{{f{DfFj}}}{{f{DfAb}}}}{BHdBHd}{{{f{BHd}}}d}{{{f{Fj}}}d}{{{f{Fj}}}{{A`{{l{Bb}}n}}}}000{{{f{Fj}}}{{l{Bb}}}}0{{{f{Fj}}}Mb}{{{f{BHd}}}{{Ch{{f{Ab}}}}}}{{{f{BHd}}}Gh}{{{f{Fj}}}Gh}{{{f{Fj}}}{{A`{{f{{l{Ah}}}}n}}}}{{{f{Fj}}{f{Fj}}}{{A`{{l{Bb}}n}}}}0{{{f{DfBHd}}c}b{{Eb{Mj}{{Ad{Mj}}}}}}{{{f{Fj}}c}{{l{Bb}}}{{Eb{{f{Ab}}}{{Ad{{l{Bb}}}}}}}}{{{f{Fj}}}{{A`{Mjn}}}}{{{f{Fj}}}Mj}11{{{f{Fj}}c}{}{AnMh}}{{Fjc}{}{AnMh}}{{{f{Fj}}{f{Fj}}}}{{FjFj}}:{{{f{Fj}}}{{A`{Ghn}}}}{{{f{BHd}}}{{f{Dd}}}}{{{f{Fj}}}{{f{Dd}}}}{{DdMjGh}BHd}{{Ddc}Fj{}}{{DdEn}BHd}{{Dd{f{En}}}Fj}{{{f{Fj}}GhGh}Fj}{{DdMjGh}Fj}0{{{f{Fj}}{f{Fj}}}{{A`{{l{Bb}}n}}}}0{{{f{Fj}}}Gh}{{{f{Fj}}}{{A`{Mjn}}}}{{{f{Fj}}}{{Cn{Jf}}}}1{{{f{Fj}}AjA@`}{{A`{Mjn}}}}{{{f{Fj}}}Fj}{{{f{Fj}}{f{Fj}}}}{{Fjc}{}{AnMh}}{{{f{Fj}}c}{}{AnMh}}{{FjFj}}{{{f{DfBHd}}Dd}{{f{DfBHd}}}}{{{f{DfFj}}Dd}b}{{{f{Fj}}{f{{Bl{B@n}}}}}{{A`{Fjn}}}}0{{{f{BHd}}Gh}BHd}8{{{f{Fj}}Ajdd{Ch{Kf}}}{{A`{Fjn}}}}{{{f{Fj}}Ghdd{Ch{Kf}}}{{A`{Fjn}}}}{{{f{BHd}}}{{f{Mj}}}}{{{f{Fj}}c}A`A@f}{{{f{DfFj}}Mb}b}{{{f{Fj}}Hf}Fj}{{{f{DfFj}}}b}{{{f{Fj}}{Ch{Kf}}}Fj}{{{f{Fj}}HfGh}Fj}{{{f{Fj}}Fd}{{A`{Fjn}}}}0{{{f{Fj}}Hf}{{Hj{FjFj}}}}{{{f{Fj}}Bj}{{A`{Mjn}}}}{{{f{Fj}}}{{A`{{f{{l{Bf}}}}n}}}}{{{f{BHd}}{f{En}}}{{A`{BHdn}}}}{{{f{Fj}}{f{En}}}{{A`{Fjn}}}}{{{f{Fj}}}{{A`{{f{{l{j}}}}n}}}}{{FjFj}}{{{f{Fj}}{f{Fj}}}}{{Fjc}{}{AnMh}}{{{f{Fj}}c}{}{AnMh}}{{{f{Fj}}}{{A`{Mjn}}}}{{{f{Fj}}{Ch{Gh}}}Fj}{{{f{Fj}}{f{{l{Ff}}}}}{{A`{Fjn}}}}{{{f{Fj}}{f{{Bl{A@j}}}}Mb}Fj}{BHdAb}{FjAb}{{{f{Fj}}{f{{Bl{A@j}}}}}Fj}{{{f{Fj}}{f{{Bl{Fb}}}}}{{A`{Fjn}}}}{{{f{Fj}}{f{{Bl{Fb}}}}}Fj}{{{f{Fj}}{f{{l{Ff}}}}}Fj}{fc{}}0{{{f{Fj}}}Fj}{{{f{BHd}}}Ab}{{FjFj}{{A`{Fjn}}}}{{{f{Fj}}{f{Fj}}ceg}{{A`{Fjn}}}{{Eb{{f{Ab}}{f{Ab}}}{{Ad{{A`{Abn}}}}}}}{{Eb{{f{Mj}}{f{Ab}}}{{Ad{{A`{Abn}}}}}}}{{Eb{{f{Ab}}{f{Mj}}}{{Ad{{A`{Abn}}}}}}}}{{{f{Fj}}{f{Fj}}c}{{A`{Fjn}}}{{Eb{{f{Ab}}{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{f{Fj}}c}{{A`{Fjn}}}{{Eb{{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Cf}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Bd}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Fh}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Bb}}}}}}}}{{{f{Fj}}}{{Ch{{f{ANb}}}}}}{{{f{Fj}}}{{Ch{{f{{L`{KnKl}}}}}}}}{{{f{Fj}}}{{Ch{{f{{L`{LfLb}}}}}}}}{{{f{Fj}}}{{Ch{{f{{L`{LjLh}}}}}}}}{{{f{Fj}}}{{Ch{{f{{L`{LlLb}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Eh}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Ej}}}}}}}}{c{{A`{e}}}{}{}}0{{{f{Fj}}}{{Ch{{f{{l{Of}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Kl}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Lb}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Ob}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Ff}}}}}}}}{{}{{A`{c}}}{}}0{{{f{Fj}}}{{Ch{{f{{l{Ah}}}}}}}}{{{f{Fj}}c}{{A`{{l{Bb}}n}}}{{Eb{{f{Ab}}}{{Ad{{A`{{l{Bb}}n}}}}}}}}{{FjFj}{{A`{Fjn}}}}{{{f{Fj}}}{{Ch{{f{{l{Bf}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{j}}}}}}}}2{{{f{Fj}}}{{Ch{{f{{l{Nd}}}}}}}}7{{{f{Fj}}}{{Ch{{f{{l{Nj}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Nh}}}}}}}}{fAAn}0{{{f{Fj}}}{{A`{{f{{l{Nd}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Ff}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Nj}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Nh}}}}n}}}}{{{f{Fj}}}{{A`{Fjn}}}}0{AbBHd}{{{f{Fj}}Bj}{{A`{Mjn}}}}{{{f{Fj}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{Fj}}A@n{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{}c{}}0{{FjDd}Fj}{{{f{Fj}}c}Fj{AnMh}}{{{f{Fj}}}{{A`{Mjn}}}}{{{f{Fj}}{f{{l{Bb}}}}{f{Fj}}}{{A`{Fjn}}}}0`{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{BHj}}}BHj}{{f{f{Dfc}}}b{}}{fb}{{}BHj}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{c{{A`{BHj}}}ADn}{Ghb}{{{f{BHj}}{f{BHj}}}d}{{f{f{c}}}d{}}00{{{f{BHj}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{{f{BHj}}{f{Dfc}}}bAE`}`{{}Gh}{{}c{}}`{{{f{BHj}}c}A`A@f}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}``5````````````````````````````````{{fh}b}000{{{f{BFb}}}{{A`{AB`n}}}}`{{{f{BHl}}}{{f{{Bl{{BHn{Fb}}}}}}}}{{{f{BFb}}c}{{A`{AB`n}}}{{Af{AB`}{{Ad{{A`{AB`n}}}}}}InJ`}}{{{f{C`}}}{{l{Ah}}}}{f{{f{c}}}{}}0000000{{{f{Df}}}{{f{Dfc}}}{}}0000000{{{f{BHl}}}BHl}{{{f{C`}}}C`}{{{f{BFb}}}BFb}{{{f{BI`}}}BI`}{{f{f{Dfc}}}b{}}000{fb}000;{{}BHl}{{}C`}{Gh{{f{c}}}{}}000{{{f{BIb}}}f}1111{Gh{{f{Dfc}}}{}}0000000`{{BIdc}{}BIf}{Ghb}0000{{{f{DfBHl}}}b}111{{{f{BHl}}{f{BHl}}}d}{{{f{C`}}{f{C`}}}d}{{f{f{c}}}d{}}00000`{{{f{BIh}}}Fb}{{{f{BHl}}}{{f{{Bl{Fb}}}}}}{{{f{BFb}}}{{A`{AB`n}}}}{{{f{DfBHl}}}{{f{Df{Gn{Fb}}}}}}{{{f{BHl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{C`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BFb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BI`}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{Bh}}BI`}Dd}{cc{}}000{{{Gn{{Gn{{Hj{Fb{BHn{Fb}}}}}}}}}BHl}{{{Gn{{Hj{Fb{BHn{Fb}}}}}}}BHl}2{BHlC`}333{BIjBI`}{cBHl{{Id{}{{Cj{{Hj{Fb{BHn{Fb}}}}}}}}}}{cBHl{{Jb{}{{Cj{{Hj{Fb{BHn{Fb}}}}}}}}}}{{{f{C`}}Gh}BIh}{{{f{BFb}}}{{f{C`}}}}{{{f{DfBFb}}}{{f{DfC`}}}}{{{f{C`}}}{{l{Ff}}}}{{{f{BIl}}dd}{{A`{C`n}}}}{{{f{BFb}}}{{A`{AB`n}}}}{{{f{DfC`}}}{{f{DfBHl}}}}{{}Gh}0000000{{}c{}}0000000{C`BHl}1{BHl}{{{f{BHl}}}}310{{{f{BIh}}}d}{{{f{C`}}}d}{{{f{BHl}}}d}{{{f{BHl}}}{{BJ`{{BIn{{Gf{Fb}}}}{Gf{{BHn{Fb}}}}}}}}{{{f{C`}}}BJb}{{{f{BFb}}}{{Gn{Fj}}}}{{{f{BFb}}{Ch{{Hj{HfGh}}}}}{{Gn{Fj}}}}={{{f{BIh}}}Gh}{{{f{C`}}}Gh}?????{{{Gn{Fb}}{Gn{{BHn{Fb}}}}d}BHl}{{{f{AB`}}{Gn{Fj}}C`{Ch{{Gn{Dd}}}}}BFb}{{{f{DfBJb}}}Ch}{{{f{DfBJb}}Gh}Ch}{{{f{BFb}}c}{{A`{AB`n}}}{{Eb{AB`}{{Ad{{A`{AB`n}}}}}}InJ`}}{f}{{{f{C`}}}BId}{{{f{BFb}}AjA@`}{{A`{AB`n}}}}{{BFbe}BFb{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{C`}}HfGh}BIb}{{{f{DfBHl}}}b}{{{f{DfC`}}}b}{{{f{BFb}}Bj}{{A`{AB`n}}}}{{{f{BFb}}}{{A`{AB`n}}}}{C`{{Gn{Fb}}}}0{BFbC`}{{{f{DfBFb}}}C`}{fc{}}000{fEl}{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{f{{A`{H`BCh}}}}{fAAn}0000000{C`C`}{{{f{C`}}}{{f{BHl}}}}{{{f{C`}}}{{f{{Gn{{AAd{Fb}}}}}}}}={{}c{}}0000000`````{{{f{BHl}}c}Ab{{Eb{{Hj{Fb{f{{BHn{Fb}}}}}}}{{Ad{Ch}}}}InJ`}}{{{f{BHl}}c}Ab{{Eb{{Hj{Fb{f{{BHn{Fb}}}}}}}{{Ad{}}}}InJ`}}{{{f{{Bl{{AAd{Fb}}}}}}c}Ab{{Eb{{AAd{Fb}}}{{Ad{Ch}}}}InJ`}}{{{f{{Bl{{AAd{Fb}}}}}}c}Ab{{Eb{{AAd{Fb}}}{{Ad{}}}}InJ`}}{{{f{{Bl{c}}}}e{Ch{BJd}}}{{AMd{c}}}{BJfBJh}{{D`{}{{Cj{{Hj{FbFb}}}}}}Jj}}{{{f{{Bl{c}}}}{f{Ih}}e{Ch{BJd}}}{{AMd{c}}}{BJfBJh}{{D`{}{{Cj{{Hj{FbFb}}}}}}Jj}}{{{f{{l{c}}}}FbFb}{{l{c}}}Dn}{{{f{{Gn{{AAd{Fb}}}}}}{f{{Bl{{Cn{Cl}}}}}}}d}{{{f{BJj}}{f{C`}}}Ab}{{BJlBJl}BJl}0`{{{f{BJn}}{f{AB`}}{f{C`}}}{{A`{Abn}}}}{{{f{BJn}}}{{A`{{f{Dd}}n}}}}````````````````````````````````````{{fh}b}00{{{f{DfBK`}}Jl}{{Ch{b}}}}{{{f{DfBKb}}{f{Jl}}}b}0{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{{{f{BK`}}}BK`}{{{f{BKb}}}BKb}{{{f{BF`}}}BF`}{{f{f{Dfc}}}b{}}00{fb}00{{{f{{Bl{c}}}}}En{{Il{En}}}}{{}BF`}{Gh{{f{c}}}{}}00{Gh{{f{Dfc}}}{}}00{Ghb}00{{{f{BF`}}{f{BF`}}}d}{{f{f{c}}}d{}}00{{{f{BF`}}{f{DfHn}}}{{A`{bI`}}}}{{{Hj{{f{En}}Gh}}}BK`}{cc{}}{{{Hj{{f{En}}Gh}}}BKb}11{{gGh}{{BEd{En}}}{{BAl{Dd}}}{{BAl{En}}}{{D`{}{{Cj{{Gn{{Hj{ce}}}}}}}}}}{{}Gh}00{{}c{}}00{BK`Ab}{BKbAb}{{{f{En}}Gh}BK`}{{{f{En}}Gh}BKb}{{{Gn{Jl}}}BF`}{{{f{DfBK`}}Gh}Ab}{{{f{DfBKb}}Gh}Ab}{{{f{{Bl{BF`}}}}{Ch{Gh}}}{{A`{{BEd{En}}n}}}}0{{{f{{Bl{BF`}}}}{Ch{Gh}}}{{A`{{Gn{En}}n}}}}{fc{}}00{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAn}00==={{{f{{Bl{AB`}}}}}{{A`{AB`n}}}}{{{f{{Bl{AB`}}}}d}{{A`{AB`n}}}}`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{AB`{f{{Bl{Dd}}}}{f{{Bl{Dd}}}}{Ch{Dd}}{f{AB`}}}AB`}{{BGdc}{{A`{AB`n}}}{{Eb{BKd{f{Df{BKh{BKf}}}}{f{Df{BKh{BKj}}}}}{{Ad{{A`{bn}}}}}}}}{{{f{BKl}}{f{{Bl{Fb}}}}ddd}AB`}`{{{f{BKl}}{f{{Bl{Fb}}}}{Ch{{Hj{HfGh}}}}}AB`}{{{f{BKl}}{f{AB`}}{f{Ab}}{f{Ab}}BKn}{{A`{AB`n}}}}`{{{f{Bh}}{f{Bh}}}Dd}{{BL`{N`{{Bl{Dd}}}}}BCb}{{{f{BKl}}{f{Ab}}{f{Ab}}{Ch{{Hj{HfGh}}}}dd}{{A`{AB`n}}}}{{{f{BH`}}Gh}{{Hj{BH`BH`}}}}{{{f{AHh}}}Aj}{{{f{BLb}}}Aj}{{{f{BLd}}{f{{Bl{A@j}}}}Mb}AB`}{{{f{BLd}}{f{{Bl{A@j}}}}}AB`}{{{f{BLf}}{Ch{{Gn{{f{Bh}}}}}}{Ch{{f{Bh}}}}d}{{A`{AB`n}}}}{{BGdd}BGd}{{{BLh{c}}{Ch{{N`{BLj}}}}}{{BLh{c}}}BLl}{{{f{Ab}}}{{A`{Abn}}}}{BCbBCb}{{{BLn{}{{Ad{c}}}}{f{Ab}}}c{}}{{BCbBCb}}{{BM`BM`}}{{{f{BHb}}Hf{Ch{{f{AMn}}}}}{{A`{Hfn}}}}0{{{f{BMb}}{f{Ab}}}{{A`{Abn}}}}1{{BMdc}BGd{{If{{Bl{BCb}}}}}}6`{{BCbc}BCb{{BAl{Dd}}}}{{}BCb}{{BCbd}BCb}{{}BMf}{c{{A`{BCbn}}}{{If{{Bl{BCb}}}}}}{{{f{{N`{ce}}}}}{{f{e}}}A@hBMh}`{{BMjd}BMj}`{{{f{BMl}}}d}00`{{BCbc}BCb{{BAl{BCb}}}}{{{f{BLb}}}{{A`{Mjn}}}}{{{N`{BMl}}BMn}{{A`{BGdn}}}}{{BGdBGdcc}BGd{{BAl{BCb}}}}97{{BCbcd}BCb{{BAl{BCb}}}}{{{f{DfACf}}}b}{{{f{DfACh}}}b}{{{f{DfACf}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACh}}{Ch{c}}}b{}}{{{f{DfACf}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACh}}c}b{}}{{{f{{AHl{}{{AHj{c}}}}}}g}{{AHl{}{{AHj{c}}}}}{}{}{{Eb{{Ch{e}}}{{Ad{{Ch{c}}}}}}Ed}}{{BMdc{N`{{BEd{En}}}}}BGd{{Eb{AB`}{{Ad{{A`{AB`n}}}}}}InJ`}}{{BCbc{BNb{{N`{BN`}}}}}BCb{{Eb{Fj}{{Ad{{A`{{Ch{Fj}}n}}}}}}InJ`}}{{BCbBCbc{BNb{{N`{BN`}}}}}BCb{{Eb{FjFj}{{Ad{{A`{{Ch{Fj}}n}}}}}}InJ`}}{{{f{BCb}}{f{Dfc}}f}{{A`{BNdn}}}{{Af{{f{BCb}}f}{{Ad{{A`{BNdn}}}}}}}}{{{f{AHn}}{f{Eb}}}AHn}{{{f{AHn}}{f{Eb}}}{{l{c}}}Dn}{{BCbc{f{{Bl{BCb}}}}{BNb{{N`{BN`}}}}}BCb{{Eb{{f{Df{Bl{Fj}}}}}{{Ad{{A`{{Ch{Fj}}n}}}}}}InJ`}}{{BCbBNf{f{{Bl{BCb}}}}dd}BCb}{{ce{BNb{{N`{BN`}}}}d}BCb{{Eb{{f{Df{Bl{Fj}}}}}{{Ad{{A`{{Ch{Fj}}n}}}}}}InJ`}{{If{{Bl{BCb}}}}}}{{{f{{BEd{BBb}}}}{f{{Bl{Gh}}}}}{{BEd{BBb}}}}{{{f{{AHl{}{{AHj{c}}}}}}i{f{Df{Bl{g}}}}}b{}{}{}{{Eb{{Ch{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AHl{}{{AHj{c}}}}}}g}{{AHl{}{{AHj{c}}}}}{}{}{{Eb{e}{{Ad{c}}}}Ed}}{{{f{AI`}}}Fb}{BCbBCb}{{{f{BLb}}}{{A`{Fbn}}}}{{BCbBCbHfEn}BCb}{BH`{{N`{Cl}}}}{{{f{BNh}}}{{Ch{Gh}}}}{BNjBCb}{BNlBCb}62106{{{f{AIb}}Fd}{{l{Ff}}}}{{BCbFd}BCb}{{{f{BLb}}Fd}{{l{Ff}}}}{{cFl}BCb{{If{{Bl{BCb}}}}}}{{{f{AIb}}{f{{Bl{Fj}}}}{f{Fl}}}{{A`{{l{Ff}}n}}}}{{{f{AId}}}{{A`{{l{Ff}}n}}}}<{{{f{BLb}}}{{A`{{l{Ff}}n}}}}{cBCb{{BAl{BCb}}}}{{{f{BNn}}}{{f{{Bl{Oj}}}}}}``{BCbBNj}{eANf{}{{Id{}{{Cj{c}}}}}}{cBH`{{Id{}{{Cj{b}}}}}}{cBH`{{Id{}{{Cj{{Ch{b}}}}}}}}2{{AGhe}ANh{}{{Id{}{{Cj{c}}}}}}0{{AGhc}BH`{{Id{}{{Cj{b}}}}}}{{AGhc}BH`{{Id{}{{Cj{{Ch{b}}}}}}}}`{{{f{Df{BO`{c}}}}}{{A`{{BEd{BBb}}n}}}BOb}{{{f{BMl}}}{{f{AGj}}}}{{{f{BLb}}}{{f{AGj}}}}{{{f{BOd}}}{{f{AGj}}}}{{{f{BH`}}}{{f{AGj}}}}{{{f{DfBLb}}}{{f{DfAGj}}}}{{{f{DfBH`}}}{{f{DfAGj}}}}{f{{BOf{c}}}{}}{{{f{Mj}}}Jl}{{{f{BOh}}}{{f{{l{Bd}}}}}}{{{f{BOj}}{Ch{{f{Bh}}}}d}{{A`{{L`{KnKl}}n}}}}{{{f{BOj}}{Ch{{f{Bh}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{BOj}}{Ch{{f{Bh}}}}Lddd{Ch{{f{Dd}}}}{f{{l{Bf}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BOj}}{Ch{{f{Bh}}}}Ldd{Ch{{f{Dd}}}}{f{{l{Bf}}}}}{{A`{{L`{LfLb}}n}}}}{f{{BOl{c}}}{}}{f{{f{AM`}}}}{{{f{{N`{c}}}}}BOn{C@`A@h}}{{{f{C@b}}}{{f{{l{Ah}}}}}}{{{f{{N`{ce}}}}}{}A@hBMh}{{{f{{N`{c}}}}}NnC@d}{{{f{C@f}}}{{f{BCb}}}}{{{f{{N`{ce}}}}}{{f{c}}}A@hBMh}{{{f{ANn}}}{{f{En}}}}{{{f{C@h}}}{{f{Ab}}}}{{{f{DfBLb}}}{{A`{Ghn}}}}{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}}{{Ch{{f{{Bl{c}}}}}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{f{C@j}}}{{f{{l{Bf}}}}}}{{{Gn{BCb}}}BCb}{{{f{BOj}}{Ch{{f{Bh}}}}d}{{A`{{L`{LnLb}}n}}}}{{{N`{{Bl{{C@l{c}}}}e}}}{{N`{{Bl{c}}e}}}{}BMh}{{{N`{{C@l{c}}e}}}{{N`{ce}}}{}BMh}{{{f{Bh}}}BCb}{{BCb{Ch{Fb}}}BCb}{{{f{C@n}}}{{A`{{l{Bf}}n}}}}{{{f{C@n}}}{{l{Bf}}}}{{{f{{L`{LfLb}}}}{f{Ld}}{f{AMn}}}{{L`{LlLb}}}}`{{{BLh{{Cn{BLl}}}}{Ch{{N`{{BEd{En}}}}}}}{{A`{CA`n}}}}{{{CAb{c}}{f{{BEd{En}}}}}{{A`{{CAd{c}}n}}}CAf}{{{CAh{c}}{f{{BEd{En}}}}}{{A`{{CAj{c}}n}}}CAf}{{{CAl{c}}Gh}{{A`{CAnn}}}BLl}{{CB`Gh}{{A`{CAnn}}}}{{{CBb{c}}{f{{BEd{En}}}}}{{A`{{CBd{c}}n}}}CAf}{{{f{Df{BLh{c}}}}}{{A`{CBfn}}}BLl}`{BCbCBh}{{BCbCBjBCb}BCb}{{BM`BM`}}{{BMfBMf}BMf}{{{f{DfBMf}}BMf}b}10{{{f{BMf}}}Fb}0321{f{{f{c}}}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{N`{ce}}}}}{{f{c}}}A@hBMh}1111111111111111111111111111111{{{f{Df}}}{{f{Dfc}}}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{BGdFbcFl}BGd{{If{{Bl{BCb}}}}}}{{{f{{N`{e}}}}}CBlCBn{{CC`{c}}A@h}}{BH`{{Cn{Cl}}}}{{{f{BLb}}}{{Ch{{Cn{G`}}}}}}```{BGdBGd}```{{{f{CCb}}{f{Dd}}}{{A`{Ddn}}}}{{{f{{N`{e}}}}c}{}{}{{CCd{c}}A@h}}{{{f{Df}}{CCf{c}}}{}{}}{{CCh{Gn{BCb}}}{{A`{BCbn}}}}{{{f{ANb}}{f{ANb}}c}{{A`{ANbn}}}AOn}{{{f{BOd}}{f{Df{Bl{Fj}}}}}{{A`{{Ch{Fj}}n}}}}{{{f{CCj}}FjFj}{{A`{Fjn}}}}{{CCh{Gn{BCb}}}BCb}{{{f{CCl}}}b}{{BCbEn}BCb}{{{f{BLb}}{f{En}}Gb}{{A`{Abn}}}}{{BGd{CCn{{f{Bh}}EnA@n}}d}BGd}{{{f{AIf}}{f{En}}}{{A`{Abn}}}}3{{{f{B@`}}{f{En}}}{{A`{Abn}}}}{{BGdEnd}BGd}2{{{f{AIf}}{f{En}}Gb}{{A`{Abn}}}}{{{f{B@`}}{f{En}}Gb}{{A`{Abn}}}}{{BCbEnGb}BCb}`{BCbCD`}{{{f{{N`{c}}}}}{{Ch{{f{AM`}}}}}{AM`A@h}}{BCbBCb}{{{f{CDb}}}{{A`{Abn}}}}1`{{{f{CDd}}}{{A`{{l{Kl}}n}}}}{{{f{BH`}}Gh}d}{{{f{CDf}}{f{Ab}}}{{A`{Abn}}}}{{{f{BLb}}{f{Ab}}}{{A`{Abn}}}}{{{f{CDf}}c}{{A`{Abn}}}B`}{{{f{BLb}}}{{Gl{{Gf{{Cn{Cl}}}}{Gj{{f{{Cn{Cl}}}}}{{Ad{Gh}}}}}}}}``{{{f{BLb}}}{{f{{Gn{{Cn{Cl}}}}}}}}{{{f{DfBLb}}}{{f{Df{Gn{{Cn{Cl}}}}}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BCbBCbBCb}BCb}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BCbBCb}BCb}10{{{f{CCl}}}CCl}{{{f{BGd}}}BGd}{{{f{BMd}}}BMd}{{{f{BMn}}}BMn}{{{f{CDh}}}CDh}{{{f{CDj}}}CDj}{{{f{CDl}}}CDl}{{{f{CDn}}}CDn}{{{f{CE`}}}CE`}{{{f{BFd}}}BFd}{{{f{BGh}}}BGh}{{{f{CEb}}}CEb}{{{f{BHb}}}BHb}{{{f{CEd}}}CEd}{{{f{CEf}}}CEf}{{{f{CEh}}}CEh}{{{f{CEj}}}CEj}{{{f{ABb}}}ABb}{{{f{A@j}}}A@j}{{{f{BKn}}}BKn}{{{f{CEl}}}CEl}{{{f{CEn}}}CEn}{{{f{CF`}}}CF`}{{{f{CFb}}}CFb}{{{f{CFd}}}CFd}{{{f{CFf}}}CFf}{{{f{CFh}}}CFh}{{{f{CFj}}}CFj}{{{f{CFl}}}CFl}{{{f{CFn}}}CFn}{{{f{CG`}}}CG`}{{{f{CGb}}}CGb}{{{f{CGd}}}CGd}{{{f{CGf}}}CGf}{{{f{CGh}}}CGh}{{{f{CGj}}}CGj}{{{f{CGl}}}CGl}{{{f{CGn}}}CGn}{{{f{CH`}}}CH`}{{{f{CHb}}}CHb}{{{f{CHd}}}CHd}{{{f{C@f}}}C@f}{{{f{CHf}}}CHf}{{{f{CHh}}}CHh}{{{f{BCb}}}BCb}{{{f{CHj}}}CHj}{{{f{CHl}}}CHl}{{{f{CHn}}}CHn}{{{f{CI`}}}CI`}{{{f{CIb}}}CIb}{{{f{CId}}}CId}{{{f{CIf}}}CIf}{{{f{CIh}}}CIh}{{{f{{CIj{c}}}}}{{CIj{c}}}{JhJh}}{{{f{CIl}}}CIl}{{{f{CIn}}}CIn}{{{f{CBj}}}CBj}{{{f{CJ`}}}CJ`}{{{f{CJb}}}CJb}{{{f{{BNb{c}}}}}{{BNb{c}}}Jh}{{{f{CJd}}}CJd}{{{f{CJf}}}CJf}{{{f{CJh}}}CJh}{{{f{CJj}}}CJj}{{{f{CJl}}}CJl}{{{f{CJn}}}CJn}{{{f{CK`}}}CK`}{{{f{{N`{ce}}}}}{{N`{ce}}}A@h{BMhJh}}{{{f{CKb}}}CKb}{{{f{CKd}}}CKd}{{{f{BNf}}}BNf}{{{f{CKf}}}CKf}{{{f{CKh}}}CKh}{{{f{CKj}}}CKj}{{{f{CKl}}}CKl}{{{f{CKn}}}CKn}{{{f{CL`}}}CL`}{{{f{CLb}}}CLb}{{{f{CLd}}}CLd}{{{f{CLf}}}CLf}{{{f{BM`}}}BM`}{{{f{CCh}}}CCh}{{{f{BMf}}}BMf}{{{f{A@b}}}A@b}{{{f{BH`}}}BH`}{{{f{BGn}}}BGn}{{{f{CLh}}}CLh}{{{f{BBb}}}BBb}{{{f{CLj}}}CLj}{{{f{Mj}}}Mj}{{{f{CLl}}}CLl}{{{f{CLn}}}CLn}{{{f{A@`}}}A@`}{{{f{BJd}}}BJd}{{{f{CM`}}}CM`}{{{f{CMb}}}CMb}{{{f{CMd}}}CMd}{{{f{BLb}}}{{N`{BLb}}}}{{f{f{Dfc}}}b{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{N`{c}}}}{f{CMf}}}CMf{CMhA@h}}{fb}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{{{f{CMj}}}{{Ch{{f{CMl}}}}}}{{{f{CDh}}}{{Ch{{f{CMl}}}}}}{{{f{CDl}}}{{Ch{{f{CMl}}}}}}``{{{f{BHb}}{f{BHb}}}BAb}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}BAb{CMnA@h}BMh}{{{f{{Bl{BCb}}}}}BCb}{{BMjCEl}BMj}{{{f{CEl}}{f{CEn}}}d}`{{{f{{Bl{Fj}}}}}{{A`{Fjn}}}}{cBCb{{BAl{Dd}}}}{BGd{{A`{AB`n}}}}{c{{A`{{Gn{AB`}}n}}}{{Jb{}{{Cj{BGd}}}}}}{BAde{}{{ANf{c}}ALl}}0{{BAdAGh}e{}{{ANh{c}}ALl}}0{{AEbDd}{{l{c}}}Dn}{{AEd{f{{l{c}}}}}{{l{c}}}Dn}10{{AEdDdEn}{{l{c}}}Dn}0{BGd{{A`{CCln}}}}{{{f{DfBGd}}}{{A`{{N`{{BEd{En}}}}n}}}}{eBCb{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{CJh}}Gh}CN`}``{{{f{BLf}}{Gn{{f{Bh}}}}{Ch{{f{Bh}}}}d}{{A`{AB`n}}}}{{{f{{Bl{c}}}}{f{{BEd{BBb}}}}}{{A`{{Gn{Gh}}n}}}{{If{Bh}}}}`{{f{f{c}}}BAb{}}0{{CGj{f{{BEd{En}}}}}{{A`{CNbn}}}}{BMfBMf}```{{{f{CLn}}}{{A`{{N`{{BEd{En}}}}n}}}}{{cCLl}{{A`{BGdn}}}{{If{{Bl{BGd}}}}}}{{{f{C@n}}{f{{l{Bf}}}}}{{l{Bf}}}}`{{{Gn{BCb}}}{{A`{BCbn}}}}{{ed}{{A`{BCbn}}}{{BAl{BCb}}Jh}{{If{{Bl{c}}}}}}{{{f{CMj}}{Gn{BGd}}}{{A`{BGdn}}}}{{{f{CDh}}{Gn{BGd}}}{{A`{BGdn}}}}55{e{{A`{BCbn}}}{{BAl{BCb}}Jh}{{If{{Bl{c}}}}}}{{c{f{Bh}}d}BCb{{If{{Bl{BCb}}}}}}{{BNjc}BCb{{BAl{BCb}}}}{{{f{CNd}}{f{{Bl{Bj}}}}}{{l{Bb}}}}{{{f{C@n}}{f{Bh}}d}{{A`{{l{Bb}}n}}}}{{BNlc}BCb{{BAl{BCb}}}}{{{f{BMf}}BMf}d}{{{f{CNd}}{f{{l{Bd}}}}}{{l{Bb}}}}{{{f{C@n}}{f{{l{Bf}}}}dd}{{A`{{l{Bb}}n}}}}{{{f{C@n}}{f{Bh}}}{{A`{{l{Bb}}n}}}}{{{f{Cl}}{f{AGh}}}{{Cn{Cl}}}}{{{f{Ab}}Gh}{{A`{{l{Ff}}n}}}}{{{f{{N`{CNf}}}}{f{CNh}}{f{CNh}}}{{CNl{{Cn{CNj}}}}}}0{BGdBGd}{{{CNn{c}}}{{A`{Ghn}}}BLl}{BCbBCb}{{{f{C@n}}{f{Bh}}d}{{A`{{l{Ff}}n}}}}{{{f{C@n}}{f{{l{Bf}}}}d}{{A`{{l{Ff}}n}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{ANl}}Bj{Ch{Bj}}{Ch{{f{CGh}}}}Bjd}{{A`{Ghn}}}}{{{f{CO`}}{Ch{{f{COb}}}}}{{A`{Hfn}}}}{{{f{{Bl{Bj}}}}Bj{Ch{Bj}}{Ch{{f{CGh}}}}Bjd}{{A`{Ghn}}}}3{{{AOj{Bh}}}En}{{{f{BKl}}{f{{Bl{A@j}}}}dd}AB`}{{{f{COd}}}{{CCn{GhMbA@n}}}}`{{BGdBGd{Ch{Dd}}}BGd}{{{f{COf}}{f{AB`}}{Ch{Dd}}{Ch{{Hj{HfGh}}}}}{{A`{AB`n}}}}{{{f{COf}}{f{AB`}}{Ch{{Hj{HfGh}}}}d}{{A`{{Hj{AB`AB`}}n}}}}{{{f{Ab}}d}{{A`{Abn}}}}{{BCbd}BCb}{{BCbced}BCb{{Eb{FjFj}{{Ad{{A`{{Ch{Fj}}n}}}}}}InJ`}{{If{{Bl{BCb}}}}}}212121{{ce}BCb{{Eb{FjFj}{{Ad{{A`{{Ch{Fj}}n}}}}}}InJ`}{{If{{Bl{BCb}}}}}}32{{COhBCbGhd}BCb}{{{f{{N`{c}}}}}COj{CMhA@h}}{{{f{CO`}}{Ch{{f{COb}}}}CHld}{{A`{AB`n}}}}```{{BCbBCbBHbCEd}BCb}`{CKfBCb}`{{BCbBCbBHbCEd{Ch{Ld}}{Ch{Dd}}}BCb}0{AMlHf}00{{{f{COl}}}{{l{Ob}}}}{{{f{COn}}}{{l{Ob}}}}{{{f{CDd}}}{{A`{{l{Ob}}n}}}}`{{{f{D@`}}}{{l{Lb}}}}{{{f{BHb}}}Hf}`{{{f{BHb}}}d}```{{}b}{cbBMh}{{}BGd}{{}BMn}{{}CDj}{{}CDn}{{}BFd}{{}BGh}{{}CEh}{{}D@b}{{}BKn}{{}CEl}{{}CF`}{{}CFb}{{}CFd}{{}CFf}{{}CFh}{{}CFl}{{}CG`}{{}CGb}{{}CGd}{{}CGf}{{}CGl}{{}CHf}{{}CHh}{{}BCb}{{}CHl}{{}CHn}{{}CI`}{{}CIb}{{}CIf}{{}CIh}{{}CIl}{{}CJ`}{{}{{BNb{{N`{CCj}}}}}}{{}{{BNb{{N`{BN`}}}}}}{{}{{BNb{{N`{D@d}}}}}}{{}{{N`{D@f}}}}{{}{{N`{Bh}}}}{{}{{N`{{Bl{c}}}}}{}}{{}{{N`{c}}}D@h}{{}CKf}{{}CKh}{{}CKl}{{}CKn}{{}CL`}{{}CLb}{{}CLf}{{}BMf}{{}A@b}{{}BGn}{{}BBb}{{}CLj}{{}Mj}{{}CLl}{{}CLn}{{}A@`}`{{}{{AAl{{Gn{ABb}}{Gn{A@j}}}}}}{{{f{{N`{CNf}}}}{f{CNh}}}{{CNl{{Cn{CNj}}}}}}{{{f{{N`{CNf}}}}{CNl{{Cn{D@j}}}}}{{CNl{{Cn{D@j}}}}}}{Gh{{f{c}}}{}}0{{{f{{AMj{c}}}}}f{}}11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111{{{f{{BNb{c}}}}}f{}}2222222{{{f{{N`{ce}}}}}{{f{c}}}A@hBMh}3333333333333333333333333333333{Gh{{f{Dfc}}}{}}00{{{f{Df{AMj{c}}}}}{{f{Df}}}{}}111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111```{{{f{CLn}}}{{A`{Eln}}}}{{{f{BGd}}}{{A`{Eln}}}}0001{{{f{{N`{c}}}}}{{f{Bh}}}{AM`A@h}}{{{f{BBb}}c}{{A`{D@ln}}}{{Jf{}{{Cj{{f{D@n}}}}}}}}{c{{A`{CE`}}}ADn}{c{{A`{BFd}}}ADn}{c{{A`{BGh}}}ADn}{c{{A`{BHb}}}ADn}{c{{A`{CEd}}}ADn}{c{{A`{CEf}}}ADn}{c{{A`{CEh}}}ADn}{c{{A`{BKn}}}ADn}{c{{A`{CEl}}}ADn}{c{{A`{CEn}}}ADn}{c{{A`{CF`}}}ADn}{c{{A`{CFb}}}ADn}{c{{A`{CFd}}}ADn}{c{{A`{CFf}}}ADn}{c{{A`{CFh}}}ADn}{c{{A`{CFj}}}ADn}{c{{A`{CFl}}}ADn}{c{{A`{CFn}}}ADn}{c{{A`{CG`}}}ADn}{c{{A`{CGb}}}ADn}{c{{A`{CGd}}}ADn}{c{{A`{CGf}}}ADn}{c{{A`{CGh}}}ADn}{c{{A`{CGj}}}ADn}{c{{A`{CGl}}}ADn}{c{{A`{C@f}}}ADn}{c{{A`{CHf}}}ADn}{c{{A`{CHh}}}ADn}{c{{A`{BCb}}}ADn}{c{{A`{CHj}}}ADn}{c{{A`{CHn}}}ADn}{c{{A`{CI`}}}ADn}{c{{A`{CIb}}}ADn}{c{{A`{CId}}}ADn}{c{{A`{CIf}}}ADn}{c{{A`{CIh}}}ADn}{c{{A`{{CIj{e}}}}}ADn{DA`Jh}}{c{{A`{CIl}}}ADn}{c{{A`{CIn}}}ADn}{c{{A`{CBj}}}ADn}{c{{A`{CJ`}}}ADn}{c{{A`{CJb}}}ADn}{c{{A`{{BNb{{N`{BOd}}}}}}}ADn}{c{{A`{{BNb{{N`{CCb}}}}}}}ADn}{c{{A`{{BNb{Ab}}}}}ADn}{c{{A`{{BNb{{N`{BN`}}}}}}}ADn}{c{{A`{{BNb{{N`{CLn}}}}}}}ADn}{c{{A`{CJd}}}ADn}{c{{A`{CJf}}}ADn}{c{{A`{CJj}}}ADn}{c{{A`{CJl}}}ADn}{c{{A`{CJn}}}ADn}{c{{A`{CK`}}}ADn}{c{{A`{{N`{e}}}}}ADnA@h}{c{{A`{CKb}}}ADn}{c{{A`{CKd}}}ADn}{c{{A`{BNf}}}ADn}{c{{A`{CKj}}}ADn}{c{{A`{CKl}}}ADn}{c{{A`{CKn}}}ADn}{c{{A`{CL`}}}ADn}{c{{A`{CLb}}}ADn}{c{{A`{CLd}}}ADn}{c{{A`{CLf}}}ADn}{c{{A`{BM`}}}ADn}{c{{A`{A@b}}}ADn}{c{{A`{BGn}}}ADn}{c{{A`{CLh}}}ADn}{c{{A`{BBb}}}ADn}{c{{A`{CLj}}}ADn}{c{{A`{Mj}}}ADn}{c{{A`{CLl}}}ADn}{c{{A`{CLn}}}ADn}{c{{A`{A@`}}}ADn}{c{{A`{BJd}}}ADn}{c{{A`{CM`}}}ADn}{c{{A`{CMb}}}ADn}{c{{A`{CMd}}}ADn}```{{{f{Ab}}HfDAb}{{A`{Abn}}}}{{BNlHfDAb}BCb}{{BCbHfDAb}BCb}{{BMfBMf}BMf}{{{f{CLn}}}{{A`{{`{BEb}}n}}}}``{{{BLn{}{{Ad{c}}}}{f{Ab}}}c{}}{{BCbBCb}}{{{f{BMb}}{f{Ab}}}{{A`{Abn}}}}{{BCbc}BCb{{BAl{BCb}}}}{{{N`{AGjc}}}{{A`{{N`{ec}}{N`{AGjc}}}}}BMh{AGjInJ`}}{{{f{{N`{c}}}}AAn}{{Ch{b}}}{CMhA@h}}{{{N`{AGjc}}}{{N`{ec}}}BMh{AGjInJ`}}{{{f{{N`{ce}}}}}{{DAd{ce}}}A@h{JhBMh}}{Ghb}00000{{{f{DfCCl}}}b}11{{BGde}BGd{{BAl{BM`}}}{{Id{}{{Cj{c}}}}}}2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222{{{f{Df{N`{ce}}}}}bA@hBMh}333333333333333333333333333333{BCbBCb}2{{BGd{Ch{{Gn{BCb}}}}}BGd}1{{{f{BLb}}}Ab}{{{f{{N`{c}}}}CMf}b{CMhA@h}}{{{f{{L`{LfLb}}}}{f{Ld}}{f{AMn}}}{{L`{LlLb}}}}`{BCbDAf}{{{f{B@`}}}{{f{En}}}}{{{f{BLb}}}{{f{En}}}}{{{f{BH`}}}{{f{AGh}}}}{{{f{BBb}}}{{f{AGh}}}}{{{f{Mj}}}{{f{En}}}}``{{{f{En}}}BCb}{cBCb{{If{{Bl{En}}}}}}`{CKhBCb}{{}CIf}{{}BMf}{{{f{{N`{c}}}}{f{DAh}}}d{CMhA@h}}{fc{{BAj{BAh}}}}0`{{{f{CNd}}{f{{Bl{Bj}}}}}{{l{Bb}}}}{{{f{CNd}}{f{{l{Bd}}}}}{{l{Bb}}}}{{BHb{f{En}}{f{Bh}}}{{A`{bn}}}}{{BHb{Ch{{f{Bh}}}}{f{Bh}}}{{A`{bn}}}}{{{f{{BEd{c}}}}{f{{BEd{c}}}}}{{A`{bn}}}{}}{{{f{DAj}}{f{Bh}}}{{A`{bn}}}}{{{f{{N`{c}}}}{f{CMf}}}b{CMhA@h}}`{{{f{CE`}}{f{CE`}}}d}{{{f{BFd}}{f{BFd}}}d}{{{f{BGh}}{f{BGh}}}d}{{{f{BHb}}{f{BHb}}}d}{{{f{CEd}}{f{CEd}}}d}{{{f{CEf}}{f{CEf}}}d}{{{f{CEh}}{f{CEh}}}d}{{{f{ABb}}{f{ABb}}}d}{{{f{BKn}}{f{BKn}}}d}{{{f{CEl}}{f{CEl}}}d}{{{f{CEn}}{f{CEn}}}d}{{{f{CF`}}{f{CF`}}}d}{{{f{CFb}}{f{CFb}}}d}{{{f{CFd}}{f{CFd}}}d}{{{f{CFf}}{f{CFf}}}d}{{{f{CFh}}{f{CFh}}}d}{{{f{CFj}}{f{CFj}}}d}{{{f{CFl}}{f{CFl}}}d}{{{f{CFn}}{f{CFn}}}d}{{{f{CG`}}{f{CG`}}}d}{{{f{CGb}}{f{CGb}}}d}{{{f{CGd}}{f{CGd}}}d}{{{f{CGf}}{f{CGf}}}d}{{{f{CGh}}{f{CGh}}}d}{{{f{CGj}}{f{CGj}}}d}{{{f{CGl}}{f{CGl}}}d}{{{f{C@f}}{f{C@f}}}d}{{{f{CHf}}{f{CHf}}}d}{{{f{CHh}}{f{CHh}}}d}{{BCbc}BCb{{BAl{BCb}}}}{{{f{BCb}}{f{BCb}}}d}{{{f{CHj}}{f{CHj}}}d}{{{f{CHn}}{f{CHn}}}d}{{{f{CI`}}{f{CI`}}}d}{{{f{CIb}}{f{CIb}}}d}{{{f{D@l}}{f{D@l}}}d}{{{f{CId}}{f{CId}}}d}{{{f{CIf}}{f{CIf}}}d}{{{f{CIh}}{f{CIh}}}d}{{{f{{CIj{c}}}}{f{{CIj{c}}}}}d{DAlJh}}{{{f{CIl}}{f{CIl}}}d}{{{f{CIn}}{f{CIn}}}d}{{{f{CBj}}{f{CBj}}}d}{{{f{CJ`}}{f{CJ`}}}d}{{{f{CJb}}{f{CJb}}}d}{{{f{{BNb{{N`{c}}}}}}{f{{BNb{{N`{c}}}}}}}dA@h}{{{f{{BNb{Ab}}}}{f{{BNb{Ab}}}}}d}{{{f{CJd}}{f{CJd}}}d}{{{f{CJf}}{f{CJf}}}d}{{{f{CJj}}{f{CJj}}}d}{{{f{CJl}}{f{CJl}}}d}{{{f{CJn}}{f{CJn}}}d}{{{f{CK`}}{f{CK`}}}d}{{{f{{N`{Cl}}}}{f{Cl}}}d}{{{f{{N`{DAn}}}}{f{DAn}}}d}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DAlA@h}BMh}{{{f{CKb}}{f{CKb}}}d}{{{f{CKd}}{f{CKd}}}d}{{{f{BNf}}{f{BNf}}}d}{{{f{CKj}}{f{CKj}}}d}{{{f{CKl}}{f{CKl}}}d}{{{f{CKn}}{f{CKn}}}d}{{{f{CL`}}{f{CL`}}}d}{{{f{CLb}}{f{CLb}}}d}{{{f{CLd}}{f{CLd}}}d}{{{f{CLf}}{f{CLf}}}d}{{{f{BM`}}{f{BM`}}}d}{{{f{A@b}}{f{A@b}}}d}{{{f{BH`}}{f{{f{Cl}}}}}d}{{{f{BH`}}{f{BH`}}}d}{{{f{BGn}}{f{BGn}}}d}{{{f{CLh}}{f{CLh}}}d}{{{f{BBb}}{f{BBb}}}d}{{{f{CLj}}{f{CLj}}}d}{{{f{Mj}}{f{Mj}}}d}{{{f{CLl}}{f{CLl}}}d}{{{f{A@`}}{f{A@`}}}d}{{{f{BJd}}{f{BJd}}}d}{{{f{CM`}}{f{CM`}}}d}{{{f{CMb}}{f{CMb}}}d}{{{f{CMd}}{f{CMd}}}d}{{BCbc}BCb{{BAl{BCb}}}}{{{f{{AIj{}{{Cj{c}}}}}}e}c{}{}}0{{f{f{c}}}d{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{l{Bf}}}}}{{l{Bf}}}}{{{f{Bh}}}El}{{DB`BCbd}BCb}{{{f{{N`{c}}}}{f{DBb}}}b{CMhA@h}}{{{f{{N`{c}}}}{f{DBb}}}d{CMhA@h}}``{{BCbc}BCb{{BGl{Dd}}}}{{BCbc}BCb{{If{{Bl{En}}}}}}{{{f{Df}}c}{{A`{{f{Dfe}}BDl}}}DBd{}}{{{f{{N`{c}}}}{f{CMf}}}b{CMhA@h}}{{{f{{Bl{DBf}}}}d{Ch{{f{CMl}}}}}{{A`{{N`{{Bl{DBf}}}}n}}}}{{{f{{Bl{DBf}}}}d{Ch{{f{CMl}}}}d}{{A`{{Hj{{N`{{Bl{DBf}}}}Gh}}n}}}}{{{f{{Bl{c}}}}{f{{Bl{c}}}}}d{{If{ANl}}}}{{{f{BGd}}d}{{A`{Eln}}}}{BNjBCb}{{BGde}BGd{{BAl{BM`}}Jh}{{If{{Bl{c}}}}}}{{{f{AIl}}}{{A`{Abn}}}}{BCbBCb}{{{f{AIl}}}{{A`{{Hj{Ab{Hh{Hf}}}}n}}}}`{{{f{DfBMf}}c}b{{Id{}{{Cj{BMf}}}}}}{{BCbBCbBCb}BCb}{{{f{C@n}}{f{{l{Bf}}}}Gh}{{A`{{l{Bf}}n}}}}{A@j{{Hj{FbFb}}}}{{{f{C@n}}{f{Bh}}}{{A`{{l{Ah}}n}}}}{{{f{C@n}}{f{{l{Bf}}}}}{{A`{{l{Ah}}n}}}}{{{f{C@n}}{f{Bh}}{f{En}}}{{A`{Abn}}}}{{{f{ACf}}}d}{{{f{CCl}}}{{Ch{{A`{AB`n}}}}}}{{BGdGh}{{A`{AB`n}}}}{{{f{CCl}}}{{A`{AB`n}}}}{{{f{ACf}}}{{f{Oj}}}}{{{f{BLb}}}{{E`{Oj}}}}{{BL`Hf}BCb}{{BL`{f{Bh}}}BCb}{{BL`e}BCb{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{BH`}}}{{f{{Bl{BBb}}}}}}`{{BGdc}BGd{{BAl{BCb}}}}{{BCbc}BCb{{BAl{BCb}}}}`10{{BCbAIh}BCb}{{{f{AIn}}c}{{A`{AInn}}}{}}{{{f{AJ`}}{f{{l{Bb}}}}}{{A`{{l{c}}n}}}Dn}{{{f{BLb}}{f{{l{Bb}}}}}{{A`{Abn}}}}{{BGdBCb}BGd}5{{{f{C@n}}{f{Bh}}d}{{A`{{l{Ff}}n}}}}{{{f{C@n}}{f{{l{Bf}}}}dd}{{A`{{l{Ff}}n}}}}{{{f{C@n}}{f{Bh}}}{{A`{{l{Ff}}n}}}}{ACh{{l{c}}}Dn}{DBh{{A`{AB`n}}}}{{{f{DfDBj}}{f{DfAB`}}}{{A`{bn}}}}{{AOn{f{{l{Ff}}}}{f{{l{Ff}}}}}{{A`{{l{Ff}}n}}}}{BMjBGd}{CMj{{A`{BGdn}}}}{CDh{{A`{BGdn}}}}{CDl{{A`{BGdn}}}}{{{BLh{c}}}{{A`{AB`n}}}BLl}{{{f{Df{CAb{c}}}}{f{DfAB`}}}{{A`{bn}}}CAf}{{{DBl{c}}}{{A`{AB`n}}}BLl}{{{BO`{c}}}{{A`{AB`n}}}BOb}{{{f{Df{DBn{c}}}}{f{DfAB`}}}{{A`{bn}}}CAf}{{{f{Df{CAh{c}}}}{f{DfAB`}}}{{A`{bn}}}CAf}{{{f{Df{DC`{c}}}}{f{DfAB`}}}{{A`{bn}}}CAf}{{{DCb{c}}}{{A`{AB`n}}}BLl}{{{CNn{c}}}{{A`{AB`n}}}BLl}{{{CAl{c}}}{{A`{AB`n}}}BLl}{CB`{{A`{AB`n}}}}{{{CBb{c}}{f{DfAB`}}}{{A`{Kfn}}}CAf}{{{f{DfACf}}}{{l{Ah}}}}?>={{{DBl{c}}{Ch{{N`{BLj}}}}d}{{A`{AB`n}}}BLl}{{{f{CAn}}Gh}d}{{}BCb}{BGdBGd}{BNlBCb}{BCbBCb}{{{f{BLb}}}Mj}`1```{{}{{BNb{{N`{BN`}}}}}}{{{f{CDb}}}{{A`{Abn}}}}3{{BCbBCb}BCb}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Df{N`{AFn}}}}}{{A`{bBDl}}}}{{{f{Df}}}{{A`{b}}}}{{{f{BOd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CCj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CCb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CE`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BFd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BGh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CEb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BHb}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CEd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CEf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CEh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{ABb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{A@j}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BMl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{DCd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BKn}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CEl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CEn}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CF`}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CFb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CFd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CFf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CFh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CFj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CFl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CFn}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CG`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CGb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CGd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CGf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CGh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CGj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CGl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CHf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CHh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BCb}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CHj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CHn}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CI`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CIb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{D@l}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CId}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CIf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CIh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{{CIj{c}}}}{f{DfHn}}}{{A`{bI`}}}Jh}{{{f{CIl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CIn}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CBj}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CJ`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CJb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{{BNb{c}}}}{f{DfHn}}}{{A`{bI`}}}{}}{{{f{CJd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CJf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CJh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CJj}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CJl}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CJn}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CK`}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{{N`{ce}}}}{f{DfHn}}}{{A`{bI`}}}{AGlA@h}BMh}{{{f{{N`{ce}}}}{f{DfHn}}}{{A`{bI`}}}A@hBMh}{{{f{{N`{ce}}}}{f{DfHn}}}{{A`{bI`}}}{BEbA@h}BMh}{{{f{CKb}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CKd}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{BNf}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CKf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CKh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CKj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CKl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CKn}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CL`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CLb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CLd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CLf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BM`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CCh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BMf}}{f{DfHn}}}{{A`{bI`}}}}0000{{{f{A@b}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BH`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BGn}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CLh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BBb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CLj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Mj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CLl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{A@`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BJd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CM`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CMb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CMd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Bh}}BI`}Dd}```{{BCbce}BCb{{Eb{FjFj}{{Ad{{A`{{Ch{Fj}}n}}}}}}InJ`}{{If{{Bl{BCb}}}}}}{{BMjd}BMj}``{{{f{Bh}}c}{{A`{BCbn}}}{{If{{Bl{BCb}}}}}}{{BCb{Ch{Fb}}}BCb}{cc{}}000000{CLnBGd}1{BMdBGd}22222222222222222222222222222222{FbABb}3333333{CEnBKn}444444444444444444{{{f{Bh}}}CGh}555555555{OdBCb}6{FbBCb}{OhBCb}{{{f{Bh}}}BCb}{NnBCb}{AjBCb}{KdBCb}{HfBCb}{BjBCb}{NfBCb}{dBCb}{KfBCb}{C@fBCb}{cc{}}00000{DCfD@l}1111111{CFfCBj}22{CKd{{BNb{{N`{BOd}}}}}}{CJj{{BNb{{N`{BOd}}}}}}{CKb{{BNb{{N`{BOd}}}}}}{DCh{{BNb{{N`{BOd}}}}}}{DCj{{BNb{{N`{BOd}}}}}}{DCl{{BNb{{N`{BOd}}}}}}{CJn{{BNb{{N`{BOd}}}}}}{DCn{{BNb{{N`{BOd}}}}}}{BNf{{BNb{{N`{BOd}}}}}}{CJl{{BNb{{N`{BOd}}}}}}<<<<<<<<{{{f{{Bl{c}}}}}{{N`{{Bl{c}}}}}Jh}{{{f{ANj}}}{{N`{ANj}}}}{{{AAd{c}}}{{N`{{Bl{c}}}}}{}}{c{{N`{c}}}{}}{{{f{D@f}}}{{N`{D@f}}}}{DD`{{N`{D@f}}}}{cc{}}{DDbc{}}{{{f{Bh}}}{{N`{Bh}}}}{{{f{ANl}}}{{N`{ANl}}}}{DBf{{N`{ANl}}}}{H`{{N`{Bh}}}}{{{Cn{ce}}}{{N`{ce}}}A@hBMh}{{{Gn{ce}}}{{N`{{Bl{c}}e}}}{}{BMhJh}}{DDd{{N`{ANj}}}}{{{E`{c}}}{{N`{c}}}{DDfA@h}}{{{N`{Bh}}}{{N`{{Bl{Bj}}}}}}{El{{N`{Bh}}}};;{DCjBNf}{CJjBNf}{CJlBNf}>{CKbBNf}??????{CLbCL`}{cc{}}00{ElBM`}{DdBM`}{BCbBM`}{{{f{Bh}}}BM`}44444{DDhBH`}555{JlCLh}66{KdMj}{AjMj}8{OhMj}{HfMj}{DdMj}{FbMj}{OdMj}{NfMj}{dMj}{BjMj}{NnMj}{KfMj}{cc{}}000000{{{f{{BEd{BBb}}}}}DDj}{Fb{{Ch{BMf}}}}{FbBMf}00{{c{Ch{Ih}}}DDl{}}{{{DDn{Hf}}{DDn{Bj}}{Ch{Ih}}}DE`}{{{DDn{Hf}}{DDn{Bj}}{Ch{Ih}}}DEb}{c{{AMj{{l{e}}}}}{{Id{}{{Cj{}}}}}Al}{c{{AMj{{l{Bb}}}}}{{Id{}{{Cj{d}}}}}}{e{{N`{{Bl{c}}}}}{}{{Id{}{{Cj{c}}}}}}{cBMf{{Id{}{{Cj{BMf}}}}}}{{gGh}{{DEd{Hf}}}If{{Id{}{{Cj{{Ch{c}}}}}}}{{Id{}{{Cj{{Ch{e}}}}}}}}0{e{{DEd{Hf}}}{{Id{}{{Cj{{Ch{d}}}}}}}{{Id{}{{Cj{{Ch{c}}}}}}}}{{Dde}ADl{}{{D`{}{{Cj{{Ch{c}}}}}}}}{{gAGh}{{DEd{Hf}}}BJh{{Id{}{{Cj{{Ch{c}}}}}}}{{Id{}{{Cj{{Ch{e}}}}}}}}763{{Dde}ADl{}{{D`{}{{Cj{c}}}}}}{{{f{Bh}}}{{Ch{BMf}}}}{c{{AMj{{l{e}}}}}{{Jb{}{{Cj{}}}}}Al}{e{{N`{{Bl{c}}}}}In{{Jb{}{{Cj{c}}}}}}`{c{{A`{{CNn{AFn}}n}}}{{BAl{DBf}}}}{{}{{N`{c}}}A@h}{c{{N`{ec}}}BMhA@h}{{Dd{f{{Bl{c}}}}}ADl{}}{{Dd{f{{Bl{{Ch{c}}}}}}}ADl{}}{{{f{Bh}}}{{A`{DEf}}}}{c{{AMj{{l{e}}}}}{{Jj{}{{Cj{}}}}}Al}{c{{AMj{{l{Bb}}}}}{{Jj{}{{Cj{d}}}}}}{En{{BNb{{N`{BN`}}}}}}{{{f{Bh}}{Ch{{f{CMl}}}}}{{A`{CO`n}}}}{{{f{Bh}}{Ch{{f{CMl}}}}{Ch{{N`{CJh}}}}}{{A`{CB`n}}}}{{Ddc}DEh{}}{{{Gn{c}}AGh}{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{Gn{c}}AGh}{{ALl{}{{AO`{e}}{AOb{c}}{AOd{g}}}}}{AOf{AOh{e}}}Jh{{Hd{}{{Cj{e}}}}JjInJ`}}`{{DdcGh}AJb{}}{{GhcAGh}{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{}CIf}{{BGdBGdcc}BGd{{BAl{BCb}}}}{{{f{DEj}}{f{AB`}}ei}{{A`{AB`n}}}{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}{{BAl{Dd}}}{{Id{}{{Cj{g}}}}}}{{DdGh}AJd}{{GhAGh}{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{GhAGh}BH`}``{{BCbc{BNb{{N`{BN`}}}}DEl}BCb{{Eb{Fj}{{Ad{{A`{{Ch{Fj}}n}}}}}}InJ`}}`{{BCbc}BCb{{BAl{BCb}}}}{{BCbGhGh}BCb}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DEnA@h}BMh}{{{f{BLb}}Gh}{{A`{Jln}}}}{{BNjBCbd}BCb}{{BNlBCbd}BCb}{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}Gh}{{Ch{c}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}6{{{f{{N`{CNf}}}}{f{CNh}}}{{CNl{{Cn{CNj}}}}}}{{{f{AJf}}Gh}{{A`{Jln}}}}{{{f{B@`}}Gh}{{A`{Jln}}}}{{{f{AJf}}Gh}Jl}{{{f{B@`}}Gh}Jl}{CD`BCb}{{{f{BGd}}}BMf}{{{f{CLh}}}En}{{}En}{{{f{CEj}}HfCEd{Ch{{f{AMn}}}}}{{A`{CEbn}}}}00{{{f{D@d}}{f{{BEd{En}}}}DF`{f{Oj}}{f{Oj}}}{{Ch{Oj}}}}{{{f{BN`}}{f{{BEd{En}}}}DF`{f{{Bl{Oj}}}}}{{A`{Ojn}}}}{{{f{DDj}}{f{Bh}}}{{Ch{Oj}}}}{{{f{AGh}}}{{f{{Bl{BBb}}}}}}{{{f{BNn}}}Gh}{{{f{{Bl{Bj}}}}}{{Ch{Gh}}}}{{{f{Df{CAl{c}}}}}{{A`{{f{{N`{CJh}}}}n}}}BLl}{{{f{DfCB`}}}{{A`{{f{{N`{CJh}}}}n}}}}{{{f{BLb}}}{{Ch{{Nb{G`}}}}}}{{{f{Df{N`{ce}}}}}{{Ch{{f{Dfc}}}}}A@hBMh}{{{f{Df{N`{ce}}}}}{{f{Dfc}}}A@hBMh}{{{f{BLb}}Gh}{{Ch{{f{K`}}}}}}{{{f{BLb}}GhGh}{{Ch{{f{K`}}}}}}{{{f{{N`{CNf}}}}{f{CNh}}DFb}{{CNl{{Cn{CNj}}}}}}{{{f{CEj}}CEbCEdLd{Ch{{f{AMn}}}}CEh}{{A`{DFdn}}}}{{{f{CGb}}}{{N`{CGd}}}}{{{f{{N`{CNf}}}}{f{CNh}}{Nl{Gh}}}{{CNl{{Cn{CNj}}}}}}{{{f{{N`{CNf}}}}{f{CNh}}{f{{Bl{{Nl{Gh}}}}}}}{{CNl{{Cn{CNj}}}}}}{{{f{Dfc}}}{{A`{DFfn}}}{BObBLlA@h}}{{{f{DCd}}{f{{BEd{En}}}}}{{A`{{N`{{BEd{En}}}}n}}}}{{{f{Bh}}{f{En}}}{{A`{Eln}}}}{{{f{BBl}}Gh}Jl}{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}Gh}{{Ch{c}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{f{BLb}}Gh}Jl}{{{f{CMj}}}d}{{{f{CDh}}}d}`{{BGde}BMd{{BAl{BCb}}Jh}{{If{{Bl{c}}}}}}{{{f{DFh}}{Gn{Fj}}{f{BFd}}}{{A`{{Hj{Fj{Gn{Fj}}C`}}n}}}}{{BGdBCbcBFd}BMd{{If{{Bl{BCb}}}}}}2{{BHbBHb{f{{Bl{Hf}}}}CEdLd{Ch{AMn}}}{{A`{{Gn{{AAd{Fb}}}}n}}}}{{CEj{f{{Bl{Hf}}}}CEdLd{f{{Ch{Dd}}}}ddCEh}{{Hj{{Gn{{AAd{Fb}}}}{Gn{Hf}}{Gn{Hf}}}}}}{{{f{BIl}}dd}{{A`{C`n}}}}{{{f{{AJh{}{{Cj{c}}}}}}e}c{}{}}{{BCbc}BCb{{BAl{BCb}}}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DEnA@h}BMh}21`{{{f{BLb}}}d}{{{f{BFd}}{f{Dfc}}}bAE`}{{{f{BGh}}{f{Dfc}}}bAE`}{{{f{BHb}}{f{Dfc}}}bAE`}{{{f{CEd}}{f{Dfc}}}bAE`}{{{f{CEf}}{f{Dfc}}}bAE`}{{{f{CEh}}{f{Dfc}}}bAE`}{{{f{BKn}}{f{Dfc}}}bAE`}{{{f{CEl}}{f{Dfc}}}bAE`}{{{f{CEn}}{f{Dfc}}}bAE`}{{{f{CF`}}{f{Dfc}}}bAE`}{{{f{CFb}}{f{Dfc}}}bAE`}{{{f{CFd}}{f{Dfc}}}bAE`}{{{f{CFf}}{f{Dfc}}}bAE`}{{{f{CFh}}{f{Dfc}}}bAE`}{{{f{CFj}}{f{Dfc}}}bAE`}{{{f{CFl}}{f{Dfc}}}bAE`}{{{f{CFn}}{f{Dfc}}}bAE`}{{{f{CG`}}{f{Dfc}}}bAE`}{{{f{CGb}}{f{Dfc}}}bAE`}{{{f{CGd}}{f{Dfc}}}bAE`}{{{f{CGf}}{f{Dfc}}}bAE`}{{{f{CGh}}{f{Dfc}}}bAE`}{{{f{CGj}}{f{Dfc}}}bAE`}{{{f{CGl}}{f{Dfc}}}bAE`}{{{f{C@f}}{f{Dfc}}}bAE`}{{{f{CHf}}{f{Dfc}}}bAE`}{{{f{CHh}}{f{Dfc}}}bAE`}{{{f{BCb}}{f{Dfc}}}bAE`}{{{f{CHj}}{f{Dfc}}}bAE`}{{{f{CHn}}{f{Dfc}}}bAE`}{{{f{CI`}}{f{Dfc}}}bAE`}{{{f{CIb}}{f{Dfc}}}bAE`}{{{f{CId}}{f{Dfc}}}bAE`}{{{f{CIf}}{f{Dfc}}}bAE`}{{{f{CIh}}{f{Dfc}}}bAE`}{{{f{CIl}}{f{Dfc}}}bAE`}{{{f{CIn}}{f{Dfc}}}bAE`}{{{f{CBj}}{f{Dfc}}}bAE`}{{{f{CJ`}}{f{Dfc}}}bAE`}{{{f{CJb}}{f{Dfc}}}bAE`}{{{f{CJd}}{f{Dfc}}}bAE`}{{{f{CJf}}{f{Dfc}}}bAE`}{{{f{CJj}}{f{Dfc}}}bAE`}{{{f{CJl}}{f{Dfc}}}bAE`}{{{f{CJn}}{f{Dfc}}}bAE`}{{{f{CK`}}{f{Dfc}}}bAE`}{{{f{{N`{ce}}}}{f{Dfg}}}b{DFjA@h}BMhAE`}{{{f{CKb}}{f{Dfc}}}bAE`}{{{f{CKd}}{f{Dfc}}}bAE`}{{{f{BNf}}{f{Dfc}}}bAE`}{{{f{CKj}}{f{Dfc}}}bAE`}{{{f{CKl}}{f{Dfc}}}bAE`}{{{f{CKn}}{f{Dfc}}}bAE`}{{{f{CL`}}{f{Dfc}}}bAE`}{{{f{CLb}}{f{Dfc}}}bAE`}{{{f{CLd}}{f{Dfc}}}bAE`}{{{f{CLf}}{f{Dfc}}}bAE`}{{{f{BM`}}{f{Dfc}}}bAE`}{{{f{BGn}}{f{Dfc}}}bAE`}{{{f{CLh}}{f{Dfc}}}bAE`}{{{f{BBb}}{f{Dfc}}}bAE`}{{{f{CLj}}{f{Dfc}}}bAE`}{{{f{CLl}}{f{Dfc}}}bAE`}{{{f{A@`}}{f{Dfc}}}bAE`}{{{f{CMd}}{f{Dfc}}}bAE`}{{{f{DFl}}{f{Ab}}CF`d}{{A`{{Hj{{Hj{{Gn{Fb}}{Gn{Fb}}}}d}}n}}}}{{{f{DFl}}{f{Ab}}CF`d}{{A`{{Hj{{AMd{Fb}}{AMd{Fb}}}}n}}}}{{{f{DFl}}{f{Ab}}dd}{{A`{{Gn{Fb}}n}}}}{{BMd{Ch{Gh}}}BGd}{{BNlBCb}BCb}{{BCb{Ch{Gh}}}BCb}{{{f{{N`{CNf}}}}{f{CNh}}}{{CNl{{Cn{CNj}}}}}}{{{f{C@n}}}{{A`{{l{Bf}}n}}}}{{{f{C@n}}}{{l{Bf}}}}``{{{f{{Bl{{f{{l{Bf}}}}}}}}{f{Bh}}d}{{A`{{l{Bf}}n}}}}{{{f{DFn}}}{{l{Ob}}}}{{{f{COn}}}{{l{Ob}}}}{{{f{CDd}}}{{A`{{l{Ob}}n}}}}`{{{f{D@`}}}{{l{Lb}}}}`{{BMjCEn}BMj}`{{{f{ABb}}}Fb}`{{{f{{Bl{Fj}}}}Ld}{{A`{Fjn}}}}{{{f{{L`{LfLb}}}}{f{{l{Bf}}}}CMd{Gj{Hf}{{Ad{AMl}}}}{Gj{AMl}{{Ad{Hf}}}}{f{AMn}}{f{AMn}}}{{A`{{l{Lb}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{Bh}}}}{Gj{Hf}{{Ad{AMl}}}}{Gj{AMl}{{Ad{Hf}}}}{f{AMn}}{f{AMn}}}{{A`{{l{Lb}}n}}}}{BCbBCb}{{{f{AMl}}}d}{{{CAb{c}}d}{{CAb{c}}}CAf}````0`{{}b}{cb{JhBMh}}``{cBCb{{If{{Bl{Hf}}}}}}``{{{f{{Bl{Fb}}}}}{{`{{D`{}{{Cj{Gh}}}}}}}}{{{f{DFf}}Bj{Ch{Gh}}d{Ch{{f{{BEd{En}}}}}}GhGh{Ch{{f{CGh}}}}{Ch{Bj}}Bj{Ch{{f{CGj}}}}dd{f{Df{Ch{Gh}}}}d}{{A`{{Hj{{BEd{En}}GhGh}}n}}}}{{{DCb{c}}{Ch{{DG`{Gh}}}}}{{DCb{c}}}BLl}{{{CNn{c}}{Ch{{DG`{Gh}}}}}{{CNn{c}}}BLl}``{{}Gh}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{f{DfACf}}}{{Cn{Cl}}}}{{BGdBGdcc}BGd{{BAl{BCb}}}}{{{f{DEj}}{f{AB`}}ei}{{A`{AB`n}}}{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}{{BAl{Dd}}}{{Id{}{{Cj{g}}}}}}{{{f{DfA@j}}}{{f{DfKf}}}}`{{{f{DfBMf}}BMf}b}{{BCbBCbHfEn}BCb}{{BCbBCbBCb}BCb}`{{{f{Ab}}CFj}Ab}{{BCbCFj}BCb}`{{{f{Fj}}{f{Fj}}d}{{A`{Fjn}}}}{{BCbBCb}BCb}{{BMfBMf}BMf}{{{f{BMf}}BMf}d}{{}c{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BEhFj}{{}Fj}{{MjDd}Fj}{BH`{{Hj{{Gn{BBb}}Gh{Gn{{Cn{Cl}}}}{Ch{Ih}}}}}}{{{AMj{c}}}c{}}{{{N`{ce}}}{{Ch{c}}}{}BMh}66{{{f{BCb}}}}{BMf}{{{f{BH`}}}}{{{f{CLn}}}}{DGbBNl}{BNlBNl}{{{N`{ce}}}{}A@hBMh}{{{N`{ce}}}{{Hj{e}}}A@hBMh}{{CGbc}{{BLh{c}}}BLl}{{BBnEn}{{A`{Mjn}}}}{BGfAb}{{{N`{BLb}}}Ab}{{MjDd}Ab}{BGl{{Gn{c}}}{}}{{}{{Gn{Dd}}}}{{{f{BMf}}}d}{{{f{CBj}}}d}{{{f{CEn}}}d}{{{f{Ab}}{f{Ab}}{f{Ab}}CFl}{{A`{{l{Bb}}n}}}}{{BCbccCFl}BCb{{BAl{BCb}}}}{cd{{If{ANl}}}}4{{{f{BHb}}{Ch{{f{Bh}}}}}d}4{{{f{CIf}}}d}7{{{f{BLb}}}d}{{{f{CAn}}}d}{BCbBCb}{{{f{Ab}}}{{A`{{l{Bb}}n}}}}{{{f{AJj}}}{{A`{{l{Bb}}n}}}}25{{{f{BHb}}}d};{{{f{Ab}}{f{Ab}}}{{A`{{l{Bb}}n}}}}{{BCbc}BCb{{BAl{BCb}}}}54{{{f{AJl}}}{{A`{{l{Bb}}n}}}}6{{{f{COl}}}{{l{Bb}}}}{{{f{COn}}}{{l{Bb}}}}{{{f{CDd}}}{{A`{{l{Bb}}n}}}}9{{{f{Mj}}}d}::{{{f{BLb}}}{{l{Bb}}}};;0{{{f{A@j}}}d}<2{{{f{ABb}}}d}`{{{f{Ab}}}d}{{{f{Fj}}}d}{{{f{{N`{AFn}}}}}d}{{{f{CLh}}}d}{{}d}{{{f{DAj}}Fd}{{A`{dn}}}}{fd}{{{f{c}}}d{}}{{{f{CF`}}{f{CEn}}}{{A`{bn}}}}6{{{f{BHb}}}d}{{{f{COl}}}{{l{Kl}}}}{{{f{COn}}}{{l{Kl}}}}{{{f{CDd}}}{{A`{{l{Kl}}n}}}}{{CAnGh}DGd}{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}}{{AH`{cgAGn}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{f{BMf}}}{{AFj{BMf}}}}{{{f{BH`}}}{{AH`{{Gn{{Cn{DAn}}}}DGfAGn}}}}{{{f{DDj}}}{{`{Jf}}}}{{{f{BMf}}}{{AFl{BMf}}}}{{{f{{DGj{}{{DGh{c}}}}}}}{{`{Jf}}}{AGlJhD@hDAl}}{{BNjBCbd}BCb}{{BGdBGdccBKn}BGd{{If{{Bl{BCb}}}}}}{{BNlBCbd}BCb}{{{f{DEj}}{f{AB`}}eiBKn}{{A`{AB`n}}}{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}{{BAl{Dd}}}{{Id{}{{Cj{g}}}}}}{{{f{DGl}}{f{AB`}}{f{Bh}}{f{Bh}}eeCFd{Ch{Jl}}}{{A`{AB`n}}}{{If{Bh}}}{{Id{}{{Cj{c}}}}}}{BGdBMj}{{{f{DGn}}{f{Bh}}d}{{A`{{l{Bf}}n}}}}{{{f{DGn}}{f{{l{Bf}}}}d}{{A`{{l{Bf}}n}}}}{{BMjd}BMj}`{{BMj{Gn{BCb}}}BGd}{BL`BCb}{DH`BCb}{{{f{CJh}}}{{f{{Ch{{Gn{DHb}}}}}}}}``{{}BCb}{BGdBGd}{BNlBCb}{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}}{{Ch{c}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{BCbBCb}{{{f{BLb}}}Mj}{DHdBGd}5{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DEnA@h}BMh}{{{f{Ab}}}{{A`{Abn}}}}0`{{BGdBGdcc}BGd{{BAl{BCb}}}}{{{f{DEj}}{f{AB`}}ei}{{A`{AB`n}}}{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}{{BAl{Dd}}}{{Id{}{{Cj{g}}}}}}{{BMjc}BMj{{If{{Bl{BCb}}}}}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}e{}{}{}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}c}e{}{}{}}{{c{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}e{}{}{}}>{{{f{BLb}}}Gh}=;{{{f{BH`}}}Gh}{{BGdFb}BGd}{{{f{BLb}}Gh}Ab}```{BCbBNl}{{{f{{N`{CNf}}}}{Ch{{f{CNh}}}}}{{CNl{{Cn{D@j}}}}}}{{{f{{N`{CNf}}}}{Ch{{f{CNh}}}}}{{CNl{{Cn{CNj}}}}}}{{{f{{N`{CNf}}}}{Ch{{f{CNh}}}}{f{CNh}}}{{CNl{{Cn{D@j}}}}}}{cBCbDHf}{DHfBCb}{BHbBCb}{DHhBCb}{CLhBCb}{MjBCb}{{{f{{N`{e}}}}DHj}{{A`{{DHl{c}}DHn}}}DI`{{DIb{c}}A@h}}{{{f{{N`{c}}}}CBlDHj}{{A`{DIdDHn}}}{DIfA@h}}{{{f{{N`{e}}}}DHj}{{A`{{DHl{c}}DHn}}}CBn{{CC`{c}}A@h}}{{{f{{N`{c}}}}CBlDHj}{{A`{{DHl{DIh}}DHn}}}{DIjA@h}}{{{f{{N`{e}}}}CBlDHj}{{A`{{DHl{c}}DHn}}}CBn{{DIl{c}}A@h}}{{BCbc}BCb{{BAl{BCb}}}}0``{{CDld}CDl}{{{CNn{c}}d}{{CNn{c}}}BLl}```{BCbBCb}{{{f{DGn}}}{{l{Ff}}}}0{{{f{DGn}}{f{{Bl{Fj}}}}}{{A`{{l{Ah}}n}}}}{{{f{DGn}}HfDAb}{{A`{{l{Ah}}n}}}}{{{f{DGn}}Hfd}{{A`{Abn}}}}{{{f{DGn}}{f{{l{Bf}}}}d}{{A`{{l{Bf}}n}}}}4{{{f{DGn}}}{{A`{Abn}}}}{{{f{DGn}}}Ab}01{{{f{DGn}}}{{A`{{l{Ff}}n}}}}{{{f{DGn}}}{{l{Ah}}}}{{{f{DGn}}{f{Fj}}}{{A`{{l{Ah}}n}}}}{{{f{DGn}}HfGh}{{l{Ah}}}}{{{f{DGn}}Fd}{{A`{{l{Ah}}n}}}}{{{f{DGn}}Bj}Ab}7{{{f{DGn}}}{{A`{{l{Ah}}n}}}}01{{{f{{AJh{}{{Cj{c}}}}}}e}c{}{}}{{BCbc}BCb{{BAl{BCb}}}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DEnA@h}BMh}21``````{{{f{ANb}}{f{ANb}}}{{A`{{Hj{ANbANb}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hj{{l{Ah}}{l{Ah}}}}n}}}}{{{f{Df{N`{ce}}}}}{{f{Dfc}}}{DInA@h}{BMhJh}}{{BGdcBMf{Ch{{N`{DCd}}}}{Ch{{f{Bh}}}}}BGd{{Eb{AB`}{{Ad{{A`{AB`n}}}}}}InJ`}}{{DH`c}BCb{{Eb{{f{Dd}}}{{Ad{{A`{Ddn}}}}}}InJ`}}{{BCbc{BNb{{N`{BN`}}}}}BCb{{Eb{Fj}{{Ad{{A`{{Ch{Fj}}n}}}}}}InJ`}}{{BCbBCbc{BNb{{N`{BN`}}}}}BCb{{Eb{FjFj}{{Ad{{A`{{Ch{Fj}}n}}}}}}InJ`}}{{BCb{f{Dfc}}{f{Df}}}{{A`{BCbn}}}{{Af{BCb{f{Df}}}{{Ad{{A`{BCbn}}}}}}}}{{{f{BNn}}{Ch{{f{Dd}}}}}{{A`{Ojn}}}}{{{f{BNn}}c}{{A`{Ojn}}}{{ABd{{f{En}}}{{Ad{En}}}}}}{c{{BNb{{N`{BN`}}}}}{{Eb{{f{En}}}{{Ad{{A`{Enn}}}}}}InJ`}}{c{{BNb{{N`{BN`}}}}}{{Eb{{f{{Bl{{f{En}}}}}}}{{Ad{{A`{Enn}}}}}}InJ`}}{{BCbc}BCb{{Af{BCb}{{Ad{BCb}}}}}}{c{{BNb{{N`{BN`}}}}}{{Eb{{f{Oj}}}{{Ad{{A`{Ojn}}}}}}InJ`}}{{DH`{N`{Eb}}}BCb}{c{{BNb{{N`{BN`}}}}}{{Eb{{f{{Bl{Oj}}}}}{{Ad{{A`{Ojn}}}}}}InJ`}}:{{ce{BNb{{N`{BN`}}}}}BCb{{Eb{{f{Df{Bl{Fj}}}}}{{Ad{{A`{{Ch{Fj}}n}}}}}}InJ`}{{If{{Bl{BCb}}}}}}{{BCbc{f{{Bl{BCb}}}}{BNb{{N`{BN`}}}}}BCb{{Eb{{f{Df{Bl{Fj}}}}}{{Ad{{A`{{Ch{Fj}}n}}}}}}InJ`}}{{BCbBNf{f{{Bl{BCb}}}}d{Ch{DJ`}}}BCb}2{{{f{BNn}}}{{A`{Ojn}}}}{{CGbc}CGb{{Eb{CGd}{{Ad{CGd}}}}}}1111{{{CIj{{BNb{{N`{BOd}}}}}}}{{A`{{BNb{{N`{BOd}}}}n}}}}{CLhCLh}{{{Ch{{f{{Bl{Gh}}}}}}{f{{BEd{BBb}}}}{Ch{{f{{Bl{Ab}}}}}}{Ch{{f{DJb}}}}}AB`}{{{Ch{{f{{Bl{Dd}}}}}}{f{{BEd{En}}}}{Ch{{f{{Bl{Ab}}}}}}d}{{Ch{{Gn{Gh}}}}}}{{{f{DDj}}}{{A`{{BEd{En}}n}}}}{{{f{Bh}}}BCb}{BNjBCb}{BGdBGd}{BNlBCb}{{{f{AHh}}}{{Ch{c}}}{}}{BCbBCb}{{{f{{N`{c}}}}}{{Ch{DJd}}}{CMhA@h}}{{{f{DJf}}}Mj}{{{f{BLb}}}{{A`{Mjn}}}}```865{{{f{AHh}}}{{Ch{Aj}}}}4{{{f{BLb}}}{{Ch{Aj}}}}:987{{{f{AJn}}}{{Ch{c}}}{}}61{{{f{DJh}}}Mj}4{{{DBl{c}}{Ch{DBf}}}{{DBl{c}}}BLl}{{{f{En}}{f{En}}}{{A`{Enn}}}}{{{f{CO`}}}{{A`{CObn}}}}````{{{f{D@`}}}{{l{Lb}}}}`{{{f{CDd}}}{{A`{{l{Kl}}n}}}}1`{{{f{Bh}}}BCb}{BNjBCb}{BGdBGd}{BNlBCb}{{{f{AHh}}}{{Ch{c}}}{}}{BCbBCb}{{{f{AHh}}}{{Ch{{Hj{cc}}}}}{}}```{{{f{DJf}}}Mj}{{{f{BLb}}}{{A`{Mjn}}}}``{{{f{DFn}}}{{l{Ob}}}}{{{f{COn}}}{{l{Ob}}}}{{{f{CDd}}}{{A`{{l{Ob}}n}}}}`=```6{{{f{COl}}}{{l{Ob}}}}21`{{{f{BHb}}}Hf}{{{f{BHb}}}d}{{{BLn{}{{Ad{c}}}}{f{Ab}}}c{}}{{BHbHf}BHb}{{BCbBCb}}{{{f{BMb}}{f{Ab}}}{{A`{Abn}}}}``{{{f{BLb}}}Gh}{{{f{CMj}}}{{Ch{Gh}}}}{{{f{CDh}}}{{Ch{Gh}}}}{{{f{CDl}}}{{Ch{Gh}}}}`````{{{CAb{c}}Gh}{{CAb{c}}}CAf}`{BNjBCb}{BNlBCb}{{{f{AId}}}{{A`{Ghn}}}}{BCbBCb}{{{f{BLb}}}{{A`{Ghn}}}}{{{f{BLb}}}{{f{Dd}}}}{BCbDH`}````33`{{{f{DFn}}}{{l{Kl}}}}{{{f{COn}}}{{l{Kl}}}}{{{f{CDd}}}{{A`{{l{Kl}}n}}}}{{{f{D@`}}}{{l{Lb}}}}{{{f{BHb}}}Hf}`{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DAlA@h}BMh}{{{f{CF`}}}d}{BHb}{BCb}{{{f{Ab}}}{{A`{Abn}}}}0{{{f{BHb}}}d}{{DJjGh}{{Ch{Gh}}}}{{BCbc}BCb{{BAl{BCb}}}}0{{{f{BNn}}}{{A`{Ojn}}}}{{}c{}}{cDBhBOb}{cDBjCAf}2{{Ddc}DJl{}}{c{{AMj{c}}}{}}{BGdBMj}{cCDh{{If{ANl}}}}{cCDl{{If{ANl}}}}{c{{BLh{c}}}BLl}{{{f{{Bl{Oj}}}}}BNn}{c{{CAb{c}}}CAf}{HfBHb}{c{{DBl{c}}}BLl}{{BHbBHbBHb}CEj}{c{{BO`{c}}}BOb}{c{{DBn{c}}}CAf}{{}D@b}{c{{CAh{c}}}CAf}{c{{DC`{c}}}CAf}{c{{DCb{c}}}BLl}{c{{CNn{c}}}BLl}{{DJn{N`{CJh}}{N`{{BEd{BBb}}}}{Hj{GhGh}}{Ch{{Gn{Gh}}}}{Ch{{N`{BLj}}}}{Ch{DJb}}Ghd{Ch{{Gn{Ab}}}}{Ch{{Hj{Dd{N`{Bh}}}}}}CIh}{{A`{CAnn}}}}{c{{CAl{c}}}BLl}{CEnBKn}{c{{CBb{c}}}{CAfCAf}}{c{{BNb{c}}}{}}{c{{N`{c}}}{}}{{BCbBCbBCb}CKf}{{}CKh}{BCbBM`}{{Dd{Gn{Oj}}{BNb{{N`{BN`}}}}c}CChBOd}{{AGhGh{Gn{{Cn{Cl}}}}{Ch{Ih}}}BH`}{{DdAGhd}BBb}{{EnJl}Mj}{e{{N`{c}}}{}{{ABd{{f{{DAd{c}}}}}{{Ad{c}}}}}}{{ge}{{N`{ce}}}{}BMh{{ABd{{f{{DAd{ce}}}}}{{Ad{c}}}}}}{AGhBH`}{{{f{AK`}}GhGh}{{l{c}}}Dn}{{{f{BLb}}GhGh}Ab}{{{f{Bh}}}CGh}{{ce}{{N`{ce}}}{}BMh}{{HfDd}{{A`{Abn}}}}{DdCGh}{{AGhGh}BH`}{{{N`{{Bl{DBf}}}}}CDh}{{{N`{{Bl{DBf}}}}}CDl}{BjCGh}{{{f{{N`{c}}}}{f{DK`}}}CMf{CMhA@h}}{{}{{N`{{C@l{c}}}}}{}}{c{{N`{{C@l{e}}c}}}BMh{}}{Gh{{N`{{Bl{{C@l{c}}}}}}}{}}{{Ghc}{{N`{{Bl{{C@l{e}}}}c}}}BMh{}}{DKbCDh}{DKbCDl}5432{{{f{DfDKd}}}Ch}{{{f{DfDFd}}}Ch}{{{f{BMl}}DKf}{{A`{{Ch{AB`}}n}}}}{{{f{DfCBf}}Gh}{{A`{{Ch{{Gn{AB`}}}}n}}}}{{{f{DfCA`}}Gh}{{A`{{Ch{{Gn{AB`}}}}n}}}}{{{f{DfCAn}}Gh}{{A`{{Ch{{Gn{AB`}}}}n}}}}{{{f{BCb}}{f{Df{BHn{{f{BCb}}}}}}}b}{{BCb{f{Df{BHn{BCb}}}}}b}{BCbBCb}0{BMfBMf}{{{f{{AIj{}{{Cj{c}}}}}}e}c{}{}}0{HfBCb}`{{}ABb}{{}A@j}`{{{f{BLb}}}Gh}{BGdBGd}7`````{{{f{Df{CAl{c}}}}}{{A`{Ghn}}}BLl}{{{f{DfCB`}}}{{A`{Ghn}}}}````{{{f{AIl}}}{{A`{{Hh{Hf}}n}}}}{{BMjc}BMj{{If{{Bl{BCb}}}}}}````{{BGd{f{Df{BKh{BKf}}}}{f{Df{BKh{BKj}}}}}{{A`{BKdn}}}}`{{BCbc}BCb{{BAl{BCb}}}}{{{f{BLb}}}{{A`{Mjn}}}}{{{f{COl}}}{{l{Of}}}}{{{f{COn}}}{{l{Of}}}}{{{f{CDd}}}{{A`{{l{Of}}n}}}}{{{f{CDd}}}{{A`{{l{Kl}}n}}}}{{CH`c}BCb{{BAl{BCb}}}}{{CHdc}BCb{{BAl{BCb}}}}`{{BCbe}BCb{{BAl{BCb}}Jh}{{If{{Bl{c}}}}}}{{BCbe{Ch{{Hj{eFd}}}}CLb}BCb{{BAl{BCb}}Jh}{{If{{Bl{c}}}}}}{{{f{Df{BEd{En}}}}{f{{BEd{En}}}}}{{A`{bn}}}}```{{{f{Bh}}}BHb}{{Dd{f{{Bl{{f{Bh}}}}}}{f{Bh}}}{{L`{KnKl}}}}{{Dd{f{{Bl{{f{Bh}}}}}}{f{Bh}}}{{L`{LnLb}}}}{{Dd{f{{Bl{{f{Bh}}}}}}{f{Bh}}Ld}{{L`{LfLb}}}}``{{{f{BHb}}{f{BHb}}}{{Ch{BAb}}}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}{{Ch{BAb}}}{DEnA@h}BMh}```{{}BCb}{c{{CNl{{N`{c}}}}}{}}{{ce}{{CNl{{N`{ce}}}}}{}BMh}````{{BCbc}BCb{{BAl{BCb}}}}`{{DH`{f{Bh}}}BCb}0{CLn{{A`{{Gn{Bj}}n}}}}{{{f{AB`}}{f{AB`}}d}{{A`{{Hj{{AAl{{Gn{Fb}}{Gn{A@j}}}}{AAl{{Gn{ABb}}{Gn{A@j}}}}}}n}}}}`{{{f{DJf}}}Mj}{BCbBCb}{BGd{{A`{{Hj{AB`AB`}}n}}}}`{{{f{BH`}}}BH`}{{{f{{N`{c}}}}{f{DfDKh}}}b{AM`A@h}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}dA@hBMh}{{{f{{N`{CNf}}}}{f{CNh}}DKj}{{CNl{{Cn{CNj}}}}}}{{{f{{N`{CNf}}}}{f{CNh}}}{{CNl{{Cn{CNj}}}}}}{{{f{{N`{CNf}}}}{f{CNh}}DKl}{{CNl{{Cn{CNj}}}}}}{{{f{{N`{CNf}}}}{f{CNh}}DKjDKn}{{CNl{{Cn{CNj}}}}}}{{{f{Bh}}BCbA@`}BCb}{{BGdBCbA@`}BGd}{{{f{AJn}}AjA@`}{{A`{{Ch{c}}n}}}{}}{{BCbBCbA@`}BCb}{{{f{DJh}}AjA@`}{{A`{Mjn}}}}{{{f{BLb}}AjA@`}{{A`{Mjn}}}}{{{f{COl}}}{{l{Ob}}}}{{{f{COn}}}{{l{Ob}}}}{{{f{CDd}}}{{A`{{l{Ob}}n}}}}{{{f{Df}}c}{{A`{{f{Dfe}}BDl}}}DBd{}}````{{{f{DL`}}CG`{Ch{Kf}}}Ab}{{BCbCG`{Ch{Kf}}}BCb}{{{f{Df{N`{AFn}}}}{f{Df{Bl{Bj}}}}}{{A`{GhBDl}}}}{{{f{Df{N`{AFn}}}}DLb}{{A`{bBDl}}}}{{{f{Df}}{f{Df{Bl{Bj}}}}}{{A`{b}}}}{{{CAl{c}}CIh}{{CAl{c}}}BLl}{{CB`CIh}CB`}{{{f{Df{N`{AFn}}}}{f{Df{Gn{Bj}}}}}{{A`{GhBDl}}}}{{{f{Df{N`{AFn}}}}{f{DfEl}}}{{A`{GhBDl}}}}{{{f{Df}}}{{A`{cBDl}}}DLd}{{{f{Df{N`{AFn}}}}{f{Df{Bl{DLf}}}}}{{A`{GhBDl}}}}{{{f{CMj}}}d}{{{f{BLb}}}Ab}{{{f{CDh}}}d}{{{f{CDl}}}d}````{{{f{BLb}}}{{Ch{Ih}}}}{{{f{{N`{c}}}}{f{CMf}}{f{DLh}}}b{CMhA@h}}{{{f{{N`{c}}}}{f{CMf}}{f{CMf}}}b{CMhA@h}}{{ce}BCb{{Eb{FjFj}{{Ad{{A`{{Ch{Fj}}n}}}}}}InJ`}{{If{{Bl{BCb}}}}}}{{{f{{N`{c}}}}{f{DAh}}}DLj{CMhA@h}}{{{f{AKb}}}Ab}0{{{BLn{}{{Ad{c}}}}{f{Ab}}}c{}}{{BCbBCb}}{{{f{BMb}}{f{Ab}}}{{A`{Abn}}}}{{{f{DfBMf}}BMf}b}{{{f{{Bl{Bj}}}}}{{A`{{f{{Bl{Bj}}}}n}}}}{{{f{DfBLb}}Dd}b}{{BGdeid}BGd{{If{Bh}}}{{Id{}{{Cj{c}}}}}{{If{Bh}}}{{Id{}{{Cj{g}}}}}}{{{f{{N`{CNf}}}}{f{CNh}}{f{CNh}}}{{CNl{{Cn{CNj}}}}}}{{BL`e}BCb{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}}1{{cBCb}BCb{{BAl{BCb}}}}{{{f{Ab}}{f{{l{Ff}}}}}{{A`{{l{Ah}}n}}}}{{BCbc}BCb{{BAl{BCb}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{C@n}}{f{Bh}}{f{Bh}}}{{A`{{l{Bf}}n}}}}{{BCbcc}BCb{{BAl{BCb}}}}1{{{f{BNn}}{Ch{En}}}{{A`{Ojn}}}}{{{f{C@n}}{f{Bh}}{f{Bh}}Gh}{{A`{{l{Bf}}n}}}}3{{{f{Ab}}{f{Ab}}{f{Ab}}{f{Ab}}{Ch{En}}}{{A`{Abn}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}{Ch{En}}}{{A`{Abn}}}}{{BCbcc{Ch{c}}{Ch{En}}}BCb{{BAl{BCb}}}}{{{f{{L`{LfLb}}}}{Ch{{f{Bh}}}}{f{{l{Bf}}}}CMd}{{A`{{L`{LfLb}}n}}}}{{BCb{f{{Bl{Hf}}}}}BCb}{{{f{ANl}}}DBf}`{{{f{AKd}}}AKd}{{{f{BLb}}}Ab}{BNjBCb}{BGdBGd}{BNlBCb}{BCbBCb}`{{BMjc}BMj{{If{{Bl{BCb}}}}}}{{{f{DFh}}{Gn{Fj}}{f{BGh}}}{{A`{{Hj{Fj{Gn{Fj}}C`}}n}}}}{{BGdBCbcBGh}BMd{{If{{Bl{BCb}}}}}}{{BCbBGh}BCb}{{{f{AKf}}{f{Eb}}A@b}{{A`{Abn}}}}{{BCb{N`{Eb}}{BNb{{N`{BN`}}}}A@b}BCb}{{{f{BLb}}{f{Eb}}A@b}{{A`{Abn}}}}{{BCbGhc}BCb{{Af{{f{Df{l{Ej}}}}}{{Ad{{Ch{Aj}}}}}}InJ`Ed}}{{{f{DLl}}A@b}{{A`{Abn}}}}{{BCbA@b}BCb}{{{f{DLl}}{f{Ab}}CE`}{{A`{Abn}}}}{{BCbBCbCE`}BCb}32102032103{{BCbA@`AjA@b}BCb}2{{BCbBCbA@`AjCE`}BCb}543254325432{{{f{DLn}}{f{{l{Bf}}}}{Ch{{f{AMn}}}}}{{A`{DLnn}}}}{{{f{CDb}}Fb}{{A`{Abn}}}}{{BCbFb}BCb}{{{f{CEj}}Hf{Ch{{f{AMn}}}}}{{A`{Hfn}}}}0{{{f{CDb}}Nn}{{A`{Abn}}}}{{BCbNn}BCb}2```{{{f{CMj}}}{{Ch{{f{DJb}}}}}}{{{f{CDh}}}{{Ch{{f{DJb}}}}}}{{{f{CDl}}}{{Ch{{f{DJb}}}}}}``````{{{f{DGn}}{l{Ah}}}{{l{Ah}}}}{{}{{BNb{{N`{BN`}}}}}}{{BCbBCbdd{Ch{Kf}}}BCb}0{{{f{BMl}}DKf}{{A`{AB`n}}}}{{cCDj}{{A`{BGdn}}}{{If{ANl}}}}{{{N`{{Bl{DBf}}}}CDj}{{A`{BGdn}}}}{{DKbCDj}{{A`{BGdn}}}}{{cCDn}{{A`{BGdn}}}{{If{ANl}}}}{{{N`{{Bl{DBf}}}}CDn}{{A`{BGdn}}}}{{DKbCDn}{{A`{BGdn}}}}{{DM`{f{{Bl{Fb}}}}e}{{A`{Abn}}}Ed{{Id{}{{Cj{{Ch{c}}}}}}}}{{{f{AKh}}c{Ch{e}}}{{A`{AKhn}}}{{Id{}{{Cj{Fb}}}}}{}}{{{f{AKh}}ci}{{A`{AKhn}}}{{Id{}{{Cj{Fb}}}}}{}{}{{Eb{{Ch{e}}}{{Ad{{Ch{g}}}}}}}}{{{f{Df{DBl{c}}}}}{{A`{{N`{{BEd{BBb}}}}n}}}BLl}{{{f{Df{BO`{c}}}}}{{A`{{BEd{En}}n}}}BOb}{{{f{BMl}}{Ch{Gh}}}{{A`{{N`{{BEd{En}}}}n}}}}{{{f{CAn}}}{{f{{N`{{BEd{BBb}}}}}}}}{{{f{Df{CAl{c}}}}}{{A`{{N`{{BEd{BBb}}}}n}}}BLl}{{{f{DfCB`}}}{{A`{{N`{{BEd{BBb}}}}n}}}}{{{f{CJh}}}{{f{DMb}}}}```````{{}BMf}`{{{f{DfBGd}}{f{Df{BKh{BKf}}}}{f{Df{BKh{BKj}}}}}{{A`{{N`{{BEd{En}}}}n}}}}`{{{f{DFn}}}{{l{Ob}}}}{{{f{COn}}}{{l{Ob}}}}{{{f{CDd}}}{{A`{{l{Ob}}n}}}}`{{{f{D@`}}}{{l{Lb}}}}`{{{f{Df{N`{AFn}}}}DMd}{{A`{KfBDl}}}}{{BGdc}BGd{{If{{Bl{BCb}}}}}}0{{BGdBGdcc}BGd{{BAl{BCb}}}}``{{{f{CE`}}c}A`A@f}{{{f{BFd}}c}A`A@f}{{{f{BGh}}c}A`A@f}{{{f{BHb}}c}A`A@f}{{{f{CEd}}c}A`A@f}{{{f{CEf}}c}A`A@f}{{{f{CEh}}c}A`A@f}{{{f{BKn}}c}A`A@f}{{{f{CEl}}c}A`A@f}{{{f{CEn}}c}A`A@f}{{{f{CF`}}c}A`A@f}{{{f{CFb}}c}A`A@f}{{{f{CFd}}c}A`A@f}{{{f{CFf}}c}A`A@f}{{{f{CFh}}c}A`A@f}{{{f{CFj}}c}A`A@f}{{{f{CFl}}c}A`A@f}{{{f{CFn}}c}A`A@f}{{{f{CG`}}c}A`A@f}{{{f{CGb}}c}A`A@f}{{{f{CGd}}c}A`A@f}{{{f{CGf}}c}A`A@f}{{{f{CGh}}c}A`A@f}{{{f{CGj}}c}A`A@f}{{{f{CGl}}c}A`A@f}{{{f{C@f}}c}A`A@f}{{{f{CHf}}c}A`A@f}{{{f{CHh}}c}A`A@f}{{{f{BCb}}c}A`A@f}{{{f{CHj}}c}A`A@f}{{{f{CHn}}c}A`A@f}{{{f{CI`}}c}A`A@f}{{{f{CIb}}c}A`A@f}{{{f{CId}}c}A`A@f}{{{f{CIf}}c}A`A@f}{{{f{CIh}}c}A`A@f}{{{f{{CIj{c}}}}e}A`{DMfJh}A@f}{{{f{CIl}}c}A`A@f}{{{f{CIn}}c}A`A@f}{{{f{CBj}}c}A`A@f}{{{f{CJ`}}c}A`A@f}{{{f{CJb}}c}A`A@f}{{{f{{BNb{{N`{CLn}}}}}}c}A`A@f}{{{f{{BNb{{N`{BN`}}}}}}c}A`A@f}{{{f{{BNb{Ab}}}}c}A`A@f}{{{f{{BNb{{N`{BOd}}}}}}c}A`A@f}{{{f{{BNb{{N`{CCb}}}}}}c}A`A@f}{{{f{CJd}}c}A`A@f}{{{f{CJf}}c}A`A@f}{{{f{CJj}}c}A`A@f}{{{f{CJl}}c}A`A@f}{{{f{CJn}}c}A`A@f}{{{f{CK`}}c}A`A@f}{{{f{{N`{c}}}}e}A`{DMfA@h}A@f}{{{f{CKb}}c}A`A@f}{{{f{CKd}}c}A`A@f}{{{f{BNf}}c}A`A@f}{{{f{CKj}}c}A`A@f}{{{f{CKl}}c}A`A@f}{{{f{CKn}}c}A`A@f}{{{f{CL`}}c}A`A@f}{{{f{CLb}}c}A`A@f}{{{f{CLd}}c}A`A@f}{{{f{CLf}}c}A`A@f}{{{f{BM`}}c}A`A@f}{{{f{A@b}}c}A`A@f}{{{f{BGn}}c}A`A@f}{{{f{CLh}}c}A`A@f}{{{f{BBb}}c}A`A@f}{{{f{CLj}}c}A`A@f}{{{f{Mj}}c}A`A@f}{{{f{CLl}}c}A`A@f}{{{f{CLn}}c}A`A@f}{{{f{A@`}}c}A`A@f}{{{f{BJd}}c}A`A@f}{{{f{CM`}}c}A`A@f}{{{f{CMb}}c}A`A@f}{{{f{CMd}}c}A`A@f}``{{{f{AKh}}{f{{l{Bb}}}}{Ch{c}}}{{A`{AKhn}}}{}}{{{f{DfBMf}}BMfd}b}{{{f{BGd}}{BKh{BKf}}{BKh{BKj}}}b}{{{CAl{c}}d}{{CAl{c}}}BLl}{{{f{Df{CAl{c}}}}{N`{CJh}}}bBLl}{{{CBb{c}}d}{{CBb{c}}}CAf}{{{DBl{c}}d}{{DBl{c}}}BLl}{{{BO`{c}}d}{{BO`{c}}}BOb}{{{DCb{c}}d}{{DCb{c}}}BLl}5{{CB`d}CB`}{{DBhd}DBh}{{BCbMb}BCb}{{{f{DfBH`}}{Ch{Ih}}}b}{{{f{AKj}}Hf}{{l{c}}}Dn}{{{f{BLb}}Hf}Ab}{{BNjBCb}BCb}{{BGdc}BGd{{BAl{BCb}}}}{{BNlBCb}BCb}{{BCbBCb}BCb}{{{f{AKl}}Hfc}{{l{e}}}{}Dn}{{BGdce}BGd{{BAl{BCb}}}{{BAl{BCb}}}}{{BCbce}BCb{{BAl{BCb}}}{{BAl{BCb}}}}{{{f{BKn}}}d}{BCbBCb}{{{f{DfACh}}}b}{{{f{DfBLb}}}b}{{BCb{Ch{Kf}}}BCb}{{BGdcCGl}{{A`{bn}}}{{If{ANl}}}}{{BGdcCHn}{{A`{bn}}}{{If{ANl}}}}{{BGdEl{Ch{CMl}}CHn}{{A`{bn}}}}{{BGdcCIb}{{A`{bn}}}{{If{ANl}}}}{{BGdcCIl}{{A`{bn}}}{{If{ANl}}}}{{BGdEl{Ch{CMl}}CIl}{{A`{bn}}}}{{{f{CNd}}}{{l{Ff}}}}````{{{f{BLb}}HfGh}Ab}{{BGdHfFb}BGd}{{BNlBCbBCb}BCb}?{{{f{DfBH`}}GhGh}b}0`{{{f{AKn}}GhGh}AKn}{{fGhGh}c{}}1022{{BH`GhGh}BH`}0`{{{f{AIb}}d}{{l{c}}}Dn}{{BNjFd}BCb}{{BGdcFl}BGd{{BGl{Dd}}}}{{BNlFd}BCb}{{BCbFd}BCb}{{BCbeFl}BCb{{BAl{BCb}}Jh}{{If{{Bl{c}}}}}}{{BGdcFl}BGd{{If{{Bl{BCb}}}}}}{{{f{AIb}}Fd}{{l{c}}}Dn}{{{f{BLb}}Fd}{{A`{Abn}}}}{{{f{{N`{c}}}}}{{Ch{{f{AM`}}}}}{AM`A@h}}{{{f{CMj}}}{{f{DKb}}}}{{{f{CDh}}}{{f{DKb}}}}{{{f{CDl}}}{{f{DKb}}}}{{{f{{N`{c}}}}{DMh{b}}}{{A`{bDMj}}}{DMlA@h}}{{{f{{N`{c}}}}{DMn{b}}}{{A`{bDMj}}}{DN`A@h}}{{{f{C@n}}{f{{l{Bf}}}}}{{l{Ah}}}}{{{f{BLb}}Hf}{{Hj{AbAb}}}}{{{f{BH`}}Gh}{{Hj{{Cn{Cl}}{Cn{Cl}}}}}}0{{{f{C@n}}{f{{l{Bf}}}}Gh}{{A`{{l{j}}n}}}}0{{{f{{l{Bf}}}}{f{{l{Bf}}}}e}{{l{Ah}}}{{D`{}{{Cj{{f{Bh}}}}}}}{{Eb{{f{Bh}}{f{Bh}}}{{Ad{c}}}}}}4{{{f{{l{Bf}}}}{f{{l{Bf}}}}Ghed}{{A`{{l{j}}n}}}{{D`{}{{Cj{{f{Bh}}}}}}}{{Eb{{f{Bh}}{f{Bh}}}{{Ad{c}}}}}}2{BCbBCb}`{{{f{CNd}}{f{{Bl{Bj}}}}}{{l{Bb}}}}{{{f{C@n}}{f{Bh}}}{{l{Bb}}}}{{{f{CNd}}{f{{l{Bd}}}}}{{l{Bb}}}}{{{f{C@n}}{f{{l{Bf}}}}}{{l{Bb}}}}`{{{f{{N`{c}}}}}{{A`{bDMj}}}{DN`A@h}}{{{f{{N`{c}}}}}{{A`{bDMj}}}{DMlA@h}}{{BNjBj}BCb}{{BGdBj}BGd}{{BNlBj}BCb}{{{f{AL`}}Bj}{{Ch{Aj}}}}{{BCbBj}BCb}{{{f{BLb}}Bj}{{Ch{Aj}}}}{{{f{DNb}}Bj}Mj}{{{f{BLb}}Bj}{{A`{Mjn}}}}{{FbFb}A@j}{BCbDNd}{{{f{C@n}}}{{l{Bf}}}}{{{f{C@n}}{f{Fj}}}{{A`{{l{Bf}}n}}}}{{{f{{l{Bf}}}}{f{Bh}}d}{{l{Bf}}}}{{{f{C@n}}}{{l{Ff}}}}03{{{f{C@n}}{f{Fj}}{f{Fj}}}{{A`{{l{Bf}}n}}}}3`{{{f{CDd}}{f{Bh}}}{{A`{Abn}}}}`{{BCbEn}BCb}`{{{f{{l{Bf}}}}{f{{l{Bf}}}}}{{l{Bf}}}}606060{{{f{C@n}}{f{{l{Bf}}}}}{{l{Bf}}}}10{{{f{{N`{ce}}}}}GhA@hBMh}{BCbBL`}{{{BLn{}{{Ad{c}}}}{f{Ab}}}c{}}{{BCbBCb}}{{BM`BM`}}{{BMfBMf}BMf}{{{f{DfBMf}}BMf}b}{{{f{BMb}}{f{Ab}}}{{A`{Abn}}}}{{BMjc}BMj{{BAl{Dd}}}}{{DH`{f{Bh}}}BCb}{{{f{BKn}}}{{f{Dd}}}}`1{{{f{Bh}}}BCb}{BNjBCb}{BGdBGd}{BNlBCb}{{{f{AHh}}}{{Ch{c}}}{}}{BCbBCb}{{{f{DJf}}}Mj}{{{f{BLb}}}{{A`{Mjn}}}}{{}{{BNb{{N`{BN`}}}}}}{CBjCBj}?{{{f{Df}}g}{{A`{eBDl}}}{}{}{{ABd{{f{Dfc}}}{{Ad{e}}}}}}{{BGdFb}BGd}{{BMd{Ch{Gh}}}BGd}{{BNlBCb}BCb}{{BCb{Ch{Gh}}}BCb}{{{f{ALb}}{f{c}}}{{A`{ALbn}}}A@h}{{{f{BLb}}{f{{l{Ff}}}}}{{A`{Abn}}}}{{{f{DNf}}{f{{Bl{A@j}}}}Mb}DNf}{{{f{DNf}}{f{{Bl{A@j}}}}}DNf}{{{f{BLb}}{f{{Bl{Fb}}}}}{{A`{Abn}}}}{{{f{BLb}}{f{{Bl{Fb}}}}}Ab}{{{f{ALd}}{f{c}}}ALdA@h}{{{f{BLb}}{f{{l{Ff}}}}}Ab}{{{f{DfBH`}}}{{Ch{Ih}}}}{{BCbBCbBCb}BCb}{{CGnc}CH`{{BAl{BCb}}}}{{CHbc}CHd{{BAl{BCb}}}}`{{BCbBCbBHbCEd}BCb}```{{{f{CDd}}Ld}{{A`{{l{Lb}}n}}}}{BGd{{A`{DNhn}}}}{CLn{{A`{DNhn}}}}1{{{f{CLh}}}{{Ch{Jl}}}}{{BNlGh}BCb}{{{f{DDj}}B@h}{{BEd{BBb}}}}{{{f{BH`}}}{{Cn{Cl}}}}{{{f{ALf}}}{{Gn{{f{{Bl{Bj}}}}}}}}{{{f{BGd}}d}{{A`{Eln}}}}{{{f{DNj}}{Ch{{f{Bh}}}}d}{{A`{AB`n}}}}{{{f{BLf}}{Ch{{f{Bh}}}}d}{{A`{AB`n}}}}{{{f{BCb}}{f{{BEd{En}}}}DF`}{{A`{Ojn}}}}{{{f{C@n}}{f{{l{Ff}}}}d}{{A`{{l{Lb}}n}}}}{BNjBCb}{{{f{C@n}}}{{l{Bf}}}}{DH`BCb}{{{f{ABb}}}{{Ch{Fb}}}}{fc{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BCbBCb}{{{f{BNn}}}{{A`{Ojn}}}}{{{f{CDd}}{f{Bh}}}{{A`{Abn}}}}{fEl}000000000000{{{f{DfDDj}}{f{{BEd{En}}}}}{{A`{dn}}}}`887{{{f{CHn}}c}{{CAh{c}}}CAf}{{{f{CIl}}c}{{CBb{c}}}CAf}{{{f{DfBMf}}BMf}b}``{{BGdFbcFl}BGd{{If{{Bl{BCb}}}}}}{{{f{BH`}}{f{BH`}}}Ih}{{{f{BH`}}f}Ih}10{{{f{Ab}}}{{A`{Abn}}}}0{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}g{}{}{}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}c}g{}{}{}}{{c{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}g{}{}{}}{{{f{DNl}}{Ch{{f{AMn}}}}{f{{l{Bf}}}}}{{A`{DNln}}}}{{{f{BHb}}Hf{Ch{{f{AMn}}}}ceg}{{A`{Hfn}}}{{Eb{Hf}{{Ad{Hf}}}}}{{Eb{Hf}{{Ad{AMl}}}}}{{Eb{AMl}{{Ad{Hf}}}}}}{{{f{BHb}}Hf{Ch{{f{AMn}}}}}{{A`{Hfn}}}}{{{f{CEj}}Hf{Ch{{f{AMn}}}}}{{A`{Hfn}}}}10`10{g{{A`{ANfe}}}{}{}{{Id{}{{Cj{{A`{ce}}}}}}}}{e{{A`{BH`c}}}{}{{Id{}{{Cj{{A`{bc}}}}}}}}{e{{A`{BH`c}}}{}{{Id{}{{Cj{{A`{{Ch{b}}c}}}}}}}}2{{AGhg}{{A`{ANhe}}}{}{}{{Id{}{{Cj{{A`{ce}}}}}}}}0{{AGhe}{{A`{BH`c}}}{}{{Id{}{{Cj{{A`{bc}}}}}}}}{{AGhe}{{A`{BH`c}}}{}{{Id{}{{Cj{{A`{{Ch{b}}c}}}}}}}}{{{f{{N`{c}}}}CMf}d{CMhA@h}}{BAd{{A`{eg}}}{}{{ANf{c}}ALl}{}}0{{BAdAGh}{{A`{eg}}}{}{{ANh{c}}ALl}{}}0{{AEbDd}{{A`{{l{c}}e}}}Dn{}}{{AEd{f{{l{c}}}}}{{A`{{l{c}}e}}}Dn{}}10{{AEdDdEn}{{A`{{l{c}}e}}}Dn{}}0{c{{A`{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{N`{{Bl{c}}e}}}{{A`{{N`{{AAd{c}}e}}}}}{}BMh}1111111111111111111111111111111{DNn{{A`{CJhBE`}}}}{{{f{DDj}}{f{Bh}}}{{A`{Ojn}}}}{{}{{A`{c}}}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CGb{Ch{DBf}}}{{A`{{BLh{AFn}}n}}}}{{{f{BNn}}c}{{A`{Ojn}}}{{ABd{{f{En}}}{{Ad{{A`{Enn}}}}}}}}{{{f{BNn}}c}{{A`{Ojn}}}{{ABd{{f{{Bl{{f{En}}}}}}}{{Ad{{A`{Enn}}}}}}}}{{BCbc}{{A`{BCbn}}}{{Af{BCb}{{Ad{{A`{BCbn}}}}}}}}{{{f{BNn}}c}{{A`{Ojn}}}{{ABd{{f{Oj}}}{{Ad{{A`{Ojn}}}}}}}}{{{f{BNn}}}{{A`{Ojn}}}}{{DJjGh}{{A`{Ghn}}}}{Bj{{A`{CJbn}}}}{Fb{{A`{CJdn}}}}{Nn{{A`{CJfn}}}}{c{{A`{{N`{c}}DO`}}}{}}{{AGhGh{Gn{{Cn{Cl}}}}{Ch{Ih}}}{{A`{BH`n}}}}{{ce}{{A`{{N`{ce}}DO`}}}{}BMh}{{}{{A`{{N`{{C@l{c}}}}DO`}}}{}}{c{{A`{{N`{{C@l{e}}c}}DO`}}}BMh{}}10{{{f{Bh}}}{{A`{BHbn}}}}`0{c{{A`{{CNl{{N`{c}}}}DO`}}}{}}{{ce}{{A`{{CNl{{N`{ce}}}}DO`}}}{}BMh}{{{f{BOd}}{f{Df{Gn{Bj}}}}}{{A`{bn}}}}{{{f{CCb}}{f{Df{Gn{Bj}}}}}{{A`{bn}}}}{{{f{BN`}}{f{Df{Gn{Bj}}}}}{{A`{bn}}}}{{{f{DfAb}}Gh{f{{CCn{GhMbA@n}}}}}b}{f{{A`{H`BCh}}}}000000000000{{{N`{ce}}}{{A`{c{N`{ce}}}}}{}BMh}{fAAn}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}{{f{Bh}}}}`{{BMfBMf}BMf}{{{f{AId}}}{{A`{AIdn}}}}{BNjBCb}{{BGd{Ch{{Gn{El}}}}BEl}BGd}{BNlBCb}{BCbBCb}{{{f{BLb}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{Abn}}}}2{{BGd{Ch{e}}BEl}BGd{{BAl{BM`}}Jh}{{If{{Bl{c}}}}}}6{{BGd{Ch{{Gn{Dd}}}}BEl}BGd}541{{BGde}BGd{{BAl{BM`}}Jh}{{If{{Bl{c}}}}}}{{{N`{{AGd{c}}}}}{{A`{cb}}}In}{{{N`{ce}}}cJhBMh}{{{f{DfMj}}Jl}b}{{{f{DfCGb}}{f{DOb}}}b}9{{{f{DOd}}c{f{Bh}}BHb}{{A`{AB`n}}}{{BGl{Dd}}}}0{{{CAl{c}}d}{{CAl{c}}}BLl}{{CB`d}CB`}```{{BMjCF`}BMj}`{{{f{BH`}}}{{Ch{{f{Ih}}}}}}0{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}Gh}cJh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{f{Mj}}}{{f{Jl}}}}{{{f{DAj}}ddDdd}{{A`{AB`n}}}}{{BCbdd{f{Bh}}d}BCb}``3{{{f{BH`}}}{{f{{Bl{{Cn{Cl}}}}}}}}{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}}gJh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{f{BH`}}}DGf}{{BNjBj}BCb}{{BGdBj}BGd}{{BNlBj}BCb}{{{f{AL`}}Bj}{{Ch{Aj}}}}{{BCbBj}BCb}{{{f{BLb}}Bj}{{Ch{Aj}}}}{{{f{DNb}}Bj}Mj}{{{f{BLb}}Bj}{{A`{Mjn}}}}``{{{f{DOf}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{DOf}}A@n{f{Df{Bl{Kf}}}}}{{A`{bn}}}}`{{{f{{N`{{AGd{c}}}}}}g}{{A`{eb}}}In{}{{ABd{{f{c}}}{{Ad{e}}}}}}{{}c{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{N`{ce}}}}}GhA@hBMh}{{{f{COl}}}{{l{Ob}}}}{{{f{COn}}}{{l{Ob}}}}{{{f{CDd}}}{{A`{{l{Ob}}n}}}}10{{{f{CEh}}}{{Ch{Fb}}}}{{{f{BHb}}}Hf}`{{{f{BHb}}}d}`{cCGn{{BAl{BCb}}}}{{CH`c}CHb{{BAl{BCb}}}}{{CHdc}CHb{{BAl{BCb}}}}```{{BMjBGd}BMj}{{CKfBCb}CKf}{{{CAl{c}}{f{{N`{{BEd{BBb}}}}}}{Ch{{f{{BEd{BBb}}}}}}d}{{A`{{CAl{c}}n}}}BLl}{{CB`{f{{N`{{BEd{BBb}}}}}}{Ch{{f{{BEd{BBb}}}}}}d}{{A`{CB`n}}}}{{CDl{Ch{{DG`{Gh}}}}}CDl}{{{CAb{c}}{DG`{Gh}}}{{CAb{c}}}CAf}{{{DCb{c}}{DG`{Gh}}}{{DCb{c}}}BLl}{{CDhd}CDh}{Ghc{}}0{{CDhGh}CDh}{{{CNn{c}}{Ch{{DG`{Gh}}}}}{{CNn{c}}}BLl}{{CGbGh}CGb}{{CDh{Ch{CMl}}}CDh}{{CDl{Ch{CMl}}}CDl}{{BGdd}BGd}{{BKnCEl}BKn}1{{BGdBCb}BGd}{{BGdc}BGd{{If{{Bl{BCb}}}}}}{{{DBl{c}}{Ch{{Gn{El}}}}}{{DBl{c}}}BLl}{{{BO`{c}}{Ch{{Gn{El}}}}}{{BO`{c}}}BOb}{{{CAl{c}}{Ch{{Gn{El}}}}}{{CAl{c}}}BLl}{{CGb{Ch{{N`{{Bl{Dd}}}}}}}CGb}`4{{CDh{Ch{Dd}}}CDh}{{CGd{Ch{c}}}CGd{{BAl{CGh}}}}{{{DBn{c}}B@h}{{DBn{c}}}{}}{{{CAh{c}}B@h}{{CAh{c}}}CAf}{{{DBn{c}}{Ch{CI`}}}{{DBn{c}}}{}}{{D@b{Ch{CI`}}}D@b}{{{CAh{c}}{Ch{CI`}}}{{CAh{c}}}CAf}{{{CBb{c}}CJ`}{{CBb{c}}}CAf}{{BGdc}BGd{{If{{Bl{BGd}}}}}}{{{CBb{c}}{Ch{Gh}}}{{CBb{c}}}CAf}{{{CAb{c}}{Ch{El}}}{{CAb{c}}}CAf}0{{CKfBCb}CKf}{{CKhBCb}CKh}{{CDhd}CDh}{{CGdd}CGd}{{{f{BNn}}En}{{A`{Ojn}}}}{{CDh{Ch{{N`{{BEd{En}}}}}}}CDh}{{CGb{Ch{{N`{{Gn{En}}}}}}}CGb}{{CDhCGf}CDh}{{CGdCGf}CGd}{{CDhBj}CDh}{{CGdBj}CGd}{{D@bDBf}D@b}{{BL`{Gn{BCb}}}{{A`{BCbn}}}}{{{CAb{c}}{Ch{Gh}}}{{CAb{c}}}CAf}{{{CAb{c}}{Ch{d}}}{{CAb{c}}}CAf}{{CKhBCbBCbBCb}CKh}=={{CGbd}CGb}{{{DBl{c}}{Ch{{Gn{Ab}}}}}{{DBl{c}}}BLl}{{{CAl{c}}{Ch{{Gn{Ab}}}}}{{CAl{c}}}BLl}{{CB`{Ch{{Gn{Ab}}}}}CB`}{{CKfBCbBCbBCb}CKf}5{{CKfBCb}CKf}{{CKhBCb}CKh}{{CDhd}CDh}{{CDld}CDl}{{{DCb{c}}d}{{DCb{c}}}BLl}{{{CNn{c}}d}{{CNn{c}}}BLl}:{{{DBl{c}}{Ch{{Hj{Dd{N`{Bh}}}}}}}{{DBl{c}}}BLl}{{{CAl{c}}{Ch{{Hj{Dd{N`{Bh}}}}}}}{{CAl{c}}}BLl}{{CB`{Ch{{Hj{Dd{N`{Bh}}}}}}}CB`}{{CDh{Ch{Dd}}}CDh}{{CDl{Ch{Dd}}}CDl}{{CDh{Ch{Gh}}}CDh}{{CDl{Ch{{DG`{Gh}}}}}CDl}{{CGb{Ch{Gh}}}CGb}{{{DC`{c}}DOh}{{DC`{c}}}CAf}{{{DCb{c}}DOh}{{DCb{c}}}BLl}{{{CAb{c}}El}{{CAb{c}}}CAf}>{{CGbd}CGb}{{BBb{DOj{DdDd}}}BBb}{{CKfBCb}CKf}{{CKhBCb}CKh}010{{CDhd}CDh}{{CGdd}CGd}3{{CMjc}CMj{{BAl{{Ch{Gh}}}}}}<{{CDhc}CDh{{BAl{{Ch{Gh}}}}}}{{CDl{Ch{Gh}}}CDl}{{CDlc}CDl{{BAl{{Ch{Gh}}}}}}{{{DBl{c}}{Ch{Gh}}}{{DBl{c}}}BLl}{{{BO`{c}}{Ch{Gh}}}{{BO`{c}}}BOb}{{{CNn{c}}{Ch{Gh}}}{{CNn{c}}}BLl}{{CGb{Ch{Gh}}}CGb}10:>{{CDh{Ch{CGj}}}CDh}{{CGd{Ch{CGj}}}CGd}{{BGdBMf}BGd}{{{CAh{c}}d}{{CAh{c}}}CAf}{{CGbCGd}CGb}{{{CNn{c}}{Ch{e}}}{{CNn{c}}}BLl{{BAl{DBf}}}}{{CGb{Ch{c}}}CGb{{BAl{DBf}}}}{{CMj{N`{{Bl{DBf}}}}}CMj}{{{CNn{c}}{Ch{{N`{BLj}}}}}{{CNn{c}}}BLl}{{{CAl{c}}{Ch{{N`{BLj}}}}}{{CAl{c}}}BLl}{{CB`{Ch{{N`{BLj}}}}}CB`}{{CHlc}CHl{{BAl{{Ch{{N`{BLj}}}}}}}}{{BGdd}BGd}{{{DBl{c}}{Ch{{Gn{Gh}}}}}{{DBl{c}}}BLl}{{{BO`{c}}{Ch{{Gn{Gh}}}}}{{BO`{c}}}BOb}{{{DCb{c}}{Ch{{Gn{Dd}}}}}{{DCb{c}}}BLl}{{{CNn{c}}{Ch{{N`{{Bl{Dd}}}}}}}{{CNn{c}}}BLl}{{{CAl{c}}{Ch{{Gn{Gh}}}}}{{CAl{c}}}BLl}{{CB`{Ch{{Gn{Gh}}}}}CB`}{{CGb{Ch{{N`{{Gn{Gh}}}}}}}CGb}{{CHl{Ch{{N`{{Bl{Dd}}}}}}}CHl}8{{CDh{Ch{Bj}}}CDh}{{{CAb{c}}Bj}{{CAb{c}}}CAf}{{CGd{Ch{Bj}}}CGd}{{{CAb{c}}CHh}{{CAb{c}}}CAf}{{CDhd}CDh}{{CGbd}CGb}{{CMjd}CMj}2{{CDld}CDl}{{{CNn{c}}d}{{CNn{c}}}BLl}3{{BGdd}BGd}{{{CBb{c}}{Ch{Gh}}}{{CBb{c}}}CAf}{{CMjc}CMj{{BAl{{Ch{DJb}}}}}}{{BGdc{Ch{Fb}}}BGd{{BAl{Dd}}}}{{CDhc}CDh{{BAl{{Ch{DJb}}}}}}{{CDh{Ch{DJb}}}CDh}{{CDl{Ch{DJb}}}CDl}{{CDlc}CDl{{BAl{{Ch{DJb}}}}}}{{{DBl{c}}{Ch{DJb}}}{{DBl{c}}}BLl}{{{BO`{c}}{Ch{DJb}}}{{BO`{c}}}BOb}{{{CNn{c}}{Ch{{f{DfDJb}}}}}{{CNn{c}}}BLl}{{{CAl{c}}{Ch{DJb}}}{{CAl{c}}}BLl}{{CB`{Ch{DJb}}}CB`}{{CGb{Ch{DJb}}}CGb}{{CHlc}CHl{{BAl{{Ch{DJb}}}}}}{{CHlc}CHl{{BAl{{Ch{Gh}}}}}}{{{f{BNn}}}{{A`{Ojn}}}}{{CDh{Ch{{N`{{BEd{En}}}}}}}CDh}{{CDl{Ch{{N`{{BEd{En}}}}}}}CDl}{{{DCb{c}}{N`{{BEd{En}}}}}{{DCb{c}}}BLl}{{{CNn{c}}{N`{{BEd{En}}}}}{{CNn{c}}}BLl}{{CGb{Ch{{N`{{BEd{En}}}}}}}CGb}{{CDhc}{{A`{CDhn}}}{{Eb{{BEd{En}}}{{Ad{{A`{{BEd{En}}n}}}}}}}}4{{{DCb{c}}{f{{BEd{En}}}}}{{DCb{c}}}BLl}{{{CNn{c}}{f{{BEd{En}}}}}{{CNn{c}}}BLl}3{{CKfBCb}CKf}{{CKhBCb}CKh}{{CDhBj}CDh}{{{CAb{c}}Bj}{{CAb{c}}}CAf}{{CGdBj}CGd}{{BGdd}BGd}{{CDhGh}CDh}{{CGbGh}CGb}10{{{CAl{c}}{Ch{{Hj{GhGh}}}}}{{CAl{c}}}BLl}{{CB`{Ch{{Hj{GhGh}}}}}CB`}4{{CMjDKb}CMj}{{CDhDKb}CDh}{{CDlDKb}CDl}{{{CBb{c}}CIf}{{CBb{c}}}CAf}{{BKn{Ch{Dd}}}BKn}{{{CAb{c}}{Ch{El}}}{{CAb{c}}}CAf}{{CKfLd}CKf}{{CKf{Ch{Dd}}}CKf}{{CDhd}CDh}{{CGdd}CGd}10>{{BH`{Ch{Ih}}}BH`}{{{f{BH`}}{Ch{Ih}}}{{Cn{Cl}}}}{{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}{Ch{Ih}}}{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}2{{CKhBCb}CKh}{{CKfBCb}CKf}{BGdBGd}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}e{}{}{}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}e{}{}{}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}c}e{}{}{}}10{{c{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}e{}{}{}}210213210210{{{f{Df{N`{AFn}}}}{f{{Bl{Bj}}}}}{{A`{GhBDl}}}}{{{f{Df}}{f{{Bl{Bj}}}}}{{A`{b}}}}{{{f{CHn}}AB`c}{{A`{bn}}}CAf}{{{f{CIl}}AB`c}{{A`{bn}}}CAf}{{{f{DfAB`}}{f{ANl}}e{f{g}}Gh}{{A`{bn}}}{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}{DOlInJ`}}{{{f{{N`{c}}}}{f{Dfe}}}{{A`{bI`}}}{DOnDOnA@h}{E@`A@h}}{{{f{{N`{c}}}}{f{Dfe}}}{{A`{bI`}}}{DOnDOnA@h}{E@bA@h}}{{{f{{N`{c}}}}}{{E`{Bh}}}{DOnDOnA@h}}{{{f{Df}}c}{{A`{GhBDl}}}DLd}{{{f{Df{N`{AFn}}}}{f{{Bl{E@d}}}}}{{A`{GhBDl}}}}{{{f{{N`{c}}}}{f{{Bl{Bj}}}}}BAb{DOnDOnA@h}}{{{f{{N`{c}}}}}E@f{DOnDOnA@h}}{{BCbc}BCb{{BAl{BCb}}}}{{{f{BLb}}}{{A`{Mjn}}}}{{{f{COl}}}{{l{Kl}}}}{{{f{COn}}}{{l{Kl}}}}{{{f{CDd}}}{{A`{{l{Kl}}n}}}}``{{{f{ALh}}{f{{l{Bb}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dn}`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0{{{f{DfAB`}}{f{{Bl{Oj}}}}dd}{{A`{bn}}}}{{{f{CNb}}}CNb}{{f{f{Dfc}}}b{}}{fb}{{{f{E@h}}{f{{Bl{Bj}}}}}{{Hj{GhGh}}}}{Gh{{f{c}}}{}}0{Gh{{f{Dfc}}}{}}0{Ghb}0{{{f{E@h}}{f{{Bl{Bj}}}}{f{DfGh}}}{{Hj{GhGh}}}}{{{f{{Bl{Bj}}}}{Ch{Bj}}BjGhGhGh{Ch{{f{CGh}}}}d}{{A`{Ghn}}}}{{{f{CNb}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}0{{}Gh}0{{}c{}}0{{{Ch{Bj}}Bj}E@h}{{{f{Df{N`{{BEd{En}}}}}}{f{Df{Gn{Oj}}}}}{{A`{dn}}}}{{{f{{Bl{Bj}}}}Bj{f{{BEd{En}}}}d{f{{Bl{Gh}}}}Gh{Ch{Bj}}Bj{Ch{{f{CGh}}}}GhCGf{Ch{{f{CNb}}}}ddGhGh{Ch{Gh}}d}{{A`{AB`n}}}}{fc{}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{fAAn}0{{{f{{Bl{Bj}}}}}d}88````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{Ih}}}Aj}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{{{f{{BEd{BBb}}}}{f{{BEd{BBb}}}}}{{A`{bn}}}}{cc{}}{{}Gh}{{}E@j}{{}c{}}{{{Ch{{f{BLj}}}}{f{COd}}{f{{BEd{BBb}}}}}{{A`{dn}}}}{{{f{E@j}}Aj{f{AGh}}}d}{{{Gn{{Hj{{f{D@n}}E@l}}}}BBb{Ch{E@n}}}{{A`{{Cn{Cl}}n}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}6``{{{f{BHl}}c}Ab{{Eb{{Hj{Fb{f{{BHn{Fb}}}}}}}{{Ad{Ch}}}}InJ`}}{{{f{BHl}}c}Ab{{Eb{{Hj{Fb{f{{BHn{Fb}}}}}}}{{Ad{}}}}InJ`}}{{{f{{Bl{{AAd{Fb}}}}}}c}Ab{{Eb{{AAd{Fb}}}{{Ad{Ch}}}}InJ`}}{{{f{{Bl{{AAd{Fb}}}}}}c}Ab{{Eb{{AAd{Fb}}}{{Ad{}}}}InJ`}}{{{f{{Bl{c}}}}e{Ch{BJd}}}{{AMd{c}}}{BJfBJh}{{D`{}{{Cj{{Hj{FbFb}}}}}}Jj}}{{{f{{Bl{c}}}}{f{Ih}}e{Ch{BJd}}}{{AMd{c}}}{BJfBJh}{{D`{}{{Cj{{Hj{FbFb}}}}}}Jj}}{{{f{{l{c}}}}FbFb}{{l{c}}}Dn}{{{f{{Gn{{AAd{Fb}}}}}}{f{{Bl{{Cn{Cl}}}}}}}d}{{{f{BJj}}{f{C`}}}Ab}{{BJlBJl}BJl}0``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DnDn{{Eb{ff}{{Ad{}}}}}{{Eb{f}{{Ad{}}}}}{{Eb{f}{{Ad{}}}}}Dn}{{{l{c}}{l{e}}gik}{{l{m}}}DnDn{{Eb{}{{Ad{}}}}}{{Eb{}{{Ad{}}}}}{{Eb{}{{Ad{}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DnDnCl{{Af{ff}{{Ad{g}}}}}{{Dn{}{{Ib{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DnDn{{ALj{ChCh}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}g}bDnDn{{Af{ChCh}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{Bf}}}DnDn{{Af{{f{DfEl}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DnDn{}{{Af{}{{Ad{g}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DnDn{ClALl}{{Af{ff}{{Ad{g}}}}}{{Dn{}{{Ib{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DnDnCl{{Af{ff}{{Ad{g}}}}}{{Dn{}{{Ib{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DnDnCl{{Af{}{{Ad{g}}}}}{{Dn{}{{Ib{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DnDn{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DnDn{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DnDn{}{}{{Af{ChCh}{{Ad{{A`{{Ch{g}}i}}}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DnDnDn{{ALn{ChChCh}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DnDnClAM`{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dn{}{{Ib{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kDd}{{A`{{l{m}}i}}}DnDnClAM`{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dn{}{{Ib{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DnDnAM`{{Af{ff}{{Ad{{A`{{Cn{Cl}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DnDnDn{}{}{{Af{ChChCh}{{Ad{{A`{{Ch{i}}k}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{}{}{{Af{Ch}{{Ad{{A`{{Ch{e}}g}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{ClALl}AM`{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dn{}{{Ib{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dn{{AMb{Ch}}}Dn}{{{f{{l{c}}}}e}{{l{g}}}DnAMbDn}{{{f{{l{c}}}}g}{{l{i}}}DnCl{{Af{f}{{Ad{e}}}}}{{Dn{}{{Ib{e}}}}}}{{{l{c}}g}{{l{i}}}DnCl{{Af{}{{Ad{e}}}}}{{Dn{}{{Ib{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dn{ClALl}{{Af{f}{{Ad{e}}}}}{{Dn{}{{Ib{e}}}}}}0``{{{f{EA`}}}{{l{Ff}}}}0{{{f{EA`}}{f{{l{Lb}}}}d}{{A`{Abn}}}}{{{f{EA`}}{f{{l{Bf}}}}d}{{A`{Abn}}}}{{{f{EA`}}}Ab}{{{f{EA`}}}{{A`{Abn}}}}1{{{f{EA`}}}{{A`{{l{Ff}}n}}}}{{{f{EA`}}}{{l{Cf}}}}{{{f{EA`}}{f{Ab}}}{{A`{Abn}}}}{{{f{EA`}}Fd}{{A`{{l{Cf}}n}}}}{{{f{EA`}}Bj}{{A`{Abn}}}}5{{{f{EA`}}}{{A`{{l{Ah}}n}}}}01{{{f{EAb}}}{{f{{l{Cf}}}}}}`{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{CBhBCb}BCb}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}3{cc{}}{{}Gh}{{}c{}}{CBhBCb}7{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}4`````````````````````{{{f{DfEAd}}{f{{Bl{Bj}}}}ddd}{{A`{bn}}}}{{{f{DfEAd}}d}b}>>>>====;;;;::::9999{{{f{EAd}}}En}99998888{{{f{{Bl{Gh}}}}Gh{f{{BEd{En}}}}{Ch{Bj}}CGfd}{{A`{{Gn{EAd}}n}}}}8888{EAd{{A`{Abn}}}}777766665555{{{f{{Bl{Bj}}}}}d}::::````````````{{fh}b}{f{{f{c}}}{}}000{{{f{Df}}}{{f{Dfc}}}{}}000{{{f{EAf}}}EAf}{{f{f{Dfc}}}b{}}{fb}{{}EAh}{Gh{{f{c}}}{}}000{Gh{{f{Dfc}}}{}}000{Ghb}000{{{f{EAf}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}0{E@lEAh}{EAjEAh}{EAlEAh}33{{{f{EAn}}{Nl{Gh}}}{{A`{E@ln}}}}{{{f{EAl}}{Nl{Gh}}}{{A`{E@ln}}}}{{{f{EAj}}{Nl{Gh}}}{{A`{E@ln}}}}{{{f{EAh}}{Nl{Gh}}}{{A`{E@ln}}}}{{{f{EAn}}{f{Df{Bl{{Nl{Gh}}}}}}}{{A`{{CCn{GhE@lA@n}}n}}}}{{{f{EAl}}{f{Df{Bl{{Nl{Gh}}}}}}}{{A`{{CCn{GhE@lA@n}}n}}}}{{{f{EAj}}{f{Df{Bl{{Nl{Gh}}}}}}}{{A`{{CCn{GhE@lA@n}}n}}}}{{{f{EAh}}{f{Df{Bl{{Nl{Gh}}}}}}}{{A`{{CCn{GhE@lA@n}}n}}}}{{{f{EAn}}}{{A`{Ghn}}}}{{{f{EAl}}}{{A`{Ghn}}}}{{{f{EAj}}}{{A`{Ghn}}}}{{{f{EAh}}}{{A`{Ghn}}}}{{}Gh}000{{}c{}}000{fc{}}{{{f{EAf}}{f{Bh}}{Ch{{f{CMl}}}}}{{A`{EAhn}}}}{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{fAAn}000{{{f{EAh}}}{{f{Bh}}}}6666````````{{{f{BOj}}{Ch{{f{Bh}}}}d}{{A`{{L`{KnKl}}n}}}}{{{f{BOj}}{Ch{{f{Bh}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{BOj}}{Ch{{f{Bh}}}}Lddd{Ch{{f{Dd}}}}{f{{l{Bf}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BOj}}{Ch{{f{Bh}}}}Ldd{Ch{{f{Dd}}}}{f{{l{Bf}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BOj}}{Ch{{f{Bh}}}}d}{{A`{{L`{LnLb}}n}}}}`{{{f{COl}}}{{l{Ob}}}}{{{f{COn}}}{{l{Ob}}}}{{{f{D@`}}}{{l{Lb}}}}`{{{f{DFn}}}{{l{Ob}}}}21{{{f{COl}}}{{l{Bb}}}}{{{f{COn}}}{{l{Bb}}}}{{{f{COl}}}{{l{Kl}}}}{{{f{COn}}}{{l{Kl}}}}55`46576{{{f{DFn}}}{{l{Kl}}}}16{{{f{COl}}}{{l{Of}}}}{{{f{COn}}}{{l{Of}}}}{{Dd{f{{Bl{{f{Bh}}}}}}{f{Bh}}}{{L`{KnKl}}}}{{Dd{f{{Bl{{f{Bh}}}}}}{f{Bh}}}{{L`{LnLb}}}}{{Dd{f{{Bl{{f{Bh}}}}}}{f{Bh}}Ld}{{L`{LfLb}}}}=<{{{f{DLl}}A@b}{{A`{Abn}}}}{{{f{DLl}}{f{Ab}}CE`}{{A`{Abn}}}}101010101010<>=`?>>`98`````````{{fh}b}{{{f{BOj}}{Ch{{f{Bh}}}}d}{{A`{{L`{KnKl}}n}}}}{{{f{BOj}}{Ch{{f{Bh}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{BOj}}{Ch{{f{Bh}}}}Lddd{Ch{{f{Dd}}}}{f{{l{Bf}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BOj}}{Ch{{f{Bh}}}}Ldd{Ch{{f{Dd}}}}{f{{l{Bf}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{EB`}}}{{f{{l{Bf}}}}}}{{{f{BOj}}{Ch{{f{Bh}}}}d}{{A`{{L`{LnLb}}n}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{EBb}}}EBb}{{f{f{Dfc}}}b{}}{fb}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{{{f{EBb}}{f{EBb}}}d}{{f{f{c}}}d{}}00{{{f{EBb}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{{f{EBb}}{f{Dfc}}}bAE`}`{{}Gh}{{}c{}}{{{f{EBb}}{f{Bh}}}d}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}5````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{{EBd{c}}}}}{{EBd{c}}}{JhAl}}{{f{f{Dfc}}}b{}}{fb}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{cc{}}{{{f{Bh}}}{{Ch{EBb}}}}{{}Gh}{{}c{}}`{{{f{Df{EBd{c}}}}{f{Bh}}}ChAl}{{{f{DfEBf}}{f{{Bl{Bj}}}}{Ch{Ld}}}{{Ch{c}}}{}}{{{f{Df{EBd{Kl}}}}{f{{Bl{Bj}}}}{Ch{Ld}}}{{Ch{Nn}}}}{{{f{Df{EBd{Lb}}}}{f{{Bl{Bj}}}}{Ch{Ld}}}{{Ch{Hf}}}}`{fc{}}{c{{A`{e}}}{}{}}{{c{Ch{Ld}}}{{A`{{EBj{}{{EBh{e}}}}n}}}{}{}}{{EBb{Ch{Ld}}}{{A`{{EBd{Kl}}n}}}}{{EBb{Ch{Ld}}}{{A`{{EBd{Lb}}n}}}}{{}{{A`{c}}}{}}{fAAn};````````````{{fh}b}0{f{{f{c}}}{}}0000{{{f{Df}}}{{f{Dfc}}}{}}0000`{{{f{CMl}}{f{Bh}}}{{A`{{`{CNf}}n}}}}{{{f{Bh}}{Ch{{f{CMl}}}}d}{{A`{{Hj{EBl{N`{CNf}}}}n}}}}{{{f{CMl}}}CMl}{{{f{EBn}}}EBn}{{f{f{Dfc}}}b{}}0{fb}0`{{}EBl}{{}CMl}{Gh{{f{c}}}{}}0000{Gh{{f{Dfc}}}{}}0000{c{{A`{CMl}}}ADn}{{{f{EBn}}{f{CNh}}{f{DfEC`}}}{{A`{bn}}}}{{{f{DfECb}}}b}{Ghb}0000{{{f{EBl}}{f{EBl}}}d}{{{f{CMl}}{f{CMl}}}d}{{{f{ECd}}{f{ECd}}}d}{{f{f{c}}}d{}}00{{{f{Df}}c}{{A`{{f{Dfe}}BDl}}}DBd{}}``{{{f{DfECb}}}{{A`{bBDl}}}}{{{f{Df}}}{{A`{b}}}}{{{f{EBl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CMl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{EBn}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}0000{{{f{Bh}}}{{A`{ECd}}}}{{{f{Bh}}g}{{A`{CMln}}}{{If{Bh}}}{{BAl{El}}}{{Id{}{{Cj{{Hj{ce}}}}}}}}{{{f{ECf}}d}{{A`{EBln}}}}{{{f{EBn}}{f{CNh}}{Nl{Gh}}}{{A`{EChn}}}}{{{f{EBn}}{f{CNh}}{f{Df{Bl{{Nl{Gh}}}}}}}{{A`{{CCn{ceA@n}}n}}}{{ECj{Gh}{{EBh{{`{AGl}}}}}}DFjECl}{{AOh{ECh}}}}{{{f{Bh}}{Ch{{f{CMl}}}}}{{A`{{Gn{El}}n}}}}{{{f{CMl}}{f{Dfc}}}bAE`}{{{f{EBn}}{f{CNh}}}{{A`{ECnn}}}}{{}Gh}0000{{}c{}}0000`{{{f{Bh}}{Ch{{f{CMl}}}}}{{A`{ECbn}}}}{{{f{Bh}}d}{{A`{EBln}}}}{{{N`{CNf}}}EBn}{{{N`{CNf}}CNh}{{A`{ECbn}}}}{{{f{Bh}}}{{A`{CNhn}}}}``{{{f{Df}}c}{{A`{{f{Dfe}}BDl}}}DBd{}}`{{{f{CMl}}c}A`A@f}{{{f{Df}}g}{{A`{eBDl}}}{}{}{{ABd{{f{Dfc}}}{{Ad{e}}}}}}{fc{}}0{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{fAAn}0000<<<<<{{CMl{Ch{ED`}}}CMl}{{CMlGh}CMl}{{{f{DfECb}}{f{{Bl{Bj}}}}}{{A`{GhBDl}}}}{{{f{Df}}{f{{Bl{Bj}}}}}{{A`{b}}}}{{{f{Df}}c}{{A`{GhBDl}}}DLd}``````{{fh}b}0{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{{{f{ED`}}}ED`}{{{f{EDb}}}EDb}{{f{f{Dfc}}}b{}}0{fb}0{Gh{{f{c}}}{}}00{Gh{{f{Dfc}}}{}}00{c{{A`{ED`}}}ADn}{Ghb}00{{{f{ED`}}{f{ED`}}}d}{{{f{EDb}}{f{EDb}}}d}{{f{f{c}}}d{}}00000{{{f{ED`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{EDb}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}00{cED`{{Eb{}{{Ad{{CNl{{Cn{CNj}}}}}}}}InJ`}}{{{f{ED`}}{f{Dfc}}}bAE`}{{{f{EDb}}{f{Dfc}}}bAE`}{{}Gh}00{{}c{}}00{{{f{ED`}}c}A`A@f}{fc{}}0{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAn}00555``````````````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{{Bl{Bj}}}}}{{Ch{EDd}}}}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{cc{}}=<{{{f{{Bl{Bj}}}}{f{Df{Gn{Bj}}}}}{{A`{{f{{Bl{Bj}}}}n}}}}:98={{{f{{Bl{Fj}}}}{f{En}}}{{A`{Fjn}}}}`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eANf{}{{Id{}{{Cj{c}}}}}}0{{AGhe}ANh{}{{Id{}{{Cj{c}}}}}}0{{{f{ANn}}}{{f{En}}}}{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}}{{Ch{{f{{Bl{c}}}}}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{f{ANb}}{f{ANb}}c}{{A`{ANbn}}}AOn}{{{f{B@`}}{f{En}}}{{A`{Abn}}}}{{{f{B@`}}{f{En}}Gb}{{A`{Abn}}}}`{BAde{}{{ANf{c}}ALl}}0{{BAdAGh}e{}{{ANh{c}}ALl}}0{{{AOj{Bh}}}En}{{{f{B@`}}}{{f{En}}}}``{{AOn{f{{l{Ff}}}}{f{{l{Ff}}}}}{{A`{{l{Ff}}n}}}}{{{Gn{c}}AGh}{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{Gn{c}}AGh}{{ALl{}{{AO`{e}}{AOb{c}}{AOd{g}}}}}{AOf{AOh{e}}}Jh{{Hd{}{{Cj{e}}}}JjInJ`}}{{GhcAGh}{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{GhAGh}{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}Gh}{{Ch{c}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{f{B@`}}Gh}{{A`{Jln}}}}{{{f{B@`}}Gh}Jl}{{}En}{{{f{BBl}}Gh}Jl}4{{BBnEn}{{A`{Mjn}}}}{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}}{{AH`{cgAGn}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}}{{Ch{c}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{f{ANb}}{f{ANb}}}{{A`{{Hj{ANbANb}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hj{{l{Ah}}{l{Ah}}}}n}}}}{{{f{En}}{f{En}}}{{A`{Enn}}}}`{{}c{}}0{g{{A`{ANfe}}}{}{}{{Id{}{{Cj{{A`{ce}}}}}}}}0{{AGhg}{{A`{ANhe}}}{}{}{{Id{}{{Cj{{A`{ce}}}}}}}}0{BAd{{A`{eg}}}{}{{ANf{c}}ALl}{}}0{{BAdAGh}{{A`{eg}}}{}{{ANh{c}}ALl}{}}0{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}Gh}cJh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}0{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}}gJh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{Ghc{}}0{{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}{Ch{Ih}}}{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}```````````{{{f{ANb}}{f{ANb}}c}{{A`{ANbn}}}AOn}{{AOn{f{{l{Ff}}}}{f{{l{Ff}}}}}{{A`{{l{Ff}}n}}}}=<`````````{{}b}0{{}d}`{{{f{{L`{LfLb}}}}{f{{l{Bf}}}}CMd{Gj{Hf}{{Ad{AMl}}}}{Gj{AMl}{{Ad{Hf}}}}{f{AMn}}{f{AMn}}}{{A`{{l{Lb}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{Bh}}}}{Gj{Hf}{{Ad{AMl}}}}{Gj{AMl}{{Ad{Hf}}}}{f{AMn}}{f{AMn}}}{{A`{{l{Lb}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{Bh}}}}{f{{l{Bf}}}}CMd}{{A`{{L`{LfLb}}n}}}}```{{c{Ch{Ih}}}DDl{}}{{{DDn{Hf}}{DDn{Bj}}{Ch{Ih}}}DE`}{{{DDn{Hf}}{DDn{Bj}}{Ch{Ih}}}DEb}`{DAfBCb}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{DAfLd}BCb}3{{DAfBCbLd}BCb}{{DAfDd}BCb}555{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}8{cc{}}9{{}Gh}{{}c{}};;;;;;;;;;{{DAf{Ch{Dd}}BCbCMd}BCb}{{DAfBCb}BCb}={{DAf{f{Bh}}}BCb}>;0>>>>>>>1{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}6{DAfBCb}0?0`{{{f{BJn}}{f{AB`}}{f{C`}}}{{A`{Abn}}}}{{{f{BJn}}}{{A`{{f{Dd}}n}}}}`{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}EDf}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{{EDf{Ch{{f{AGh}}}}}{{A`{AF`n}}}}{cc{}}{{}Gh}{{}c{}}{{{f{EDf}}}d}{{GhGh}EDf}{{{f{DfEDf}}{Cn{Cl}}}b}{{{f{DfEDf}}}b}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}7`{{{f{{l{c}}}}}GhAl}0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{EDh}}}EDh}{{f{f{Dfc}}}b{}}{fb}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{c{{A`{EDh}}}ADn}{Ghb}{{{f{EDh}}{f{EDh}}}d}{{{f{EDh}}{f{DfHn}}}{{A`{bI`}}}}0{cc{}}{{{f{EDh}}{f{Dfc}}}bAE`}{{}Gh}{{}c{}}{{{f{EDh}}c}A`A@f}{fc{}}{fEl}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{f{{A`{H`BCh}}}}{fAAn}7````````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{EDj}}}EDj}{{f{f{Dfc}}}b{}}{fb}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{c{{A`{EDj}}}ADn}{Ghb}{{{f{EDj}}{f{EDj}}}d}{{{f{EDj}}{f{DfHn}}}{{A`{bI`}}}}0{cc{}}{{{f{EDj}}{f{Dfc}}}bAE`}{{}Gh}{{}c{}}{{{f{EDj}}c}A`A@f}{fc{}}{fEl}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{f{{A`{H`BCh}}}}{fAAn}7{{MbMb}Mb}{{{f{{l{Ff}}}}Fb}{{A`{bn}}}}{{{f{{AMd{Fb}}}}Fb}{{A`{bn}}}}```{{{f{Ab}}CFj}Ab}{{{f{Fj}}{f{Fj}}d}{{A`{Fjn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}ChM`{{Eb{}{{Ad{}}}}Ed}}{{{f{Ab}}{f{C`}}}Ab}0{{{f{Ab}}Dd}Ab}0`{{fh}b}{{{f{EDl}}}{{f{AGj}}}}{{{f{DfEDl}}}{{Cn{Cl}}}}{{{f{DfEDl}}}{{f{DfAGj}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{EDl}}}EDl}{{f{f{Dfc}}}b{}}{fb}{{}EDl}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{{{f{EDl}}}{{f{AGh}}}}{{{f{DfEDl}}Gh}b}{{{f{EDl}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{}Gh}{{}c{}}{{{f{EDl}}}Gh}{GhEDl}{{{f{DfEDl}}}b}70{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}{{{f{EDl}}}{{Ch{{f{EDn}}}}}}8{{{f{{Bl{Fj}}}}{f{{Bl{d}}}}{f{{Bl{d}}}}}{{A`{AMfn}}}}{{{f{{Bl{Fj}}}}{f{{Bl{d}}}}{f{{Bl{d}}}}}{{A`{{Kb{Hf}}n}}}}{{Dd{f{{Bl{Fj}}}}{f{{Bl{d}}}}{f{{Bl{d}}}}}{{A`{{l{Fh}}n}}}}{{Dd{f{{Bl{Ab}}}}}{{A`{{l{Fh}}n}}}}{{{f{Ab}}}{{A`{{Cn{Cl}}n}}}}{{{f{{Bl{Ab}}}}}{{A`{AMfn}}}}{{{f{{Bl{Ab}}}}}{{A`{{l{Fh}}n}}}}00`{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DOb}}}DOb}{{f{f{Dfc}}}b{}}{fb}{{}DOb}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{{{f{{BEn{EnA@n}}}}}En}{{{f{DOb}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{{f{DOb}}}Gh}{{{f{DOb}}}{{N`{{BEd{En}}}}}}{{{f{Bh}}dd}En}{{{f{DFf}}Bj{Ch{Gh}}d{Ch{{f{{BEd{En}}}}}}GhGh{Ch{{f{CGh}}}}{Ch{Bj}}Bj{Ch{{f{CGj}}}}dd{f{Df{Ch{Gh}}}}d}{{A`{{Hj{{BEd{En}}GhGh}}n}}}}{{}Gh}{{}c{}}{fc{}}{c{{A`{e}}}{}{}}{{{f{DFf}}{f{CGb}}}{{A`{DObn}}}}{{}{{A`{c}}}{}}{fAAn}5{{DOb{N`{{BEd{En}}}}}DOb}````{{{f{{l{c}}}}eAMhd}{{Gn{Fb}}}Dn{{D`{}{{Cj{Ch}}}}}}{{{f{{Bl{f}}}}cFbe}{{Gn{Fb}}}{{D`{}{{Cj{Ch}}}}}{{Eb{fGhf}{{Ad{d}}}}}}``{{{f{EE`}}}{{f{Ab}}}}{{{f{CDd}}}{{A`{{l{Kl}}n}}}}{{{f{CDd}}}{{A`{{l{Ob}}n}}}}0{{{f{CDd}}}{{A`{{l{Bb}}n}}}}22112{{{f{CDd}}}{{A`{{l{Of}}n}}}}322{{{f{CDd}}{f{Bh}}}{{A`{Abn}}}}{{{f{CDd}}Ld}{{A`{{l{Lb}}n}}}}1445`{{Gh{f{Df{Gn{d}}}}}b}```{{{f{AKn}}GhGh}AKn}0{{Gh{f{{Bl{Fj}}}}{f{DfFl}}}{{A`{{AMj{{l{Ff}}}}n}}}}`````````````11```{{{f{C@j}}}{{f{{l{Bf}}}}}}{{{f{C@n}}}{{A`{{l{Bf}}n}}}}{{{f{C@n}}}{{l{Bf}}}}{{{f{C@n}}{f{{l{Bf}}}}}{{l{Bf}}}}{{{f{C@n}}{f{Bh}}d}{{A`{{l{Bb}}n}}}}{{{f{C@n}}{f{{l{Bf}}}}dd}{{A`{{l{Bb}}n}}}}{{{f{C@n}}{f{Bh}}}{{A`{{l{Bb}}n}}}}{{{f{C@n}}{f{Bh}}d}{{A`{{l{Ff}}n}}}}{{{f{C@n}}{f{{l{Bf}}}}d}{{A`{{l{Ff}}n}}}}{{{f{{l{Bf}}}}}{{l{Bf}}}}{{{f{Bh}}}El}{{{f{C@n}}{f{{l{Bf}}}}Gh}{{A`{{l{Bf}}n}}}}{{{f{C@n}}{f{Bh}}}{{A`{{l{Ah}}n}}}}{{{f{C@n}}{f{{l{Bf}}}}}{{A`{{l{Ah}}n}}}}{{{f{C@n}}{f{Bh}}{f{En}}}{{A`{Abn}}}}7{{{f{C@n}}{f{{l{Bf}}}}dd}{{A`{{l{Ff}}n}}}}{{{f{C@n}}{f{Bh}}}{{A`{{l{Ff}}n}}}}?>{{{f{{Bl{{f{{l{Bf}}}}}}}}{f{Bh}}d}{{A`{{l{Bf}}n}}}}{{{f{C@n}}{f{Bh}}{f{Bh}}}{{A`{{l{Bf}}n}}}}0{{{f{C@n}}{f{Bh}}{f{Bh}}Gh}{{A`{{l{Bf}}n}}}}1{{{f{C@n}}{f{{l{Bf}}}}}{{l{Ah}}}}{{{f{C@n}}{f{{l{Bf}}}}Gh}{{A`{{l{j}}n}}}}0{{{f{{l{Bf}}}}{f{{l{Bf}}}}e}{{l{Ah}}}{{D`{}{{Cj{{f{Bh}}}}}}}{{Eb{{f{Bh}}{f{Bh}}}{{Ad{c}}}}}}2{{{f{{l{Bf}}}}{f{{l{Bf}}}}Ghed}{{A`{{l{j}}n}}}{{D`{}{{Cj{{f{Bh}}}}}}}{{Eb{{f{Bh}}{f{Bh}}}{{Ad{c}}}}}}2{{{f{C@n}}{f{Bh}}}{{l{Bb}}}}{{{f{C@n}}{f{{l{Bf}}}}}{{l{Bb}}}}{{{f{C@n}}}{{l{Bf}}}}{{{f{C@n}}{f{Fj}}}{{A`{{l{Bf}}n}}}}{{{f{{l{Bf}}}}{f{Bh}}d}{{l{Bf}}}}{{{f{C@n}}}{{l{Ff}}}}03{{{f{C@n}}{f{Fj}}{f{Fj}}}{{A`{{l{Bf}}n}}}}3{{{f{{l{Bf}}}}{f{{l{Bf}}}}}{{l{Bf}}}}404040{{{f{C@n}}{f{{l{Bf}}}}}{{l{Bf}}}}10{{{f{C@n}}{f{{l{Ff}}}}d}{{A`{{l{Lb}}n}}}}777````````{{eGhGh}{{EEb{Hf}}}{{If{Bh}}}{{D`{}{{Cj{c}}}}}}{{eGhGh}{{Kb{Hf}}}{{If{{Bl{Bj}}}}}{{D`{}{{Cj{c}}}}}}``````````````{{fh}b}0{{{f{BLb}}}Aj}{{Dd{Gn{{Cn{Cl}}}}{f{AGh}}}{{A`{Abn}}}}{{Dd{Gn{{Cn{Cl}}}}{f{AGh}}{Ch{{f{{DOj{DdDd}}}}}}}{{A`{Abn}}}}{{AbAb}}{{Abc}{}{AnMh}}{{{f{Ab}}c}{}{AnMh}}{{{f{Ab}}{f{Ab}}}}`{{{f{BLb}}}{{A`{Mjn}}}}{{{f{DfAb}}{f{Ab}}}{{A`{{f{DfAb}}n}}}}{{{f{BLb}}}{{A`{Fbn}}}}{{{f{Ab}}}{{Ch{Gh}}}}0{{{f{BLb}}Fd}{{l{Ff}}}}{{{f{BLb}}}{{A`{{l{Ff}}n}}}}`{{{f{Ab}}}{{A`{{f{{l{Cf}}}}n}}}}{{{f{Ab}}Gh}{{f{{Cn{Cl}}}}}}{{{f{BLb}}}{{f{AGj}}}}{{{f{DfBLb}}}{{f{DfAGj}}}}{{{f{Ab}}}{{l{Ah}}}}{{{f{DfBLb}}}{{f{Df{l{c}}}}}Dn}{{{f{BLb}}}{{f{{l{c}}}}}Dn}{{{f{Ab}}}{{f{BLb}}}}{{{f{Ab}}}{{f{Ab}}}}0{{{f{DfBLb}}}{{A`{Ghn}}}}{{{f{DfAb}}}{{A`{Ghn}}}}{{{f{Ab}}}{{A`{{f{{l{Bd}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Fh}}}}n}}}}{{{f{Ab}}Ab}}{{{f{Ab}}{f{Ab}}}}{{Ab{f{Ab}}}}{{AbAb}}20312310{{{f{Ab}}}{{A`{{f{{l{Bb}}}}n}}}}{f{{f{c}}}{}}000{{{f{Df}}}{{f{Dfc}}}{}}000{{{f{BLb}}}{{Ch{{Cn{G`}}}}}}{{{f{BLb}}{f{En}}Gb}{{A`{Abn}}}}{{{f{Ab}}{f{En}}}{{A`{Abn}}}}0{{{f{Ab}}{f{En}}Gb}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{ANb}}n}}}}{{{f{BLb}}{f{Ab}}}{{A`{Abn}}}}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Ab}}c}{{A`{Abn}}}B`}{{{f{BLb}}}{{Gl{{Gf{{Cn{Cl}}}}{Gj{{f{{Cn{Cl}}}}}{{Ad{Gh}}}}}}}}{{{f{Ab}}}{{`{{D`{}{{Cj{Gh}}}}}}}}{{{f{BLb}}}{{f{{Gn{{Cn{Cl}}}}}}}}{{{f{DfBLb}}}{{f{Df{Gn{{Cn{Cl}}}}}}}}{{{f{DfAb}}}{{f{Df{Gn{{Cn{Cl}}}}}}}}{{{f{Ab}}}Ab}{{{f{Mb}}}Mb}1{{{f{BLb}}}{{N`{BLb}}}}{{f{f{Dfc}}}b{}}0{fb}0{{{f{DfAb}}}b}{{{f{Ab}}}{{A`{{f{{L`{KnKl}}}}n}}}}{{{f{Ab}}}{{A`{{f{{L`{LfLb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{L`{LjLh}}}}n}}}}{{}Ab}{Gh{{f{c}}}{}}00{{{f{Ab}}}f}1{Gh{{f{Dfc}}}{}}000{c{{A`{Mb}}}ADn}{c{{A`{Ab}}}ADn}{{AbAb}}{{{f{Ab}}{f{Ab}}}}{{Abc}{}{AnMh}}{{{f{Ab}}c}{}{AnMh}}{Ghb}000{{{f{BLb}}}Ab}{{{f{BLb}}}{{f{En}}}}{{{f{Ab}}}{{A`{{f{{L`{LlLb}}}}n}}}}{{{f{Mb}}{f{Mb}}}d}{{{f{Ab}}{f{Ab}}}d}{{{f{{AIj{}{{Cj{c}}}}}}e}c{}{}}9{{{f{Ab}}c}{}BAn}{{{f{Ab}}{f{Bh}}}{{A`{{l{Bb}}n}}}}21;{{{f{Ab}}{f{Bh}}}}44{{f{f{c}}}d{}}00{{{f{Ab}}}Gh}{{{f{Ab}}}{{A`{Abn}}}}{{{f{DfAb}}{f{Ab}}}{{A`{{f{DfAb}}n}}}}{{{f{Ab}}JlGh}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{Eh}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Ej}}}}n}}}}{{{f{BLb}}}{{E`{Oj}}}}{{{f{Ab}}AIh}{{A`{Abn}}}}{{{f{BLb}}{f{{l{Bb}}}}}{{A`{Abn}}}}{{{f{BLb}}}Mj}{{{f{Mb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Ab}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{Ab}}}El}{cc{}}00{{{L`{LlLb}}}Ab}{{{L`{LnLb}}}Ab}2{{{L`{LfLb}}}Ab}{{{L`{KnKl}}}Ab}{{{l{c}}}AbDn}{EEdAb}{{Dd{f{{Bl{Jl}}}}d}{{A`{Abn}}}}{{Dd{f{{Bl{Jl}}}}{f{En}}d}{{A`{Abn}}}}{{Dd{Cn{Cl}}}{{A`{Abn}}}}{{Dd{Gn{{Cn{Cl}}}}}{{A`{Abn}}}}{{Dd{Gn{{Cn{Cl}}}}{f{En}}}Ab}{cAb{{Id{}{{Cj{{f{Nn}}}}}}}}{cAb{{Id{}{{Cj{{Ch{Hf}}}}}}}}{cAb{{Id{}{{Cj{{Ch{Bj}}}}}}}}{cAb{{Id{}{{Cj{Bj}}}}}}{cAb{{Id{}{{Cj{{f{Bj}}}}}}}}{cAb{{Id{}{{Cj{{Ch{Nf}}}}}}}}{cAb{{Id{}{{Cj{Nf}}}}}}{cAb{{Id{}{{Cj{{f{Nf}}}}}}}}{cAb{{Id{}{{Cj{{Ch{Aj}}}}}}}}{cAb{{Id{}{{Cj{{Ch{Fb}}}}}}}}{cAb{{Id{}{{Cj{Fb}}}}}}{cAb{{Id{}{{Cj{{f{Fb}}}}}}}}{cAb{{Id{}{{Cj{Aj}}}}}}{cAb{{Id{}{{Cj{{Ch{Oh}}}}}}}}{cAb{{Id{}{{Cj{{Ch{Kf}}}}}}}}{cAb{{Id{}{{Cj{Kf}}}}}}{cAb{{Id{}{{Cj{{f{Kf}}}}}}}}{cAb{{Id{}{{Cj{Hf}}}}}}{cAb{{Id{}{{Cj{Od}}}}}}{cAb{{Id{}{{Cj{{f{Od}}}}}}}}{cAb{{Id{}{{Cj{{f{Aj}}}}}}}}{cAb{{Id{}{{Cj{{Ch{d}}}}}}}}{cAb{{Id{}{{Cj{Oh}}}}}}{cAb{{Id{}{{Cj{d}}}}}}{cAb{{Id{}{{Cj{{f{Kd}}}}}}}}{cAb{{Id{}{{Cj{{f{d}}}}}}}}{cAb{{Id{}{{Cj{{Ch{{f{Bh}}}}}}}}}}{cAb{{Id{}{{Cj{{f{Oh}}}}}}}}{cAb{{Id{}{{Cj{{Ch{Nn}}}}}}}}{cAb{{Id{}{{Cj{{f{Bh}}}}}}}}{cAb{{Id{}{{Cj{{Ch{El}}}}}}}}{cAb{{Id{}{{Cj{Nn}}}}}}{cAb{{Id{}{{Cj{El}}}}}}{cAb{{Id{}{{Cj{Kd}}}}}}{cAb{{Id{}{{Cj{{Ch{Kd}}}}}}}}{cAb{{Id{}{{Cj{{f{Hf}}}}}}}}{cAb{{Id{}{{Cj{{Ch{Od}}}}}}}}{{Dd{Gn{Bj}}}Ab}{{Dd{Gn{Kd}}}Ab}{{Dd{Gn{Od}}}Ab}{{Dd{Gn{Oh}}}Ab}{{Dd{Gn{Nn}}}Ab}{{Dd{Gn{Hf}}}Ab}{{Dd{Gn{O`}}}Ab}{{Dd{Gn{Nf}}}Ab}{{Dd{Gn{Fb}}}Ab}{{Dd{Gn{Kf}}}Ab}{{Dd{Gn{Aj}}}Ab}{{DdGh{f{En}}}Ab}{{{f{Ab}}GhGh}Ab}{{{f{BLb}}Gh}{{A`{Jln}}}}{{{f{Ab}}}Jn}{{{f{Ab}}}Ab}{{{f{BLb}}}{{Ch{{Nb{G`}}}}}}{{{f{BLb}}Gh}{{Ch{{f{K`}}}}}}{{{f{BLb}}GhGh}{{Ch{{f{K`}}}}}}{{{f{BLb}}Gh}Jl}{{{f{Ab}}{f{Bh}}}}{{{f{Ab}}c}{}BAn}{{{f{Ab}}{f{Ab}}}}210{{{f{BLb}}}d}{{{f{Mb}}{f{Dfc}}}bAE`}{{{f{Ab}}{Ch{Gh}}}Ab}{{{f{Ab}}}{{A`{{f{{l{Of}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Kl}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Lb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Ob}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Ff}}}}n}}}}`{{{f{Ab}}}{{A`{{l{Ah}}n}}}}{{}Gh}000{{}c{}}000{Ab{{Gn{{Cn{Cl}}}}}}{{}Fj}{AbAB`}3{BGfAb}{AbAb}?{{{f{Ab}}}{{A`{{l{Bb}}n}}}}000{{{f{BLb}}}{{l{Bb}}}}0{{}d}0{{{f{Ab}}}Mb}{{{f{Ab}}}EEf}{{{f{Ab}}}{{`{{D`{}{{Cj{Ab}}}}}}}}{{{f{BLb}}}Mj}{{{f{BLb}}}Gh}{{{f{Ab}}}Gh}{{{f{BLb}}Gh}Ab}{{{f{Ab}}}{{A`{{f{{l{Ah}}}}n}}}}{{{f{Ab}}}{{Hj{{Gn{{Hh{Hf}}}}{Gn{{Ch{Ih}}}}}}}}{{{f{Ab}}}Ab}{AbBCb}{{{f{Ab}}{f{Bh}}}}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}c}{}BAn}012{{{f{Ab}}}{{A`{{Ch{c}}n}}}Mh}{{{f{BLb}}}{{A`{Mjn}}}}{{{f{BLb}}}{{Ch{Aj}}}}{{{f{Ab}}}Mj}1232{{{f{Ab}}c}{}{AnMh}}{{Abc}{}{AnMh}}{{AbAb}}8{{{f{BLb}}}Gh}{{{f{Ab}}}Gh}{{{f{BLb}}}{{A`{Ghn}}}}{{{f{BLb}}}{{f{Dd}}}}{{Ddc}Ab{{If{{Bl{Od}}}}}}{{Ddc}Ab{{If{{Bl{O`}}}}}}{{Ddc}Ab{{If{{Bl{El}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{AMl}}}}}}}}{{Ddc}Ab{{If{{Bl{BBh}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{BBh}}}}}}}}{{Ddc}Ab{{If{{Bl{AN`}}}}}}{{Ddc}Ab{{If{{Bl{Ab}}}}}}{{Dd{Nl{Fb}}}Ab}{{Dd{Nl{Kf}}}Ab}{{Ddc}Ab{{If{{Bl{{Ch{AN`}}}}}}}}{{Ddc}AbBGf}{{Ddc}Ab{{If{{Bl{{Gn{Bj}}}}}}}}{{Ddc}Ab{{If{{Bl{d}}}}}}{{Dd{Nl{Nn}}}Ab}{{Dd{Nl{Hf}}}Ab}{{Ddc}Ab{{If{{Bl{Bj}}}}}}{{Ddc}Ab{{If{{Bl{Nf}}}}}}{{Ddc}Ab{{If{{Bl{Jl}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Aj}}}}}}}}{{Ddc}Ab{{If{{Bl{BBj}}}}}}{{Ddc}Ab{{If{{Bl{Fb}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Kd}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{O`}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Hf}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{{E`{{Bl{Bj}}}}}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Ab}}}}}}}}{{Ddc}Ab{{If{{Bl{{f{Bh}}}}}}}}{{Ddc}Ab{{If{{Bl{Kf}}}}}}{{Dd{f{Ab}}}Ab}{{Ddc}Ab{{If{{Bl{{Ch{{f{Bh}}}}}}}}}}{{Ddc}Ab{{If{{Bl{{E`{{Bl{Bj}}}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Nn}}}}}}}}{{Ddc}Ab{{If{{Bl{AMl}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Od}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Kf}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Fb}}}}}}}}{{Ddc}Ab{{If{{Bl{Oh}}}}}}{{Ddc}Ab{{If{{Bl{Nn}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Nf}}}}}}}}{{Ddc}Ab{{If{{Bl{{E`{Bh}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Bj}}}}}}}}{{Ddc}Ab{{If{{Bl{Hf}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{{E`{Bh}}}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{d}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{{Gn{Bj}}}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{El}}}}}}}}{{Ddc}Ab{{If{{Bl{Aj}}}}}}{{Ddc}Ab{{If{{Bl{{f{{Bl{Bj}}}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{{f{{Bl{Bj}}}}}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{BBj}}}}}}}}{{Ddc}Ab{{If{{Bl{Kd}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Oh}}}}}}}}{{Dd{f{En}}}Ab}{{{f{BLb}}GhGh}Ab}{{DdGh}Ab}{{{f{DfEEf}}}Ch}{{{f{{AIj{}{{Cj{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}c}{}BAn}{{{f{Ab}}{f{Bh}}}{{A`{{l{Bb}}n}}}}321{{{f{Ab}}{f{Bh}}}}{{{f{Ab}}}{{A`{{f{ADj}}n}}}}{{{f{BLb}}}Gh}`{{{f{BLb}}}{{A`{Mjn}}}}{{{f{Ab}}}{{Cn{Jf}}}}{{{f{Ab}}}{{A`{Mjn}}}}{{{f{BLb}}AjA@`}{{A`{Mjn}}}}{{{f{BLb}}}Ab}{{{f{BLb}}}{{Ch{Ih}}}}{{{f{Ab}}c}{}{AnMh}}{{Abc}{}{AnMh}}={{{f{DfBLb}}Dd}b}{{{f{DfAb}}Dd}{{f{DfAb}}}}{{{f{Ab}}{f{{Bl{B@n}}}}}{{A`{Abn}}}}06{MbMb}{{{f{BLb}}{f{Eb}}A@b}{{A`{Abn}}}}{{{f{Ab}}Ajdd{Ch{Kf}}}{{A`{Abn}}}}{{{f{Ab}}Ghdd{Ch{Kf}}}{{A`{Abn}}}}{{{f{Ab}}Gh}Ab}{{{f{Mb}}c}A`A@f}{{{f{Ab}}c}A`A@f}{{{f{DfAb}}Mb}b}{{{f{BLb}}Hf}Ab}{{{f{DfBLb}}}b}{{{f{DfAb}}}b}{{{f{Ab}}{Ch{Kf}}}Ab}{{{f{EEf}}}{{Hj{Gh{Ch{Gh}}}}}}{{{f{BLb}}HfGh}Ab}{{{f{Ab}}HfGh}Ab}{{{f{Ab}}Fd}{{A`{Abn}}}}{{{f{BLb}}Fd}{{A`{Abn}}}}{{{f{BLb}}Hf}{{Hj{AbAb}}}}{{{f{Ab}}Hf}{{Hj{AbAb}}}}{{{f{BLb}}Bj}{{Ch{Aj}}}}{{{f{BLb}}Bj}{{A`{Mjn}}}}{{{f{Ab}}}{{A`{{f{{l{Bf}}}}n}}}}{{{f{Ab}}Gh}{{A`{{E`{Bh}}n}}}}{{{f{Ab}}{f{En}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{j}}}}n}}}}{{Abc}{}{AnMh}}{{AbAb}}{{{f{Ab}}c}{}{AnMh}}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}}{{A`{cn}}}Mh}{{{f{BLb}}}{{A`{Mjn}}}}{{{f{Ab}}}{{A`{Mjn}}}}{{{f{Ab}}{Ch{Gh}}}Ab}{{{f{BLb}}{f{{l{Ff}}}}}{{A`{Abn}}}}{{{f{Ab}}{f{{Bl{A@j}}}}Mb}Ab}{{{f{Ab}}{f{{Bl{A@j}}}}}Ab}{{{f{BLb}}{f{{Bl{Fb}}}}}{{A`{Abn}}}}{{{f{BLb}}{f{{Bl{Fb}}}}}Ab}{{{f{BLb}}{f{{l{Ff}}}}}Ab}{{{f{Ab}}}{{A`{{f{{L`{LnLb}}}}n}}}}{{{f{Ab}}GhB@h}{{Cn{Cl}}}}{{{f{Ab}}{Ch{{f{Bh}}}}d}{{A`{AB`n}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{Ab}}{f{En}}}{{A`{Abn}}}}{fc{}}0{{{f{Ab}}}{{E`{Ab}}}}{fEl}{{AbAb}{{A`{Abn}}}}{{{f{Ab}}}{{Ch{{f{{l{Cf}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Bd}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Fh}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Bb}}}}}}}}{{{f{Ab}}}{{Ch{{f{ANb}}}}}}{{{f{Ab}}}{{Ch{{f{{L`{KnKl}}}}}}}}{{{f{Ab}}}{{Ch{{f{{L`{LfLb}}}}}}}}{{{f{Ab}}}{{Ch{{f{{L`{LjLh}}}}}}}}{{{f{Ab}}}{{Ch{{f{{L`{LlLb}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Eh}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Ej}}}}}}}}{c{{A`{e}}}{}{}}000{{{Hj{{f{BBb}}{Cn{Cl}}}}}{{A`{Abn}}}}{{{Hj{Dd{Gn{{Cn{Cl}}}}}}}{{A`{Abn}}}}{{{Hj{Dd{Cn{Cl}}}}}{{A`{Abn}}}}{{{Hj{{f{BBb}}{Gn{{Cn{Cl}}}}}}}{{A`{Abn}}}}{{{f{Ab}}}{{Ch{{f{{l{Of}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Kl}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Lb}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Ob}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Ff}}}}}}}}{{}{{A`{c}}}{}}000{{{f{Ab}}}{{Ch{{f{{l{Ah}}}}}}}}{{AbAb}{{A`{Abn}}}}{{Ddc}{{A`{Ab}}}{}}{{{f{Ab}}}{{Ch{{f{ADj}}}}}}{{{f{DfAb}}{Kh{c}}}dDn}{{{f{Ab}}}{{Ch{{f{{l{Bf}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{j}}}}}}}}5{{{f{Ab}}}{{Ch{{f{{L`{LnLb}}}}}}}}{f{{A`{H`BCh}}}}{{{f{Ab}}}{{Ch{{f{{l{Nd}}}}}}}};{{{f{Ab}}}{{Ch{{f{{l{Nj}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Nh}}}}}}}}{fAAn}000{{{f{Ab}}}{{A`{{f{{l{Nd}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Ff}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Nj}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Nh}}}}n}}}}{{{f{BLb}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{BLb}}}{{A`{{f{{l{c}}}}n}}}Dn}{{{f{BLb}}Bj}{{Ch{Aj}}}}{{{f{BLb}}Bj}{{A`{Mjn}}}}{{}c{}}000{{AbDd}Ab}{{{f{Ab}}c}Ab{AnMh}}{{{f{BLb}}}{{A`{Mjn}}}}{{{f{Ab}}{f{{l{Bb}}}}{f{Ab}}}{{A`{Abn}}}}``{{fh}b}{{{f{Ef}}}{{f{Ab}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{Ef}}}Ef}{{f{f{Dfc}}}b{}}{fb}{{{f{Ef}}}Ab}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{cc{}}{{}Gh}{{}c{}}{{{EEh{Ab}}}Ef}{{{f{DfEf}}{f{Df{Cn{Cl}}}}}b}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}6{{{f{DfEf}}{f{Df{Cn{Cl}}}}e}c{}{{Eb{{f{Ef}}}{{Ad{c}}}}}}``````{{fh}b}0{{{f{Ab}}{f{Ab}}c}{{A`{Abn}}}{{Af{{f{Ab}}{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{BLn{}{{Ad{c}}}}{f{Ab}}}c{}}{{}EEj}{{}EEl}{{{f{BMb}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bn}}}}{f{Ab}}}{{A`{Abn}}}}{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0`{{{f{EEj}}}EEj}{{{f{EEl}}}EEl}{{f{f{Dfc}}}b{}}0{fb}0{Gh{{f{c}}}{}}0{Gh{{f{Dfc}}}{}}0<;:98{Ghb}0{{{f{EEj}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{EEl}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}>={cc{}}0{{}Gh}0{{}c{}}0{{{BLn{}{{Ad{c}}}}{f{Ab}}}c{}}{{}EEj}{{}EEl}{{{f{BMb}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bn}}}}{f{Ab}}}{{A`{Abn}}}}4321043210{fc{}}0{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{fAAn}099``{{{f{CDf}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Gd}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{CDf}}c}{{A`{Abn}}}B`}{{{f{{l{Gd}}}}c}{{A`{Abn}}}B`}```{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DAb}}}DAb}{{f{f{Dfc}}}b{}}{fb}{{}DAb}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{c{{A`{DAb}}}ADn}{Ghb}{{{f{DAb}}{f{DAb}}}d}{{f{f{c}}}d{}}00{{{f{DAb}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{{f{DAb}}{f{Dfc}}}bAE`}{{}Gh}{{}c{}}{{{f{DAb}}c}A`A@f}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}5","D":"AEIlCI`","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",12769],[5,"StructType",2039,12770],[5,"ChunkedArray",17,12771],[6,"PolarsError",3664,12772],[6,"Result",12773],[5,"Series",12156,12774],[17,"Output"],[10,"FnMut",12775],[5,"ListType",2039,12770],[1,"f64"],[10,"PolarsNumericType",2039,12770],[10,"Num",12776],[10,"ToPrimitive",12777],[5,"BooleanType",2039,12770],[5,"BinaryType",2039,12770],[5,"StringType",2039,12770],[1,"str"],[1,"u8"],[1,"slice"],[10,"NumOpsDispatchInner",12663,12778],[6,"GroupsProxy",4372,12779],[5,"ObjectType",2039,12770],[10,"PolarsObject",1571,12780],[5,"FixedSizeListType",2039,12770],[6,"Option",12781],[17,"Item"],[10,"Array",12782],[5,"Box",12783],[10,"Iterator",12784],[5,"AmortizedListIter",12785],[5,"PlSmallStr",2039,12786],[0,"mut"],[17,"IsNested"],[5,"FalseT",2039,12770],[17,"IsObject"],[10,"PolarsDataType",2039,12770],[6,"Cow",12787],[10,"Fn",12775],[10,"Copy",12788],[5,"AmortSeries",12639,12789],[5,"Float32Type",2039,12770],[5,"Float64Type",2039,12770],[5,"String",12790],[6,"DataType",2039,12791],[5,"View",12792],[1,"u32"],[5,"SortOptions",1701,12793],[5,"UInt32Type",2039,12770],[5,"BinaryOffsetType",2039,12770],[6,"Column",4058,12794],[5,"SortMultipleOptions",1701,12793],[10,"PolarsIntegerType",2039,12770],[10,"MetadataTrait",1285,12795],[6,"CastOptions",1177,12796],[10,"NumOpsDispatchCheckedInner",12734,12797],[5,"Iter",12798],[1,"usize"],[1,"fn"],[5,"Map",12799],[5,"Vec",12800],[5,"CompactString",12801],[5,"MetadataProperties",1285,12802],[10,"DoubleEndedIterator",12803],[1,"i64"],[5,"OffsetsBuffer",12804],[1,"tuple"],[17,"HasViews"],[5,"Formatter",12805],[5,"Error",12805],[17,"Array"],[10,"IntoIterator",12806],[10,"AsRef",12807],[5,"Bitmap",12808],[10,"PolarsAsRef",12809],[10,"Borrow",12810],[10,"Send",12788],[10,"Sync",12788],[10,"IntoParallelIterator",12811],[10,"NoOption",12812],[10,"ExactSizeIterator",12813],[10,"Clone",12814],[10,"TrustedLen",12815],[6,"AnyValue",2039,12816],[5,"MetadataFlags",1285,12802],[10,"PolarsObjectSafe",1571,12780],[5,"BinaryArray",12817],[1,"f32"],[1,"u64"],[5,"Metadata",1285,12802],[5,"RwLockWriteGuard",12818],[5,"Int32Type",2039,12770],[5,"DateType",2039,12770],[5,"Logical",2039,12819],[5,"Int64Type",2039,12770],[6,"TimeUnit",2039,12820],[5,"DatetimeType",2039,12770],[5,"Int128Type",2039,12770],[5,"DecimalType",2039,12770],[5,"DurationType",2039,12770],[5,"TimeType",2039,12770],[10,"PolarsFloatType",2039,12770],[6,"IsSorted",12156,12821],[10,"PolarsIterator",1228,12822],[6,"ChunkedArrayLayout",17,12771],[10,"NumCast",12777],[5,"Scalar",4741,12823],[6,"MetadataReadGuard",1285,12824],[5,"IMMetadata",1285,12825],[5,"Arc",4741,12826],[5,"RwLockReadGuard",12818],[5,"UInt16Type",2039,12770],[1,"u16"],[5,"UInt8Type",2039,12770],[5,"UInt64Type",2039,12770],[5,"Range",12827],[1,"i32"],[1,"i128"],[5,"Int8Type",2039,12770],[1,"i8"],[5,"Int16Type",2039,12770],[1,"i16"],[5,"Field",2039,12828],[10,"ParallelIterator",12811],[10,"IndexedParallelIterator",12811],[6,"QuantileMethod",4741,12829],[5,"RollingOptionsFixedWindow",4741,12830],[10,"PolarsOpsNumericType",12831],[10,"Serializer",12832],[10,"Sized",12788],[5,"ChunkId",4741,12833],[17,"IsStruct"],[5,"RandomState",12834],[5,"BytesHash",12835],[5,"OwnedRepr",12836],[1,"array"],[5,"Dim",12837],[5,"ArrayBase",12838],[5,"ViewRepr",12838],[6,"Either",12839],[5,"TypeId",12840],[5,"DataFrame",3765,12841],[5,"NullableIdxSize",4741,12833],[10,"FnOnce",12775],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",870,12842],[5,"AnonymousListBuilder",898,12843],[5,"AnonymousOwnedListBuilder",898,12843],[5,"ListBooleanChunkedBuilder",898,12844],[5,"ListPrimitiveChunkedBuilder",898,12845],[10,"ListBuilderTrait",898,12846],[10,"ChunkedBuilder",898,12847],[5,"ListStringChunkedBuilder",898,12848],[5,"ListBinaryChunkedBuilder",898,12848],[5,"ListNullChunkedBuilder",898,12849],[5,"BinViewChunkedBuilder",898,12850],[10,"ViewType",12851],[5,"BooleanChunkedBuilder",898,12852],[5,"NullChunkedBuilder",898,12853],[5,"PrimitiveChunkedBuilder",898,12854],[5,"NullChunked",12855],[10,"NewChunkedArray",898,12847],[10,"Deserializer",12856],[10,"Hasher",12857],[10,"ChunkedCollectInferIterExt",1208,12858],[10,"ChunkedCollectIterExt",1208,12858],[10,"Canonical",1222,12859],[10,"ChunkedCollectParIterExt",1224,12860],[10,"FromParIterWithDtype",1224,12860],[5,"BooleanArray",12861],[5,"BoolIterNoNull",1228,12822],[5,"FixedSizeListArray",12862],[5,"FixedSizeListIterNoNull",1228,12822],[5,"SomeIterator",1228,12822],[5,"MetadataEnv",1285,12863],[10,"MetadataCollectable",1285,12864],[5,"Iter",12865],[5,"IterNames",12865],[5,"File",12866],[5,"Mutex",12867],[6,"MetadataMerge",1285,12802],[5,"RwLock",12818],[5,"ObjectArray",1571,12780],[6,"ArrowDataType",2039,12868],[10,"Any",12840],[10,"Debug",12805],[5,"BitmapIter",12869],[6,"ZipValidity",12870],[5,"ObjectChunkedBuilder",1648,12871],[10,"AnonymousObjectBuilder",1672,12872],[5,"ObjectRegistry",1672,12872],[10,"ChunkAgg",1701,12873],[17,"FuncRet"],[10,"ChunkApply",1701,12873],[10,"ChunkApplyKernel",1701,12873],[10,"ChunkApproxNUnique",1701,12873],[10,"ChunkSort",1701,12873],[10,"ChunkUnique",1701,12873],[10,"ChunkCast",1701,12873],[6,"FillNullStrategy",1701,12873],[10,"ChunkCompareEq",12156,12873],[10,"ChunkExplode",1701,12873],[10,"ChunkFillNullValue",1701,12873],[10,"ChunkFilter",1701,12873],[10,"ChunkFull",1701,12873],[10,"ChunkFullNull",1701,12873],[10,"ChunkAnyValue",1701,12873],[10,"ChunkCompareIneq",1701,12873],[10,"IsFirstDistinct",1701,12873],[10,"IsLastDistinct",1701,12873],[10,"ChunkQuantile",1701,12873],[10,"ChunkExpandAtIndex",1701,12873],[10,"Reinterpret",1701,12873],[10,"ChunkReverse",1701,12873],[10,"ChunkRollApply",1701,12873],[10,"ChunkSet",1701,12873],[10,"ChunkShift",1701,12873],[10,"ChunkShiftFill",1701,12873],[10,"SlicedArray",1701,12874],[10,"ChunkVar",1701,12873],[10,"ChunkTake",1701,12873],[10,"ChunkTakeUnchecked",1701,12873],[10,"ChunkBytes",1701,12873],[10,"ChunkZip",1701,12873],[10,"BinaryFnMut",1921,12875],[10,"StaticArray",2039,12876],[10,"TernaryFnMut",1921,12875],[10,"Error",12877],[10,"UnaryFnMut",1921,12875],[5,"PrimitiveArray",12878],[5,"RowsEncoded",12879],[6,"SearchSortedSide",1971,12880],[5,"NoNull",4741,12881],[5,"NaiveDateTime",12882],[6,"Tz",12883],[5,"NaiveTime",12884],[5,"CategoricalChunked",2039,12885],[5,"CategoricalChunkedBuilder",2039,12886],[10,"ArrayFromIter",2039,12887],[10,"ArrayFromIterDtype",2039,12887],[5,"OsStr",12888],[5,"Path",12889],[10,"AsRefDataType",2039,12791],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",12890],[10,"From",12807],[5,"BinaryViewArrayGeneric",12851],[6,"RevMapping",2039,12891],[10,"CategoricalMergeOperation",2039,12892],[10,"LogicalType",2039,12819],[6,"CategoricalOrdering",2039,12891],[5,"OwnedObject",2039,12816],[6,"UnknownKind",2039,12791],[5,"CompatLevel",2039,12791],[5,"CategoricalType",2039,12770],[5,"Dimension",2039,12893],[6,"ReshapeDimension",2039,12893],[6,"ArrowTimeUnit",2039],[6,"Ordering",12894],[10,"ArrayCollectIterExt",2039,12887],[5,"GlobalRevMapMerger",2039,12892],[1,"char"],[10,"FromIterator",12806],[10,"Into",12807],[10,"NumericNative",2039,12770],[6,"SerializableDataType",12895],[5,"ArrowField",4741],[6,"PrimitiveType",12896],[6,"IntegerType",12897],[5,"TimeDelta",12898],[5,"NaiveDate",12899],[10,"GetAnyValue",2039,12816],[10,"IntoScalar",2039,12900],[5,"CatIter",2039,12885],[6,"Expr",4741,12901],[1,"u128"],[6,"PhysicalType",12897],[6,"ToCompactStringError",12801],[5,"Arguments",12805],[5,"StringCacheHolder",3625,12902],[5,"EnumChunkedBuilder",3644,12903],[5,"ErrString",3664,12772],[6,"PolarsWarning",3664,12904],[6,"Error",12905],[5,"Utf8Error",12906],[6,"Error",12907],[5,"Error",12908],[5,"Error",12909],[5,"TryReserveError",12910],[6,"ParquetError",12911],[10,"Display",12805],[5,"Schema",12912],[5,"RecordBatchT",12913],[10,"IntoColumn",4058,12794],[6,"NullStrategy",3765,12841],[6,"UniqueKeepStrategy",3765,12841],[5,"HashSet",12914],[5,"Row",4629,12915],[5,"GroupBy",4372,12916],[5,"DynamicGroupOptions",4741,12917],[5,"RangeTo",12827],[5,"RangeFull",12827],[5,"RangeToInclusive",12827],[5,"RangeFrom",12827],[5,"RangeInclusive",12827],[5,"RecordBatchIter",3765,12841],[5,"PhysRecordBatchIter",3765,12841],[5,"LazyFrame",4741,12918],[10,"IntoSeries",12156,12919],[5,"RollingGroupOptions",4741,12917],[10,"RangeBounds",12827],[10,"IntoVec",4741,12881],[6,"IndexOrder",4741,12920],[5,"StructArray",4741,12921],[5,"Duration",4741,12922],[5,"ScalarColumn",4058,12923],[5,"PartitionedColumn",12924],[6,"BitRepr",12156,12821],[5,"UnpivotArgsIR",4341,12925],[5,"GroupsIdx",4372,12779],[5,"UnitVec",12926],[6,"GroupByMethod",4372,12916],[5,"SlicedGroups",4372,12779],[5,"GroupsProxyParIter",4372,12779],[10,"UnindexedConsumer",12927],[6,"GroupsIndicator",4372,12779],[6,"IRAggExpr",12928],[10,"IntoGroupsProxy",4372,12929],[5,"Copied",12930],[5,"Zip",12931],[5,"GroupsProxyIter",4372,12779],[6,"RollingFnParams",4741,12932],[10,"IsFloat",12933],[10,"NativeType",12934],[10,"AggList",4613,12935],[10,"TakeExtremum",4613,12936],[10,"PhysicalAggExpr",4626,12937],[6,"AnyValueBuffer",4629,12938],[6,"AnyValueBufferTrusted",4629,12938],[5,"Node",12939],[6,"IR",12940],[5,"Arena",12939],[6,"AExpr",12928],[10,"JoinDispatch",4741,12941],[5,"JoinArgs",4741,12942],[5,"StructNameSpace",4741,12943],[10,"SeriesTrait",12156,12821],[10,"TakeChunkedHorPar",4741,12944],[10,"DataFrameOps",4741,12945],[5,"CsvReader",4741,12946],[10,"PhysicalIoExpr",12947],[10,"MmapBytesReader",12948],[10,"LhsNumOps",12663,12778],[6,"Selector",4741,12949],[10,"NumOpsDispatch",12663,12778],[5,"LazyGroupBy",4741,12918],[5,"OptFlags",4741,12950],[10,"Allocator",12951],[5,"JoinBuilder",4741,12918],[10,"AnonymousScan",4741,12952],[5,"ScanArgsAnonymous",4741,12953],[10,"FunctionOutputField",4741,12954],[5,"SpecialEq",4741,12954],[6,"VisitRecursion",12955],[6,"FunctionExpr",4741,12956],[10,"ArgAgg",4741,12957],[5,"ArrayNameSpace",4741,12958],[5,"ListNameSpace",4741,12959],[5,"FieldsMapper",4741,12960],[5,"IpcStreamReader",4741,12961],[10,"Read",12962],[10,"ColumnsUdf",4741,12954],[5,"DynamicDataProviderAnyMarkerWrap",12963],[10,"AsBinary",4741,12964],[10,"StringMethods",10907,12965],[5,"DowncastingAnyProvider",12963],[5,"BorrowedFd",12966],[10,"AsFd",12966],[10,"AsList",4741,12967],[10,"AsRawFd",12968],[6,"AggExpr",4741,12901],[10,"SeriesSealed",4741,12969],[10,"AsString",4741,12970],[20,"MaybeUninit",12971],[10,"StringNameSpaceImpl",4741,12972],[5,"OwnedBatchedCsvReader",4741,12973],[5,"CsvWriter",4741,12974],[5,"BatchedWriter",12974],[10,"Write",12962],[5,"IpcWriter",4741,12975],[5,"BatchedWriter",12975],[5,"ParquetReader",4741,12976],[5,"BatchedParquetReader",4741,12977],[5,"ParquetAsyncReader",4741,12976],[5,"ParquetWriter",4741,12978],[5,"BatchedWriter",12979],[5,"BatchedCsvReader",4741,12973],[5,"BinaryNameSpace",10730,12980],[6,"Operator",4741,12901],[5,"DataKey",12981],[10,"DataMarker",12982],[10,"BoundDataProvider",12983],[10,"RenameAliasFn",4741,12954],[10,"Service",12984],[5,"Request",12985],[5,"UserDefinedFunction",4741,12986],[10,"ColumnBinaryUdf",4741,12954],[5,"InProcessQuery",4741,12987],[5,"HashMap",12988],[5,"CategoricalNameSpace",4741,12989],[10,"RoundSeries",4741,12990],[10,"TemporalMethods",12042,12991],[10,"NumOpsDispatchChecked",12734,12797],[5,"LazyCsvReader",4741,12992],[5,"ScanArgsIpc",4741,12993],[5,"LazyJsonLineReader",4741,12994],[5,"ScanArgsParquet",4741,12995],[5,"RollingOptionsDynamicWindow",4741,12996],[5,"Bounds",4741,12997],[6,"ClosedWindow",4741,12998],[6,"Label",4741,12998],[6,"StartBy",4741,12998],[5,"Window",4741,12999],[6,"JoinCoalesce",4741,12942],[6,"JoinType",4741,12942],[6,"JoinValidation",4741,12942],[5,"AsOfOptions",4741,13000],[6,"AsofStrategy",4741,13000],[6,"InequalityOperator",4741,13001],[5,"IEJoinOptions",4741,13001],[6,"InterpolationMethod",4741,13002],[6,"ClosedInterval",4741,13003],[6,"RankMethod",4741,13004],[5,"RankOptions",4741,13004],[5,"CsvReadOptions",4741,13005],[5,"CsvParseOptions",4741,13005],[6,"CsvEncoding",4741,13005],[6,"CommentPrefix",4741,13005],[6,"NullValues",4741,13005],[5,"CsvWriterOptions",4741,13006],[5,"When",4741,13007],[5,"Then",4741,13007],[5,"ChainedWhen",4741,13007],[5,"ChainedThen",4741,13007],[5,"SerializeOptions",4741,13006],[6,"QuoteStyle",4741,13006],[5,"IpcScanOptions",4741,13008],[5,"IpcReadOptions",4741,13009],[5,"IpcWriterOptions",4741,12975],[6,"IpcCompression",4741,12975],[5,"JsonWriterOptions",4741,13010],[5,"ParquetOptions",4741,13011],[5,"StatisticsOptions",4741,13012],[6,"ParallelStrategy",4741,13011],[6,"LazySerde",4741,12901],[5,"ParquetWriteOptions",4741,13013],[6,"Excluded",4741,12901],[6,"ParquetCompression",4741,13013],[5,"GzipLevel",4741,13013],[5,"BrotliLevel",4741,13013],[5,"ZstdLevel",4741,13013],[5,"FileMetadata",4741,13014],[6,"BooleanFunction",4741,13015],[6,"CategoricalFunction",4741,13016],[6,"TemporalFunction",4741,13017],[6,"PowFunction",4741,13018],[6,"StringFunction",4741,13019],[6,"StructFunction",4741,13020],[5,"DatetimeArgs",4741,13021],[5,"DurationArgs",4741,13021],[5,"RollingCovOptions",4741,13022],[5,"StrptimeOptions",4741,13022],[5,"JoinOptions",4741,13022],[6,"WindowType",4741,13022],[6,"WindowMapping",4741,13022],[6,"NestedType",4741,13022],[5,"UnpivotArgsDSL",4741,13022],[6,"LiteralValue",4741,13023],[5,"AnonymousScanOptions",4741,13024],[5,"UnionArgs",4741,13024],[6,"DslPlan",4741,13025],[5,"RollingVarParams",4741,12932],[5,"RollingQuantileParams",4741,12932],[6,"NonExistent",4741,13026],[5,"Id",13027],[10,"Subscriber",13028],[10,"LazyFileListReader",4741,13029],[5,"CloudOptions",11044,13030],[10,"Ord",12894],[6,"ColumnOrder",13031],[6,"NullValuesCompiled",10597,13005],[10,"BinaryNameSpaceImpl",4741,13032],[10,"ObjectStore",12905],[5,"Path",13033],[10,"Future",13034],[5,"Pin",13035],[5,"JsonLineReader",4741,13036],[5,"IpcReaderAsync",4741,13009],[5,"FileMetadata",13037],[5,"RowGroupMetadata",13038],[10,"CrossJoin",4741,13039],[10,"ExprEvalExtension",4741,13040],[5,"Current",13027],[10,"DateMethods",10907,13041],[10,"DatetimeMethods",10907,13042],[10,"DurationMethods",10907,13043],[5,"IpcStreamWriterOption",4741,12961],[10,"BinaryUdfOutputField",4741,12954],[5,"CStr",13044],[10,"Default",13045],[10,"Stream",13046],[5,"ParquetStatistics",4741],[5,"ColumnChunkMetadata",13047],[10,"Deserialize",12856],[6,"NullBehavior",12740,13048],[5,"Weak",12826],[5,"DateLikeNameSpace",11588,13049],[5,"Metadata",13050],[10,"SeriesMethods",4741,13051],[10,"PartialEq",12894],[10,"Scalar",13052],[10,"ListNameSpaceExtension",4741,13053],[5,"Event",13054],[10,"Command",13055],[5,"PathBuf",12889],[10,"SerReader",4741,13056],[10,"SerWriter",4741,13056],[5,"IpcReader",4741,13008],[5,"IpcStreamWriter",4741,12961],[5,"JsonWriter",4741,13010],[5,"JsonReader",4741,13010],[10,"UdfSchema",4741,13057],[5,"MutableStatistics",13058],[6,"RangeFunction",13059],[6,"BinaryFunction",13060],[6,"ListFunction",13061],[6,"ArrayFunction",13062],[5,"CString",13063],[1,"never"],[5,"OsString",12888],[10,"ToOwned",12787],[5,"GrowableStruct",13064],[10,"SchemaExt",4741,13065],[10,"FromData",11582,13066],[5,"Buffer",13067],[10,"FromDataUtf8",11582,13066],[10,"FromDataBinary",11582,13066],[5,"ListArray",13068],[6,"Ambiguous",4741,13026],[10,"NamedFromOwned",4741,13069],[10,"DataFrameJoinOps",4741,13070],[5,"FunctionOptions",13024],[10,"PartialOrd",12894],[6,"Context",13025],[5,"GetOptions",12905],[5,"BoundsIter",4741,12999],[6,"ReaderBytes",12948],[10,"PolarsTemporalGroupby",4741,12917],[10,"Hash",12857],[10,"SeriesJoin",4741,13071],[10,"TimeMethods",10907,13072],[5,"NonZero",13073],[10,"IntoListNameSpace",4741,13053],[5,"BatchedParquetIter",12977],[5,"StructValueIter",13074],[17,"DataType"],[10,"SchemaNamesAndDtypes",4741,13065],[10,"AsofJoinBy",4741,13075],[10,"ListNameSpaceImpl",4741,13076],[5,"ExprNameNameSpace",4741,13077],[5,"KeyValue",13078],[10,"IntoLazy",4741,12918],[10,"Literal",4741,13023],[5,"Null",4741,13023],[5,"DataRequest",13079],[5,"DataResponse",13080],[5,"DataError",13081],[10,"KeyedDataMarker",12982],[10,"DataProvider",12983],[5,"AnyResponse",12963],[10,"AnyProvider",12963],[5,"BufferMarker",13082],[10,"BufferProvider",13082],[10,"DynamicDataProvider",12983],[10,"CloneToUninit",12814],[5,"SuperTypeOptions",13083],[5,"RowIndex",13084],[5,"LevelFilter",13050],[10,"ChunkAggSeries",4741,13085],[10,"QuantileAggSeries",4741,13086],[10,"IndexToUsize",4741,13087],[10,"NamedFrom",4741,13069],[6,"RowGroupFetcher",12977],[5,"Attributes",13027],[6,"ScanSources",13088],[5,"SplitNChars",4741,13089],[5,"AnonymousScanArgs",4741,12952],[5,"Request",12877],[5,"PutPayload",13090],[5,"PutMultipartOpts",12905],[5,"PutOptions",12905],[10,"SeriesRank",4741,13004],[5,"BorrowedCursor",13091],[10,"VarInt",13092],[5,"IoSliceMut",12962],[5,"Record",13027],[5,"Interest",13028],[10,"SeriesOpsTime",10907,13093],[10,"PolarsRound",4741,13094],[10,"ChunkedSet",4741,12831],[5,"SchemaDescriptor",13095],[6,"SeekFrom",12962],[10,"Serialize",12832],[5,"LocalFutureObj",13096],[5,"SpawnError",13097],[10,"LocalSpawn",13097],[5,"FutureObj",13096],[10,"Spawn",13097],[10,"VarAggSeries",4741,13098],[5,"StringNameSpace",13099],[10,"TakeChunked",4741,12944],[5,"IRPlan",12940],[10,"ToDummies",4741,13100],[10,"PolarsTruncate",4741,13101],[5,"FileMetaData",13078],[5,"AllocError",12951],[5,"SchemaInferenceResult",12009,13102],[10,"PolarsUpsample",4741,13103],[10,"VecHash",4741,13104],[6,"JsonFormat",4741,13010],[5,"BTreeMap",13105],[10,"WriteDataFrameToFile",13056],[10,"Writeable",13106],[10,"Write",12805],[10,"PartsWrite",13106],[5,"IoSlice",12962],[5,"LengthHint",13106],[5,"CountLines",10597,13107],[6,"PrefilterMaskSetting",10640,12977],[5,"MemSlice",13108],[6,"Filter",13109],[10,"ArrayNameSpace",10711,13110],[10,"AsArray",10711,13111],[6,"Buffer",10747,13112],[6,"DynByteSourceBuilder",10825,13113],[6,"DynByteSource",10825,13113],[5,"ObjectStoreByteSource",10825,13113],[5,"MemSliceByteSource",10825,13113],[10,"ByteSource",10825,13113],[10,"AsString",10973,12965],[6,"Pattern",10973,13114],[5,"DatetimeInfer",11013,13115],[10,"StrpTimeParser",11013,13115],[17,"Error"],[10,"TryFromWithUnit",11013,13115],[5,"CloudLocation",11044,13116],[5,"PolarsObjectStore",11044,13117],[5,"File",13118],[5,"CloudWriter",11044,13119],[6,"CloudType",11044,13030],[5,"Url",13120],[5,"Bytes",13121],[10,"TryFrom",12807],[10,"Eq",12894],[5,"ObjectMeta",12905],[6,"PlCredentialProvider",11174,13122],[5,"CredentialProviderFunction",11174,13122],[6,"SupportedCompression",11251,13123],[5,"AnonymousBuilder",11643,13124],[6,"RollingFunction",11889,13125],[6,"RollingFunctionBy",11922,13126],[5,"MutableNullArray",11969,13127],[5,"MutableBitmap",13128],[10,"AsSeries",12042,12991],[5,"Utf8Array",13129],[5,"_SerdeSeries",12794],[5,"SeriesIter",12156,13130],[5,"Rc",13131],[5,"NumericListOp",12663,13132],[5,"NumericFixedSizeListOp",12663,13133],[8,"FillNullLimit",1701],[10,"InitHashMaps",2039],[10,"InitHashMaps2",2039],[5,"TrueT",2039],[8,"PolarsResult",3664],[15,"IO",10577],[15,"Context",10577],[15,"Count",10571],[15,"Slice",10572],[8,"OpaqueColumnUdf",4741],[8,"QuantileInterpolOptions",4741],[8,"ChunkJoinOptIds",4741],[10,"ListFromIter",4741],[15,"Quantile",10453],[15,"Min",10453],[15,"Max",10453],[15,"IsBetween",11842],[15,"Any",11842],[15,"All",11842],[15,"GroupBy",10463],[15,"Union",10463],[15,"Sort",10463],[15,"Scan",10463],[15,"ExtContext",10463],[15,"DataFrameScan",10463],[15,"IR",10463],[15,"Select",10463],[15,"HStack",10463],[15,"MapFunction",10463],[15,"Cache",10463],[15,"Filter",10463],[15,"Distinct",10463],[15,"Slice",10463],[15,"Sink",10463],[15,"Join",10463],[15,"HConcat",10463],[15,"SortBy",10514],[15,"Filter",10514],[15,"Cast",10514],[15,"Sort",10514],[15,"Gather",10514],[15,"RenameAlias",10514],[15,"Ternary",10514],[15,"Function",10514],[15,"Window",10514],[15,"AnonymousFunction",10514],[15,"Slice",10514],[15,"BinaryExpr",10514],[15,"Round",11845],[15,"RoundSF",11845],[15,"Clip",11845],[15,"BackwardFill",11845],[15,"ForwardFill",11845],[15,"Random",11845],[15,"GatherEvery",11845],[15,"ValueCounts",11845],[15,"Rank",11845],[15,"ReplaceStrict",11845],[15,"CumCount",11845],[15,"CumSum",11845],[15,"CumProd",11845],[15,"CumMin",11845],[15,"CumMax",11845],[15,"Range",10574],[15,"ConcatHorizontal",11867],[15,"ConcatVertical",11867],[15,"ExtractGroups",11867],[15,"SplitExact",11867],[15,"Contains",11867],[15,"Find",11867],[15,"Replace",11867],[15,"DatetimeFunction",11881],[5,"Utf8Field",10747],[5,"CategoricalField",10747],[5,"DatetimeField",10747],[15,"Datetime",10822],[6,"ObjectStoreCredential",11174],[10,"Utf8FromIter",12152],[10,"BinaryFromIter",12152]],"r":[[1,13134],[2,13134],[3,13134],[4,13134],[6,12902],[7,13134],[8,13134],[9,13134],[13,13134],[14,13134],[16,12902],[17,12771],[18,12771],[19,12771],[24,13135],[117,12771],[141,12771],[142,12771],[170,12771],[172,12771],[227,12771],[281,12771],[427,12771],[474,12771],[582,12771],[585,12771],[739,12771],[870,12842],[898,12843],[899,12843],[900,12850],[901,12850],[902,12852],[903,12847],[904,12848],[905,12844],[906,12846],[907,12849],[908,12845],[909,12848],[910,12847],[911,12853],[912,12854],[913,12850],[1051,12847],[1067,12846],[1095,12847],[1160,12843],[1161,12843],[1162,12848],[1163,12844],[1164,12846],[1165,12849],[1166,12845],[1167,12848],[1175,12846],[1177,12796],[1208,12858],[1209,12858],[1222,12859],[1224,12860],[1225,12860],[1228,12822],[1229,12822],[1230,12822],[1231,12822],[1267,12822],[1283,13136],[1284,13136],[1290,12825],[1295,12802],[1296,12864],[1297,12863],[1298,12802],[1299,12802],[1300,12802],[1301,12824],[1302,12795],[1571,12780],[1572,12780],[1573,12780],[1574,12780],[1586,12780],[1617,12780],[1618,13137],[1648,12871],[1672,12872],[1673,12872],[1674,12872],[1675,12872],[1688,12872],[1689,12872],[1690,12872],[1693,12872],[1695,12872],[1702,12873],[1703,12873],[1704,12873],[1705,12873],[1706,12873],[1707,12873],[1708,12873],[1709,12873],[1710,12873],[1711,12873],[1712,12873],[1713,12873],[1714,12873],[1715,12873],[1716,12873],[1717,12873],[1718,12873],[1719,12873],[1720,12873],[1721,12873],[1722,12873],[1723,12873],[1724,12873],[1725,12873],[1726,12873],[1727,12873],[1728,12873],[1729,12873],[1730,12873],[1733,12873],[1734,12873],[1744,12873],[1745,12874],[1747,12793],[1748,12793],[1763,12873],[1811,12873],[1814,12873],[1823,12873],[1826,12873],[1870,12873],[1873,12873],[1882,12873],[1919,12873],[1921,12875],[1925,12875],[1926,12875],[1927,12875],[1928,12875],[1929,12875],[1930,12875],[1931,12875],[1932,12875],[1933,12875],[1934,12875],[1935,12875],[1936,12875],[1937,12875],[1938,12875],[1939,12875],[1940,12875],[1941,12875],[1942,12875],[1943,12875],[1944,12875],[1945,12875],[1946,12875],[1947,12875],[1948,12875],[1949,12875],[1950,12875],[1951,12875],[1952,12875],[1953,12875],[1954,12875],[1955,12875],[1956,12875],[1957,13138],[1958,13138],[1959,13139],[1960,13139],[1961,13139],[1962,13140],[1963,13140],[1964,13140],[1965,13140],[1966,13140],[1967,13140],[1968,13140],[1969,13140],[1970,13140],[1974,12880],[1976,12880],[1996,12880],[2003,12874],[2004,13141],[2005,13141],[2006,13141],[2007,13141],[2010,13142],[2011,12874],[2012,12793],[2013,12793],[2026,13143],[2027,13144],[2028,13144],[2029,13144],[2030,13144],[2031,13143],[2032,13143],[2033,13145],[2034,13143],[2035,13144],[2036,13144],[2037,13144],[2038,13144],[2040,12816],[2044,12770],[2045,12887],[2046,12887],[2047,12887],[2048,12868],[2050,12791],[2054,12770],[2056,12770],[2057,12770],[2059,12770],[2064,12770],[2065,12770],[2066,12885],[2069,12885],[2070,12886],[2071,12892],[2072,12891],[2074,12770],[2075,12791],[2076,12791],[2077,12791],[2078,12791],[2083,13146],[2084,12770],[2087,13147],[2089,12770],[2094,13148],[2095,12770],[2097,12893],[2101,13149],[2102,12770],[2109,12770],[2110,12828],[2111,12828],[2114,12770],[2120,12770],[2121,12770],[2125,12770],[2126,12770],[2127,12816],[2129,12892],[2133,13150],[2134,13087],[2135,13150],[2136,13150],[2138,13151],[2139,13150],[2141,12770],[2142,12770],[2146,12770],[2147,12770],[2151,12770],[2152,12770],[2156,12770],[2157,12770],[2161,12770],[2162,12770],[2164,12900],[2175,12770],[2176,12770],[2178,12819],[2179,12819],[2191,12770],[2194,12770],[2196,12770],[2197,12816],[2201,13151],[2202,13151],[2203,13150],[2204,13151],[2205,13151],[2206,13151],[2207,12786],[2208,12770],[2209,12770],[2210,12770],[2211,12770],[2213,12893],[2214,12891],[2217,12876],[2221,12770],[2223,12770],[2228,12770],[2233,13152],[2234,12770],[2235,12820],[2236,12791],[2239,12770],[2243,12770],[2244,12770],[2248,12770],[2249,12770],[2253,12770],[2254,12770],[2258,12770],[2259,12770],[2263,12791],[2446,12892],[2460,12819],[2593,12791],[2783,12819],[3189,12892],[3190,12892],[3196,12791],[3602,12885],[3603,12885],[3604,12886],[3605,12892],[3606,12891],[3608,12892],[3612,12891],[3613,12892],[3615,12892],[3616,12892],[3617,12885],[3618,12885],[3619,12891],[3624,12891],[3625,12902],[3631,12902],[3634,12902],[3642,12902],[3644,12903],[3670,12772],[3677,12772],[3678,12772],[3679,12904],[3696,12772],[3709,12772],[3726,12904],[3733,12772],[3735,12772],[3736,12772],[3737,12772],[3738,12772],[3739,12904],[3740,12772],[3762,13153],[3763,13153],[3764,13153],[3766,12841],[3771,12841],[3772,12841],[3774,12841],[3775,12841],[3819,12841],[3859,12841],[3892,12841],[3965,12841],[4058,12794],[4059,12794],[4062,12923],[4341,12925],[4372,12779],[4375,12916],[4376,12916],[4378,12779],[4379,12779],[4380,12779],[4381,12779],[4382,12779],[4383,12779],[4386,12779],[4388,12929],[4400,12779],[4409,12916],[4480,12916],[4490,12916],[4613,12935],[4614,12936],[4615,12936],[4616,12936],[4617,12936],[4618,12936],[4619,12936],[4620,12936],[4621,12936],[4622,12936],[4626,12937],[4631,12938],[4632,12938],[4652,12915],[4686,12915],[4707,12915],[4721,12915],[4722,12915],[4723,12915],[4739,13154],[4740,13155],[4744,12901],[4751,12950],[4753,13026],[4756,12952],[4757,12952],[4758,13024],[4765,12816],[4767,12826],[4768,12957],[4771,12842],[4776,12770],[4777,12887],[4779,12887],[4780,12887],[4781,12958],[4782,12782],[4783,12868],[4785,13156],[4787,12964],[4788,12967],[4790,13000],[4791,12791],[4792,12970],[4794,13000],[4795,13075],[4796,13000],[4799,13157],[4805,12973],[4806,12977],[4811,12770],[4812,12850],[4815,13032],[4817,12770],[4818,12770],[4820,12770],[4821,12954],[4828,12770],[4829,12852],[4830,13015],[4831,12770],[4832,12779],[4835,12997],[4836,12999],[4838,13013],[4849,12885],[4853,12885],[4854,12886],[4855,13016],[4856,12892],[4857,12989],[4858,12891],[4860,12770],[4864,13007],[4865,13007],[4866,12873],[4867,13085],[4868,12873],[4869,12873],[4870,12873],[4871,12873],[4872,12873],[4873,12873],[4874,12873],[4875,12873],[4876,12873],[4877,12873],[4878,12873],[4879,12873],[4880,12873],[4881,12873],[4882,12833],[4883,12942],[4884,12873],[4885,12873],[4886,12873],[4887,12873],[4888,12873],[4889,12873],[4890,12873],[4891,12873],[4892,12873],[4893,12873],[4894,12873],[4895,12873],[4896,12771],[4897,12847],[4898,12858],[4899,12858],[4900,12831],[4902,13003],[4903,12998],[4906,12794],[4908,12954],[4912,12954],[4914,13005],[4915,12791],[4927,13039],[4928,13005],[4929,13005],[4930,13005],[4931,12946],[4932,12974],[4933,13006],[4940,12791],[4941,12791],[4942,12841],[4943,13070],[4944,12945],[4948,12791],[4956,13146],[4957,13041],[4959,12770],[4963,13021],[4964,13147],[4966,13042],[4968,12770],[4975,13148],[4976,12770],[4982,12893],[4987,13025],[4991,12922],[4997,13021],[4998,13149],[4999,13043],[5000,12770],[5001,12917],[5015,12901],[5019,12901],[5020,13040],[5021,13077],[5030,13157],[5031,13157],[5032,12770],[5033,12828],[5037,12828],[5038,12960],[5039,13077],[5040,13014],[5041,13158],[5043,12873],[5044,12873],[5054,12770],[5062,12770],[5063,12770],[5068,12770],[5069,12770],[5077,13066],[5078,13066],[5079,13066],[5083,12956],[5084,12954],[5088,12816],[5090,12954],[5092,12892],[5093,12916],[5095,12916],[5097,12779],[5098,12779],[5099,12779],[5100,12779],[5101,12779],[5102,12779],[5109,13013],[5120,13150],[5122,13001],[5123,13157],[5129,13087],[5130,13150],[5131,12779],[5132,12833],[5133,13150],[5136,12987],[5138,12920],[5139,13087],[5140,13001],[5142,13151],[5143,13150],[5145,12942],[5148,12770],[5149,12770],[5154,12770],[5155,12770],[5160,12770],[5161,12770],[5166,12770],[5167,12770],[5172,12770],[5173,12770],[5176,13002],[5179,12794],[5180,12929],[5181,12918],[5182,13053],[5183,12900],[5184,12919],[5185,12881],[5187,12975],[5188,13009],[5189,13008],[5190,13009],[5191,13008],[5192,12961],[5193,12961],[5194,12961],[5195,12975],[5196,12975],[5199,12873],[5203,12873],[5218,12942],[5219,12918],[5220,12942],[5221,12941],[5222,13022],[5224,12942],[5225,12942],[5228,13010],[5229,13036],[5231,13010],[5232,13010],[5233,13010],[5237,12998],[5239,13159],[5241,13159],[5242,13159],[5248,12992],[5249,13029],[5250,12918],[5251,12918],[5252,12994],[5253,12901],[5260,12942],[5265,12778],[5272,12848],[5273,12844],[5274,12846],[5275,12770],[5277,13160],[5278,12959],[5279,13053],[5280,13076],[5281,12845],[5282,12848],[5283,12770],[5284,13023],[5286,13023],[5288,12819],[5291,12819],[5344,13023],[5349,13069],[5350,13069],[5363,13022],[5365,12847],[5367,12881],[5368,13026],[5379,13023],[5387,13005],[5388,12833],[5389,12778],[5390,12797],[5391,12770],[5394,12770],[5396,12770],[5401,12901],[5402,12901],[5403,12950],[5412,12973],[5413,12816],[5415,13161],[5418,13011],[5419,12976],[5420,13013],[5421,13011],[5422,12976],[5424,13013],[5425,12978],[5429,13151],[5430,13151],[5431,13150],[5432,13151],[5433,13151],[5434,13151],[5435,12786],[5437,12770],[5438,12772],[5439,12770],[5440,12770],[5441,12822],[5442,12770],[5443,12780],[5444,12772],[5445,13094],[5446,12917],[5447,13101],[5449,13103],[5451,13018],[5454,12854],[5458,13086],[5459,12829],[5460,12829],[5462,13006],[5471,13004],[5472,13004],[5473,12873],[5475,12954],[5484,12893],[5485,12891],[5495,13022],[5498,12932],[5499,12917],[5500,12996],[5501,12830],[5502,12932],[5503,13162],[5504,12932],[5509,12990],[5510,13163],[5518,12823],[5522,12953],[5523,12993],[5524,12995],[5525,13065],[5526,13065],[5529,13065],[5530,13065],[5531,12880],[5535,12949],[5538,13056],[5539,13056],[5540,13006],[5541,12774],[5544,13071],[5545,13051],[5546,13093],[5547,13004],[5548,12969],[5549,12821],[5562,12874],[5563,12779],[5569,12793],[5570,12793],[5571,12954],[5576,13089],[5578,12998],[5580,12876],[5581,13012],[5589,12902],[5591,12770],[5592,12850],[5594,13019],[5595,12965],[5596,12972],[5598,12770],[5605,13022],[5609,12921],[5610,13135],[5613,13020],[5614,12943],[5616,12770],[5626,12944],[5627,12944],[5629,13017],[5630,12991],[5632,13007],[5640,13152],[5641,13072],[5643,12770],[5644,12820],[5645,12791],[5649,13100],[5663,12770],[5670,12770],[5671,12770],[5676,12770],[5677,12770],[5682,12770],[5683,12770],[5688,12770],[5689,12770],[5690,13164],[5691,13057],[5695,13024],[5698,12841],[5701,12791],[5702,13022],[5703,12925],[5706,12986],[5716,13098],[5717,13104],[5721,13007],[5723,12999],[5726,13022],[5727,13022],[5737,13013],[5835,13165],[5838,13166],[5841,13167],[5842,13165],[5853,13168],[5864,12916],[5866,13169],[5869,13170],[5883,13170],[5894,13171],[5900,13172],[5901,13157],[5907,13173],[5920,13174],[5925,13174],[5928,12873],[5938,13175],[5966,13176],[5970,13177],[5974,13178],[5983,13172],[5985,13007],[6259,13166],[6261,13164],[6270,12892],[6275,13177],[6286,13172],[6300,13179],[6303,13180],[6305,13180],[6307,13180],[6605,13181],[6613,13170],[6617,13182],[6618,13169],[6620,13183],[6633,13169],[6638,13157],[6644,13164],[6648,13183],[6650,12969],[6651,13184],[6652,13184],[6655,13183],[6656,13183],[6657,13184],[6658,13184],[6667,13160],[6668,13185],[6676,13186],[6677,13107],[6679,13107],[6680,13186],[6681,12791],[6683,12977],[6688,13187],[6690,13170],[6691,13187],[6693,13187],[6695,13187],[6697,13170],[6698,13187],[6704,13134],[6706,13173],[6707,13175],[6708,13021],[6710,13173],[6711,13173],[6712,13144],[6713,13144],[6714,13144],[6783,13160],[6784,12941],[7059,13058],[7139,13134],[7141,13188],[7294,13189],[7295,13172],[7304,13169],[7305,13169],[7307,13021],[7316,12922],[7317,12922],[7318,13065],[7586,13190],[7587,13190],[7597,13161],[7598,13161],[7599,13161],[7606,12916],[7627,12873],[7665,13172],[7670,13160],[7674,12873],[7679,13191],[7787,12916],[7791,13170],[7795,13184],[8035,12873],[8045,13172],[8047,12873],[8073,13161],[8086,13157],[8088,13144],[8099,12998],[8100,12998],[8185,13192],[8196,13193],[8197,13194],[8198,13194],[8200,13195],[8212,13169],[8215,13087],[8216,13102],[8357,13173],[8358,13173],[8359,13196],[8360,13002],[8362,13196],[8363,13197],[8522,13003],[8524,13161],[8533,13198],[8539,13199],[8542,13200],[8551,13177],[8554,13177],[8561,13185],[8562,13185],[8598,13172],[8607,13186],[8608,13186],[8616,13172],[8630,13023],[8683,12892],[8684,12892],[8689,13171],[8700,13172],[8703,13172],[8712,13201],[8713,13157],[8715,13177],[8727,13177],[8733,13177],[8743,12791],[8754,13177],[8775,13175],[8813,13175],[8824,13202],[8825,13203],[8873,13204],[8898,13177],[8903,13172],[8904,13160],[8941,13157],[8959,12772],[8960,12772],[8961,12772],[8962,12772],[8967,13205],[8968,13070],[8981,13177],[9017,13170],[9025,13010],[9031,13206],[9032,13207],[9034,13208],[9041,13208],[9042,13208],[9044,13194],[9046,13161],[9101,12873],[9140,13166],[9144,12873],[9236,13179],[9291,12873],[9313,13089],[9315,13089],[9338,13192],[9348,13175],[9349,13209],[9351,13209],[9353,13209],[9355,13209],[9357,13209],[9372,13177],[9397,13007],[9401,13173],[9551,13186],[9552,13186],[9870,12977],[10015,13172],[10023,13210],[10043,13160],[10212,13007],[10437,13211],[10451,12873],[10600,13107],[10601,13005],[10607,13212],[10619,13212],[10628,12946],[10629,13212],[10637,13112],[10643,12977],[10646,12977],[10650,13201],[10655,13213],[10657,13214],[10662,12935],[10663,12936],[10664,12936],[10665,12936],[10666,12936],[10667,12936],[10668,12936],[10669,12936],[10670,12936],[10671,12936],[10675,12875],[10679,12875],[10680,12875],[10681,12875],[10682,12875],[10683,12875],[10684,12875],[10685,12875],[10686,12875],[10687,12875],[10688,12875],[10689,12875],[10690,12875],[10691,12875],[10692,12875],[10693,12875],[10694,12875],[10695,12875],[10696,12875],[10697,12875],[10698,12875],[10699,12875],[10700,12875],[10701,12875],[10702,12875],[10703,12875],[10704,12875],[10705,12875],[10706,12875],[10707,12875],[10708,12875],[10709,12875],[10710,12875],[10711,13110],[10712,13111],[10730,12980],[10748,13112],[10750,13112],[10753,13112],[10767,13112],[10799,13112],[10817,13112],[10825,13113],[10827,13113],[10828,13113],[10830,13113],[10833,13113],[10906,12989],[10907,13041],[10908,13042],[10909,13043],[10910,12996],[10911,13093],[10912,12965],[10913,13072],[10966,13215],[10973,12965],[10979,13114],[10980,12965],[11004,12965],[11013,13115],[11015,13115],[11016,13115],[11027,13115],[11046,13116],[11047,13030],[11048,13030],[11049,13119],[11054,13117],[11055,13117],[11070,13216],[11077,13217],[11122,13116],[11140,13216],[11141,13217],[11174,13122],[11176,13122],[11178,13122],[11179,13122],[11243,13030],[11244,13030],[11252,13123],[11264,13123],[11269,13218],[11271,12816],[11275,12770],[11276,12887],[11277,12887],[11278,12887],[11279,12868],[11281,12791],[11285,12770],[11287,12770],[11288,12770],[11290,12770],[11295,12770],[11296,12770],[11297,12885],[11300,12885],[11301,12886],[11302,12892],[11303,12891],[11305,12770],[11306,12791],[11307,12791],[11308,12791],[11309,12791],[11314,13146],[11315,12770],[11318,13147],[11320,12770],[11325,13148],[11326,12770],[11328,12893],[11332,13149],[11333,12770],[11338,12770],[11339,12828],[11340,12828],[11343,12770],[11349,12770],[11350,12770],[11354,12770],[11355,12770],[11356,12816],[11358,12892],[11362,13150],[11363,13087],[11364,13150],[11365,13150],[11367,13151],[11368,13150],[11370,12770],[11371,12770],[11375,12770],[11376,12770],[11380,12770],[11381,12770],[11385,12770],[11386,12770],[11390,12770],[11391,12770],[11393,12900],[11404,12770],[11405,12770],[11407,12819],[11408,12819],[11420,12770],[11423,12770],[11425,12770],[11426,12816],[11430,13151],[11431,13151],[11432,13150],[11433,13151],[11434,13151],[11435,13151],[11436,12786],[11437,12770],[11438,12770],[11439,12770],[11440,12770],[11442,12893],[11443,12891],[11446,12876],[11450,12770],[11452,12770],[11457,12770],[11462,13152],[11463,12770],[11464,12820],[11465,12791],[11468,12770],[11472,12770],[11473,12770],[11477,12770],[11478,12770],[11482,12770],[11483,12770],[11487,12770],[11488,12770],[11492,12791],[11505,12892],[11508,12819],[11513,12791],[11516,12819],[11531,12892],[11532,12892],[11533,12791],[11551,12885],[11552,12885],[11553,12886],[11554,12892],[11555,12891],[11557,12892],[11561,12891],[11562,12892],[11564,12892],[11565,12892],[11566,12885],[11567,12885],[11568,12891],[11573,12891],[11574,12902],[11575,12902],[11576,12902],[11577,12902],[11578,12903],[11579,13194],[11580,13194],[11581,13194],[11582,13066],[11583,13066],[11584,13066],[11588,13049],[11640,12937],[11643,13124],[11663,13138],[11664,13138],[11680,13015],[11683,13016],[11723,12956],[11766,13018],[11799,13019],[11807,13020],[11812,13017],[11838,12956],[11839,12956],[11840,12956],[11841,12956],[11883,13016],[11887,13018],[11893,13125],[11926,13126],[11955,13139],[11956,13139],[11957,13139],[11958,13002],[11961,13002],[11962,13197],[11963,13219],[11964,13220],[11965,13220],[11966,13220],[11967,13220],[11968,13220],[11969,13127],[12000,13140],[12001,13140],[12002,13140],[12003,13140],[12004,13140],[12005,13140],[12006,13140],[12007,13140],[12008,13140],[12009,13102],[12020,13102],[12025,13102],[12026,13102],[12039,12880],[12040,12880],[12041,12880],[12042,12991],[12043,12991],[12064,12874],[12065,13141],[12066,13141],[12067,13141],[12068,13141],[12071,13142],[12072,12874],[12073,12793],[12074,12793],[12087,12970],[12088,13089],[12089,12972],[12099,13190],[12100,13190],[12110,13192],[12118,13089],[12120,13089],[12126,13192],[12132,13209],[12134,13209],[12136,13209],[12138,13209],[12140,13209],[12146,12986],[12152,13221],[12153,13221],[12157,12821],[12158,12873],[12160,12919],[12161,12821],[12165,12774],[12166,13130],[12167,13130],[12168,12821],[12179,12774],[12187,12774],[12387,12774],[12512,12774],[12639,12789],[12640,12789],[12663,12778],[12664,12778],[12665,12778],[12666,13133],[12667,13132],[12671,12778],[12681,12778],[12734,12797],[12735,12797],[12742,13048]],"b":[[29,"impl-Add-for-%26ChunkedArray%3CT%3E"],[30,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[31,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[32,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[33,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[34,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[35,"impl-Add-for-ChunkedArray%3CStringType%3E"],[36,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[37,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[38,"impl-Add-for-ChunkedArray%3CT%3E"],[39,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[40,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[42,"impl-AggList-for-ChunkedArray%3CStructType%3E"],[43,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[44,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[45,"impl-AggList-for-ChunkedArray%3CT%3E"],[46,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[47,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[48,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[49,"impl-AggList-for-ChunkedArray%3CListType%3E"],[52,"impl-ChunkedArray%3CFixedSizeListType%3E"],[53,"impl-ChunkedArray%3CListType%3E"],[54,"impl-ChunkedArray%3CListType%3E"],[55,"impl-ChunkedArray%3CFixedSizeListType%3E"],[59,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[60,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[61,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[62,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[63,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[64,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[66,"impl-ChunkedArray%3CFixedSizeListType%3E"],[67,"impl-ChunkedArray%3CListType%3E"],[69,"impl-ChunkedArray%3CFloat32Type%3E"],[70,"impl-ChunkedArray%3CFloat64Type%3E"],[73,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[74,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[75,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[76,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[77,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[78,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[79,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[80,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[81,"impl-ChunkedArray%3CT%3E"],[82,"impl-ChunkedArray%3CStringType%3E"],[83,"impl-ChunkedArray%3CBinaryType%3E"],[85,"impl-ChunkedArray%3CFixedSizeListType%3E"],[86,"impl-ChunkedArray%3CListType%3E"],[87,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[88,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[89,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[90,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[91,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[92,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[93,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[94,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[95,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[96,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[97,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[98,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[101,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[102,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[103,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[104,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[105,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[106,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[107,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[108,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[109,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[110,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[111,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[112,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[113,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[114,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[115,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[116,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[119,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[120,"impl-ChunkedArray%3CStringType%3E"],[124,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[125,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[127,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[128,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[129,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[130,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[131,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[132,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[133,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[134,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[135,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[145,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[146,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[147,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[148,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[149,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[150,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[151,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[152,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[153,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[154,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[155,"impl-ChunkedArray%3CStructType%3E"],[156,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[157,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[158,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[159,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[162,"impl-ChunkedArray%3CT%3E"],[163,"impl-Container-for-ChunkedArray%3CT%3E"],[183,"impl-Div-for-%26ChunkedArray%3CT%3E"],[184,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[185,"impl-Div-for-ChunkedArray%3CT%3E"],[186,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[193,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[194,"impl-ChunkCompareEq%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[195,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[196,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[197,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[198,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[199,"impl-ChunkCompareEq%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[200,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[201,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[202,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[203,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[204,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[205,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[206,"impl-ChunkCompareEq%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[207,"impl-ChunkCompareEq%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[208,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[209,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[210,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[211,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[212,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[213,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[214,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[218,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[219,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[220,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[221,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[222,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[223,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[224,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[228,"impl-Debug-for-ChunkedArray%3CListType%3E"],[229,"impl-Debug-for-ChunkedArray%3CT%3E"],[230,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[231,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[232,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[233,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[234,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[236,"impl-ChunkedArray%3CFixedSizeListType%3E"],[237,"impl-ChunkedArray%3CListType%3E"],[246,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[247,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[248,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[249,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[250,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[251,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[252,"impl-FromIterator%3COption%3CColumn%3E%3E-for-ChunkedArray%3CListType%3E"],[253,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[254,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[255,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[256,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[257,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[258,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[259,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[260,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[261,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[262,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[263,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[264,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[265,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[266,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[267,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[268,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[269,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[270,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[271,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[272,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[273,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[274,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[275,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[276,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[277,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[278,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[279,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[280,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[282,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[283,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[284,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[285,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[286,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[287,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[288,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[289,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[292,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[293,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[294,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[295,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[296,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[297,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[298,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[299,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[300,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[301,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[302,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[303,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[306,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[307,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[308,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[309,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[310,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[311,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[312,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[313,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[314,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[315,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[316,"impl-ChunkFullNull-for-ChunkedArray%3CStructType%3E"],[317,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[318,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[319,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[320,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[321,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[322,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[324,"impl-ChunkedArray%3CListType%3E"],[325,"impl-ChunkedArray%3CFixedSizeListType%3E"],[327,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[328,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[329,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[330,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[331,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[332,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[333,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[334,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[335,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[336,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[337,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[338,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[339,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[340,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[341,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[342,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[343,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[344,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[345,"impl-ChunkedArray%3CFixedSizeListType%3E"],[346,"impl-ChunkedArray%3CListType%3E"],[350,"impl-ChunkedArray%3CListType%3E"],[351,"impl-ChunkedArray%3CFixedSizeListType%3E"],[360,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[361,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[362,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[363,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[364,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[365,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[366,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[367,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[368,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[369,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[370,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[371,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[373,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[374,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[375,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[376,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[377,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[378,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[379,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[380,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[381,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[382,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[383,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[384,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[385,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[386,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[392,"impl-ChunkedArray%3CFixedSizeListType%3E"],[393,"impl-ChunkedArray%3CListType%3E"],[403,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[404,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[405,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[406,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[407,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[408,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[409,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[410,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[412,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[413,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[432,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[435,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[436,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[437,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[438,"impl-ChunkedArray%3CT%3E"],[439,"impl-Container-for-ChunkedArray%3CT%3E"],[444,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[445,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[446,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[447,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[448,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[449,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[450,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[451,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[452,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[453,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[454,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[455,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[456,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[457,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[458,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[459,"impl-ChunkedArray%3CBooleanType%3E"],[461,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[462,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[463,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[464,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[465,"impl-ChunkedArray%3CBooleanType%3E"],[466,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[467,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[468,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[469,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[470,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[471,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[472,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[480,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[481,"impl-ChunkedArray%3CBooleanType%3E"],[484,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[485,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[486,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[487,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[488,"impl-ChunkedArray%3CT%3E"],[489,"impl-ChunkedArray%3CBooleanType%3E"],[490,"impl-Mul-for-ChunkedArray%3CT%3E"],[491,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[492,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[493,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[496,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[497,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[498,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[500,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[501,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[502,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[503,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[504,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[505,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[506,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[507,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[508,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[509,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[510,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[511,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[512,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[513,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[514,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[515,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[516,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[517,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[518,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[519,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[520,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[521,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[522,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[523,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[524,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[525,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[526,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[527,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[528,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[529,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[530,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[531,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[532,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[533,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[534,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[535,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[536,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[537,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[538,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[539,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[540,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[541,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[543,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[544,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[545,"impl-ChunkExpandAtIndex%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[546,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[547,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[548,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[549,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[550,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[551,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[557,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[558,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[559,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[560,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[561,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[562,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[563,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[564,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[565,"impl-ChunkCompareEq%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[566,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[567,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[568,"impl-ChunkCompareEq%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[569,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[570,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[571,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[572,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[573,"impl-ChunkCompareEq%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[574,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[575,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[576,"impl-ChunkCompareEq%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[577,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[578,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[583,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[584,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[586,"impl-ChunkedArray%3CStringType%3E"],[587,"impl-ChunkedArray%3CListType%3E"],[588,"impl-ChunkedArray%3CListType%3E"],[589,"impl-ChunkedArray%3CStringType%3E"],[592,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[593,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[594,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[595,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[596,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[597,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[606,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[607,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[608,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[609,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[610,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[611,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[612,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[613,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[614,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[615,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[616,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[617,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[618,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[619,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[620,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[621,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[622,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[623,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[624,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[625,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[626,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[627,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[628,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[629,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[630,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[631,"impl-Rem-for-ChunkedArray%3CT%3E"],[634,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[635,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[636,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[637,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[638,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[639,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[640,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[641,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[646,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[647,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[648,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-%26mut+ChunkedArray%3CT%3E"],[649,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[650,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[651,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[652,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[653,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[654,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[655,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[656,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[657,"impl-Serialize-for-ChunkedArray%3CFixedSizeListType%3E"],[658,"impl-Serialize-for-ChunkedArray%3CBinaryType%3E"],[659,"impl-Serialize-for-ChunkedArray%3CListType%3E"],[660,"impl-Serialize-for-ChunkedArray%3CBooleanType%3E"],[661,"impl-Serialize-for-ChunkedArray%3CStructType%3E"],[662,"impl-Serialize-for-ChunkedArray%3CT%3E"],[663,"impl-Serialize-for-ChunkedArray%3CStringType%3E"],[664,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[665,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[666,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[667,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[673,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[674,"impl-ChunkShift%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[675,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[676,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[677,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[678,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[679,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[680,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[681,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[682,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[683,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[684,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[685,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[686,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[687,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[688,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[689,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[691,"impl-ChunkedArray%3CT%3E"],[692,"impl-Container-for-ChunkedArray%3CT%3E"],[693,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[694,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[695,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[696,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[697,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[698,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[699,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[700,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[701,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[702,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[703,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[704,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[705,"impl-ChunkedArray%3CT%3E"],[706,"impl-Container-for-ChunkedArray%3CT%3E"],[708,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[709,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[710,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[712,"impl-Sub-for-ChunkedArray%3CT%3E"],[713,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[714,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[715,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[717,"impl-ChunkedArray%3CBooleanType%3E"],[718,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[719,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[720,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[721,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[723,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[724,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[727,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[728,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[729,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStructType%3E"],[730,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStructType%3E"],[731,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[732,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[733,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[734,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CListType%3E"],[735,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CListType%3E"],[736,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[737,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[738,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[743,"impl-ChunkedArray%3CFixedSizeListType%3E"],[744,"impl-ChunkedArray%3CListType%3E"],[745,"impl-ChunkedArray%3CListType%3E"],[746,"impl-ChunkedArray%3CT%3E"],[751,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[752,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[753,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[754,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[755,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[756,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[758,"impl-ChunkedArray%3CFixedSizeListType%3E"],[759,"impl-ChunkedArray%3CListType%3E"],[773,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[774,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[775,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[776,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[777,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[783,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[784,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[785,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[786,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[787,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[788,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[789,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[790,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[791,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[792,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[793,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[794,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[795,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[796,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[797,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[798,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[799,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[800,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[801,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[802,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[803,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[804,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[805,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[806,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[807,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[808,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[809,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[810,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[811,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[812,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[813,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[814,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[815,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[816,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[817,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[829,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[830,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[831,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[832,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[833,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[834,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[835,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[836,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[837,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[838,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[839,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[840,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[841,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[842,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[843,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[844,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[845,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[846,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[847,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[848,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[849,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[850,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[851,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[852,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[853,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[854,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[855,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[856,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[857,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[858,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[859,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[860,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[861,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[862,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[863,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[864,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[868,"impl-ChunkZip%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[869,"impl-ChunkZip%3CT%3E-for-ChunkedArray%3CT%3E"],[1046,"impl-BinViewChunkedBuilder%3Cstr%3E"],[1047,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[1323,"impl-Flags-for-MetadataProperties"],[1324,"impl-MetadataProperties"],[1325,"impl-Flags-for-MetadataFlags"],[1326,"impl-MetadataFlags"],[1390,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1391,"impl-Metadata%3CT%3E"],[1416,"impl-Octal-for-MetadataProperties"],[1417,"impl-Debug-for-MetadataProperties"],[1418,"impl-UpperHex-for-MetadataProperties"],[1419,"impl-LowerHex-for-MetadataProperties"],[1420,"impl-Binary-for-MetadataProperties"],[1421,"impl-Debug-for-MetadataFlags"],[1422,"impl-Binary-for-MetadataFlags"],[1423,"impl-UpperHex-for-MetadataFlags"],[1424,"impl-Octal-for-MetadataFlags"],[1425,"impl-LowerHex-for-MetadataFlags"],[1435,"impl-MetadataProperties"],[1436,"impl-Flags-for-MetadataProperties"],[1437,"impl-MetadataFlags"],[1438,"impl-Flags-for-MetadataFlags"],[1449,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1450,"impl-Metadata%3CT%3E"],[1493,"impl-Metadata%3CT%3E"],[1494,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1498,"impl-Metadata%3CT%3E"],[1499,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1577,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1578,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1613,"impl-ObjectArray%3CT%3E"],[1614,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1629,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1630,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1640,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1641,"impl-ObjectArray%3CT%3E"],[1642,"impl-ObjectArray%3CT%3E"],[1643,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1645,"impl-ObjectArray%3CT%3E"],[1646,"impl-Array-for-ObjectArray%3CT%3E"],[1649,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1650,"impl-ObjectChunkedBuilder%3CT%3E"],[1652,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1653,"impl-ObjectChunkedBuilder%3CT%3E"],[2341,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[2342,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[2343,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[2344,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[2451,"impl-Logical%3CDurationType,+Int64Type%3E"],[2452,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2454,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2455,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2456,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2457,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2458,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2772,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2773,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2774,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2775,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2776,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2788,"impl-PartialEq-for-DataType"],[2789,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2798,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2799,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[2800,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2801,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[2802,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2803,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2842,"impl-Display-for-PlSmallStr"],[2843,"impl-Debug-for-PlSmallStr"],[2847,"impl-Debug-for-AnyValue%3C\'a%3E"],[2848,"impl-Display-for-AnyValue%3C\'_%3E"],[2850,"impl-Display-for-DataType"],[2851,"impl-Debug-for-DataType"],[2854,"impl-Display-for-TimeUnit"],[2855,"impl-Debug-for-TimeUnit"],[2857,"impl-Display-for-ReshapeDimension"],[2858,"impl-Debug-for-ReshapeDimension"],[2861,"impl-From%3C%26String%3E-for-PlSmallStr"],[2863,"impl-From%3C%26str%3E-for-PlSmallStr"],[2864,"impl-From%3CCompactString%3E-for-PlSmallStr"],[2865,"impl-From%3CString%3E-for-PlSmallStr"],[2868,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2870,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2882,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2883,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2884,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2886,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2887,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2889,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2891,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2892,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2893,"impl-From%3CSerializableDataType%3E-for-DataType"],[2895,"impl-From%3C%26ArrowField%3E-for-Field"],[2897,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2924,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2925,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2933,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[2934,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[2935,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[2936,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[2937,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[2938,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[2939,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[2940,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[2960,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2961,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2962,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2963,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2964,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2967,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2968,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2969,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2970,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2971,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[3009,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3010,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3011,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3012,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3013,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3014,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3127,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[3128,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[3129,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[3130,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[3131,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[3183,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3184,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3185,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3186,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3187,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3188,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3227,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3228,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3229,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3230,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3231,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3232,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3233,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3234,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3243,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3244,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3245,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3246,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3247,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3248,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3251,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[3252,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[3274,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[3275,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[3295,"impl-Logical%3CDurationType,+Int64Type%3E"],[3296,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3303,"impl-Logical%3CDateType,+Int32Type%3E"],[3304,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3305,"impl-Logical%3CTimeType,+Int64Type%3E"],[3321,"impl-Logical%3CDurationType,+Int64Type%3E"],[3322,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3375,"impl-Logical%3CTimeType,+Int64Type%3E"],[3376,"impl-Logical%3CDurationType,+Int64Type%3E"],[3377,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3378,"impl-Logical%3CDateType,+Int32Type%3E"],[3384,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[3385,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[3711,"impl-Debug-for-ErrString"],[3712,"impl-Display-for-ErrString"],[3713,"impl-Display-for-PolarsError"],[3714,"impl-Debug-for-PolarsError"],[3718,"impl-From%3CError%3E-for-PolarsError"],[3719,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3720,"impl-From%3CError%3E-for-PolarsError"],[3721,"impl-From%3CError%3E-for-PolarsError"],[3722,"impl-From%3CError%3E-for-PolarsError"],[3723,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3724,"impl-From%3CParquetError%3E-for-PolarsError"],[3869,"impl-Display-for-DataFrame"],[3870,"impl-Debug-for-DataFrame"],[3876,"impl-FromIterator%3CSeries%3E-for-DataFrame"],[3877,"impl-FromIterator%3CColumn%3E-for-DataFrame"],[3903,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3904,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3905,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3906,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3907,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3908,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3909,"impl-Index%3Cusize%3E-for-DataFrame"],[3910,"impl-Index%3C%26str%3E-for-DataFrame"],[3929,"impl-DataFrame"],[3930,"impl-Container-for-DataFrame"],[3989,"impl-DataFrame"],[3990,"impl-Container-for-DataFrame"],[3994,"impl-Container-for-DataFrame"],[3995,"impl-DataFrame"],[4016,"impl-TryExtend%3CRecordBatchT%3CBox%3Cdyn+Array%3E%3E%3E-for-DataFrame"],[4017,"impl-TryExtend%3CResult%3CRecordBatchT%3CBox%3Cdyn+Array%3E%3E,+PolarsError%3E%3E-for-DataFrame"],[4023,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26Schema%3CArrowField%3E)%3E-for-DataFrame"],[4024,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[4066,"impl-Add-for-%26Column"],[4067,"impl-Add%3CT%3E-for-Column"],[4068,"impl-Add%3CT%3E-for-%26Column"],[4069,"impl-Add-for-Column"],[4101,"impl-BitAnd-for-Column"],[4102,"impl-Column"],[4103,"impl-BitAnd-for-%26Column"],[4104,"impl-Column"],[4105,"impl-BitOr-for-%26Column"],[4106,"impl-BitOr-for-Column"],[4107,"impl-BitXor-for-%26Column"],[4108,"impl-BitXor-for-Column"],[4109,"impl-Column"],[4138,"impl-Div%3CT%3E-for-%26Column"],[4139,"impl-Div-for-Column"],[4140,"impl-Div-for-%26Column"],[4141,"impl-Div%3CT%3E-for-Column"],[4167,"impl-From%3CSeries%3E-for-Column"],[4168,"impl-From%3CPartitionedColumn%3E-for-Column"],[4169,"impl-From%3CScalarColumn%3E-for-Column"],[4220,"impl-Mul%3CT%3E-for-%26Column"],[4221,"impl-Mul%3CT%3E-for-Column"],[4222,"impl-Mul-for-%26Column"],[4223,"impl-Mul-for-Column"],[4243,"impl-Rem-for-%26Column"],[4244,"impl-Rem%3CT%3E-for-Column"],[4245,"impl-Rem%3CT%3E-for-%26Column"],[4246,"impl-Rem-for-Column"],[4270,"impl-Sub-for-Column"],[4271,"impl-Sub-for-%26Column"],[4272,"impl-Sub%3CT%3E-for-Column"],[4273,"impl-Sub%3CT%3E-for-%26Column"],[4488,"impl-Debug-for-GroupByMethod"],[4489,"impl-Display-for-GroupByMethod"],[4495,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[4496,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[4530,"impl-IntoIterator-for-GroupsIdx"],[4531,"impl-IntoIterator-for-%26GroupsIdx"],[4533,"impl-IntoParallelIterator-for-GroupsIdx"],[4534,"impl-IntoParallelIterator-for-%26GroupsIdx"],[5931,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[5932,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[5936,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[5937,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[5968,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[5969,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[5991,"impl-Flags-for-OptFlags"],[5992,"impl-OptFlags"],[6760,"impl-Default-for-SpecialEq%3CArc%3Cdyn+ColumnBinaryUdf%3E%3E"],[6761,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[6762,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[6763,"impl-Default-for-Arc%3CCStr%3E"],[6764,"impl-Default-for-Arc%3Cstr%3E"],[6765,"impl-Default-for-Arc%3C%5BT%5D%3E"],[6766,"impl-Default-for-Arc%3CT%3E"],[7102,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7103,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[7104,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[7105,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[7106,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[7351,"impl-Expr"],[7352,"impl-PartialEq-for-Expr"],[7367,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[7368,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[7375,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[7376,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[7377,"impl-PartialEq-for-Arc%3CT,+A%3E"],[7390,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[7391,"impl-PartialEq-for-StructArray"],[7689,"impl-Display-for-Duration"],[7690,"impl-Debug-for-Duration"],[7700,"impl-Display-for-JoinType"],[7701,"impl-Debug-for-JoinType"],[7702,"impl-Debug-for-JoinValidation"],[7703,"impl-Display-for-JoinValidation"],[7720,"impl-Debug-for-Expr"],[7721,"impl-Display-for-Expr"],[7733,"impl-Display-for-Operator"],[7734,"impl-Debug-for-Operator"],[7741,"impl-Display-for-BooleanFunction"],[7742,"impl-Debug-for-BooleanFunction"],[7743,"impl-Display-for-CategoricalFunction"],[7744,"impl-Debug-for-CategoricalFunction"],[7745,"impl-Display-for-TemporalFunction"],[7746,"impl-Debug-for-TemporalFunction"],[7747,"impl-Debug-for-PowFunction"],[7748,"impl-Display-for-PowFunction"],[7749,"impl-Debug-for-Arc%3CT,+A%3E"],[7750,"impl-Pointer-for-Arc%3CT,+A%3E"],[7751,"impl-Display-for-Arc%3CT,+A%3E"],[7752,"impl-Display-for-StringFunction"],[7753,"impl-Debug-for-StringFunction"],[7754,"impl-Display-for-StructFunction"],[7755,"impl-Debug-for-StructFunction"],[7756,"impl-Debug-for-FunctionExpr"],[7757,"impl-Display-for-FunctionExpr"],[7769,"impl-UpperHex-for-OptFlags"],[7770,"impl-Binary-for-OptFlags"],[7771,"impl-Debug-for-OptFlags"],[7772,"impl-LowerHex-for-OptFlags"],[7773,"impl-Octal-for-OptFlags"],[7804,"impl-From%3CDslPlan%3E-for-LazyFrame"],[7806,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[7876,"impl-From%3Ci8%3E-for-Expr"],[7878,"impl-From%3Cu32%3E-for-Expr"],[7879,"impl-From%3Ci16%3E-for-Expr"],[7880,"impl-From%3C%26str%3E-for-Expr"],[7881,"impl-From%3Ci32%3E-for-Expr"],[7882,"impl-From%3Cf64%3E-for-Expr"],[7883,"impl-From%3Cf32%3E-for-Expr"],[7884,"impl-From%3Ci64%3E-for-Expr"],[7885,"impl-From%3Cu8%3E-for-Expr"],[7886,"impl-From%3Cu16%3E-for-Expr"],[7887,"impl-From%3Cbool%3E-for-Expr"],[7888,"impl-From%3Cu64%3E-for-Expr"],[7889,"impl-From%3CAggExpr%3E-for-Expr"],[7907,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7908,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7909,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7910,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7911,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7912,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7913,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7914,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7915,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7916,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7925,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[7926,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[7927,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[7928,"impl-From%3CT%3E-for-Arc%3CT%3E"],[7929,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[7930,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[7933,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[7934,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[7935,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[7936,"impl-From%3CCompactString%3E-for-Arc%3Cstr%3E"],[7937,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[7938,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[7939,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[7940,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[7941,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[7942,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[7945,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[7946,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[7947,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[7949,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[7960,"impl-From%3CString%3E-for-Selector"],[7961,"impl-From%3CPlSmallStr%3E-for-Selector"],[7962,"impl-From%3CExpr%3E-for-Selector"],[7963,"impl-From%3C%26str%3E-for-Selector"],[7976,"impl-From%3Cf32%3E-for-Scalar"],[7977,"impl-From%3Cf64%3E-for-Scalar"],[7979,"impl-From%3Ci16%3E-for-Scalar"],[7980,"impl-From%3Ci64%3E-for-Scalar"],[7981,"impl-From%3CPlSmallStr%3E-for-Scalar"],[7982,"impl-From%3Cu32%3E-for-Scalar"],[7983,"impl-From%3Ci8%3E-for-Scalar"],[7984,"impl-From%3Cu16%3E-for-Scalar"],[7985,"impl-From%3Cbool%3E-for-Scalar"],[7986,"impl-From%3Cu8%3E-for-Scalar"],[7987,"impl-From%3Ci32%3E-for-Scalar"],[7988,"impl-From%3Cu64%3E-for-Scalar"],[7998,"impl-Flags-for-OptFlags"],[7999,"impl-OptFlags"],[8004,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[8005,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[8013,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[8014,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[8027,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[8028,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[9199,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[9200,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[9201,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[9202,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[9203,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[9280,"impl-Array-for-StructArray"],[9281,"impl-StructArray"],[9287,"impl-StructArray"],[9288,"impl-Array-for-StructArray"],[9566,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[9567,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[9571,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[9572,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[10046,"impl-StructArray"],[10047,"impl-Array-for-StructArray"],[10310,"impl-LazyCsvReader"],[10311,"impl-LazyFileListReader-for-LazyCsvReader"],[10312,"impl-LazyJsonLineReader"],[10313,"impl-LazyFileListReader-for-LazyJsonLineReader"],[10359,"impl-LazyFileListReader-for-LazyCsvReader"],[10360,"impl-LazyCsvReader"],[10361,"impl-LazyJsonLineReader"],[10362,"impl-LazyFileListReader-for-LazyJsonLineReader"],[10408,"impl-StructArray"],[10409,"impl-Array-for-StructArray"],[10862,"impl-From%3CMemSlice%3E-for-DynByteSource"],[10863,"impl-From%3CObjectStoreByteSource%3E-for-DynByteSource"],[10864,"impl-From%3CMemSliceByteSource%3E-for-DynByteSource"],[11033,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[11034,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[11039,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[11040,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[11908,"impl-Debug-for-RollingFunction"],[11909,"impl-Display-for-RollingFunction"],[11941,"impl-Debug-for-RollingFunctionBy"],[11942,"impl-Display-for-RollingFunctionBy"],[12175,"impl-Add-for-Series"],[12176,"impl-Add%3CT%3E-for-Series"],[12177,"impl-Add%3CT%3E-for-%26Series"],[12178,"impl-Add-for-%26Series"],[12196,"impl-SeriesSealed-for-Series"],[12197,"impl-AsSeries-for-Series"],[12202,"impl-BitAnd%3CSeries%3E-for-%26Series"],[12203,"impl-BitAnd-for-%26Series"],[12204,"impl-BitAnd%3C%26Series%3E-for-Series"],[12205,"impl-BitAnd-for-Series"],[12206,"impl-BitOr-for-%26Series"],[12207,"impl-BitOr-for-Series"],[12208,"impl-BitOr%3CSeries%3E-for-%26Series"],[12209,"impl-BitOr%3C%26Series%3E-for-Series"],[12210,"impl-BitXor-for-%26Series"],[12211,"impl-BitXor%3CSeries%3E-for-%26Series"],[12212,"impl-BitXor%3C%26Series%3E-for-Series"],[12213,"impl-BitXor-for-Series"],[12261,"impl-Div-for-Series"],[12262,"impl-Div-for-%26Series"],[12263,"impl-Div%3CT%3E-for-Series"],[12264,"impl-Div%3CT%3E-for-%26Series"],[12275,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[12276,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[12277,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[12279,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[12280,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[12281,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[12298,"impl-Debug-for-Series"],[12299,"impl-Display-for-Series"],[12304,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[12305,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[12307,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[12308,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[12309,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[12310,"impl-From%3C_SerdeSeries%3E-for-Series"],[12316,"impl-FromIterator%3C%26i32%3E-for-Series"],[12317,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[12318,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[12319,"impl-FromIterator%3Cu8%3E-for-Series"],[12320,"impl-FromIterator%3C%26u8%3E-for-Series"],[12321,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[12322,"impl-FromIterator%3Cu16%3E-for-Series"],[12323,"impl-FromIterator%3C%26u16%3E-for-Series"],[12324,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[12325,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[12326,"impl-FromIterator%3Cu32%3E-for-Series"],[12327,"impl-FromIterator%3C%26u32%3E-for-Series"],[12328,"impl-FromIterator%3Cf64%3E-for-Series"],[12329,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[12330,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[12331,"impl-FromIterator%3Cu64%3E-for-Series"],[12332,"impl-FromIterator%3C%26u64%3E-for-Series"],[12333,"impl-FromIterator%3Ci64%3E-for-Series"],[12334,"impl-FromIterator%3Ci8%3E-for-Series"],[12335,"impl-FromIterator%3C%26i8%3E-for-Series"],[12336,"impl-FromIterator%3C%26f64%3E-for-Series"],[12337,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[12338,"impl-FromIterator%3Ci16%3E-for-Series"],[12339,"impl-FromIterator%3Cbool%3E-for-Series"],[12340,"impl-FromIterator%3C%26f32%3E-for-Series"],[12341,"impl-FromIterator%3C%26bool%3E-for-Series"],[12342,"impl-FromIterator%3COption%3C%26str%3E%3E-for-Series"],[12343,"impl-FromIterator%3C%26i16%3E-for-Series"],[12344,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[12345,"impl-FromIterator%3C%26str%3E-for-Series"],[12346,"impl-FromIterator%3COption%3CString%3E%3E-for-Series"],[12347,"impl-FromIterator%3Ci32%3E-for-Series"],[12348,"impl-FromIterator%3CString%3E-for-Series"],[12349,"impl-FromIterator%3Cf32%3E-for-Series"],[12350,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[12351,"impl-FromIterator%3C%26i64%3E-for-Series"],[12352,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[12353,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[12354,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[12355,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[12356,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[12357,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[12358,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[12359,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[12360,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[12361,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[12362,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[12363,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[12373,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[12374,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[12375,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[12376,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[12377,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[12378,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[12423,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[12424,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[12425,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[12426,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[12427,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[12428,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[12437,"impl-Mul%3CT%3E-for-%26Series"],[12438,"impl-Mul%3CT%3E-for-Series"],[12439,"impl-Mul-for-Series"],[12440,"impl-Mul-for-%26Series"],[12445,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[12446,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[12447,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[12448,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[12449,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[12450,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[12451,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[12452,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[12453,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[12454,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[12455,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[12456,"impl-NamedFrom%3CT,+T%3E-for-Series"],[12457,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[12458,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[12459,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[12460,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[12461,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[12462,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[12463,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[12464,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[12465,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[12466,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[12467,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[12468,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[12469,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[12470,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[12471,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[12472,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[12473,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[12474,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[12475,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[12476,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[12477,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[12478,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[12479,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[12480,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[12481,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[12482,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[12483,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[12484,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[12485,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[12486,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[12487,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[12488,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[12489,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[12490,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[12491,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[12492,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[12493,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[12494,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[12495,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[12496,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[12497,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[12503,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[12504,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[12505,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[12507,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[12508,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[12509,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[12519,"impl-Rem%3CT%3E-for-%26Series"],[12520,"impl-Rem%3CT%3E-for-Series"],[12521,"impl-Rem-for-%26Series"],[12552,"impl-Sub%3CT%3E-for-Series"],[12553,"impl-Sub-for-Series"],[12554,"impl-Sub%3CT%3E-for-%26Series"],[12555,"impl-Sub-for-%26Series"],[12591,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"],[12592,"impl-TryFrom%3C(PlSmallStr,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[12593,"impl-TryFrom%3C(PlSmallStr,+Box%3Cdyn+Array%3E)%3E-for-Series"],[12594,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAA0AEAAAADkRhBG/EcIRwxHEEcURxhHLEc4R0xHUEfoRVBU=","e":"OzAAAAEAAEsl3QQCAAAABQABAAgAAAALAAIAEAAAABIAAAAUAB4APAAFAEYAAQBJAAsAWAAFAF8ABABlAAcAcAAFAHcAFQCOAAAAkAAAAJIAEACkAAAApwADAKwAAgCzAA0AwgAVANoACADkAAoA8AAAAPIAAQD2AB4AGwEVADMBEwBIAQAASgEUAGIBAQBmAQEAaQELAHYBDQCGAQIAjgERAKEBAwCoAQIArAECALABBgC4AQAAvQEeAOEBBwDrAQgA9QE1AC4CFQBFAgQASwIEAFECBQBbAgIAXwIaAHsCBwCHAhgAogIQALUCDADDAg8A1gIBANoCAQDdAgQA5QIBAOwCAADwAgYA+AIAAPoCAgD+Ag0ADQMAAA8DKAA6AwIAPgMjAGUDNQCcAwgAqQMRAL4DAgDCA1oAKgQSAEgEBwBRBEkAngQPAK8EAQCyBBoAzgQAANEEDgDjBAIA6QQCAO4EHAAMBQkAFwUKACwFAAAuBQAANAUNAEMFDwBXBRMAbQUAAG8FCQB7BQMAgQUBAIUFDQCdBQAAnwUAAKYFBwCvBQcAxAUBAMgFAADLBQMA0wUFANoFBADkBQAA5wULAPoFBAABBg0AEQYGABsGBwAkBgEAKAYXAEEGBwBKBgAATQYAAE8GAgBVBhAAZwYAAGkGAABrBgIAbwYDAHQGAQB3BgcAgAYBAIMGBQCLBgEAjgYAAJAGAQCTBgMAmAYEAJ4GAgCiBgMAqAYAAKsGAQC1BgAAugYAAL0GAQDCBgEAxQYAAMgGAQDRBgAA1wYDAOAGAADkBgYA7gYQAAEHCAAMBwgAFwcDABwHAAAeBwAAIAcAACIHAQAoBwUAMQcCAD0HAQBJBwAASwcBAE4HAQBSBwMAVwcAAFsHAABdBwAAYgcMAHEHAgCABwAAggcHAIsHAQCOBwAAkgcAAJQHAwCZBwEAnAcFAKgHIADKBwEAzgcFANUHAwDrBwQA8QcJAPwHBAADCAIABwgFAA8IAAARCA4AJAgBACgIAAAqCAAALwgBADIIAAA0CAAANggGAD4IAABACAAAQwgBAEcIAABJCAEATAgAAE4IAgBSCA0AYQgAAGMIAQBmCAAAaAgBAGsIAABtCAEAcAgAAHIIAQB1CAMAfAgAAIAIAQCECAAAhwgAAIkIAACLCAMAkAgAAJMICACdCAIAoggDAKcIAACpCAIArggAALAIAgC0CAEAuggDAL8IAQDCCAAAxAgBAMcIAADJCAEAzAgAAM4IAQDRCAAA0wgBANYIAADYCAAA2wgnAAQJAQAHCRUAHgkDACMJbACRCQEAlgmAABgKBgAgCgIAJAqvANUKBQDdCjkAGAsWADALAgA1CwAANwsAAEMLAgBHCwEASgsAAEwLAgBQCwAAUgsBAG0LAQBwCwAAdgsHAIELAACECwIAiAsFAI8LBgCXCwUAngsAAKALHADCCw8A1AsvAAUMAAA0DAkAPwwAAEEMAABDDAIARwwDAEwMAQBRDAAAUwwHAFwMAQBgDAIAZAwAAGYMAwBrDAAAbgwLAHwMAgCCDAAAhQwPAJYMAACZDAsApgwQALgMAgC8DAAAvgwOAM4MAADRDA0A5AwAAOYMAQDsDBEAAA0AAAINAwAIDSMALg0BADQNbACiDTUA2Q0BANwNOwAZDgEAHA4IACYOAAAoDgEAKw4EADEOAQA2DgAAOA4CADwOCgBIDgAASg4EAFEOBABXDgQAXQ4TAHIOEQCGDgcAjw4DAJYOBQCdDhgAuQ4AALwOCwDKDgMAzw4AANEOAADWDgsA4w4JAPAOEgAMDwEAEA8CABQPAAAWDwAAHA8DAC4PAAA1DwAANw8AADkPAQBADwwAUw8CAFsPAABeDwEAZA8AAGwPAQBvDwAAfQ8BAIEPAACIDwAAiw8BAJQPAQCXDwEAmw8AAJ0PAQCnDwAAqQ8EALEPCAC8DwoAyA8AAMsPAQDQDwQA3Q8BAOAPBgD0DwcA/w8CAAMQEgAYEB8AOhALAEgQAgBMEAUAVRAKAGIQAwBnEAkAchACAHcQFACOEA0AnRAZALkQAQC9EAIAwRApAOwQCQD3EA8ACBECAAwRCwAZEQEAHBEDACERAwAmEQkAMREHADoRAQA9ERwAWxEoAIURBgCQEQEAkxEAAJcRAwCdEQAAoREHALERDQDAEQEAxxEDAMwRAQDQEQIA1REAANcRIAD7EQwAChIFABESBwAaEiMAQBIOAFASDwBhEgAAZBIDAGsSBQB1Eg4AhhIGAI8SAACSEgkAnRICAKISBACoEgUArxIAALQSCQC/EgEAwxIFAMoSAADMEgoA2BIAANsSAADdEgkA6BICAPASCQD7EgUABRMAAAgTAQASEwIAGRMAABwTAQAiEwgALBMAAC4TAQAyExEARxMHAFATAQBTEwQAWRMAAF0TBABlEwIAaRMBAHATBAB2EwEAeRMIAIMTAQCHEwMAjBMIAJYTAACYEwIAnRMAAKATAACiEwIApxMCAKsTBQCyEwUAuRMCAL8TAgDFEwAAxxMBAMsTAADNEwQA1BMPAOUTAADoEwEA6xMDAPETBAD5EyUAIRQAACMUAQAnFAAAKRQBAC0UAAAvFAEAMxQAADUUBQA+FAIAQxQAAEUUAABIFAAASxQAAE0UAgBRFAIAVRQLAGMUBwBsFAAAbhQAAHIUAQB2FAAAeBQAAHoUAQB9FAEAgBQBAIUUAQCIFA0AmRQFAKAUBwCqFAIArhQJALwUAQC/FAAAwRQBAMQUBADKFAQA0BQCANQUAADWFAQA3BQAAN4UBgDmFAQA7BQBAO8UAgDzFAEA9hQBAPkUAAD7FAAA/RQAAAAVAgAFFQMAChUGABMVAgAaFQEAHRUGACUVAwArFQAALhUAADEVAAAzFQQAORUCAD0VAAA/FQIAQxUAAEUVBwBOFQgAWRUTAG4VAgByFRUAixUBAI4VDwCgFQAAohUCAKcVDAC1FQMAvBUBAL8VAADBFQAAxRUIAM8VAwDXFQYA3xUJAOsVAwDwFQgA+hUAAPwVAwACFgEABRYAAAkWBQAQFhIAJRYAACcWAQArFgAALRYBADEWAAAzFgEANxYAADkWBABAFgQARhYBAEkWAQBPFgoAWxYAAF4WBgBnFgIAaxZiAM8WAADRFgYA2xYAAN0WAADgFgYA6RYAAPAWAADyFgAA9hYAAPkWAAD+FgUACBcAAAwXAAAOFwAAERcAABMXAAAXFwAAGxcAACcXAgArFwgANRcAADcXAQA6FwMAQhcDAEcXBABNFwEAVRcLAGMXAABoFwAAahcAAG0XBAFzGAMAeBgBAHsYAgB/GAIAhRgAAIkYAACNGAAAjxgAAJEYAACXGAAAmRgBAJwYAACmGEIA6hgcAAgZwgDMGQEA0hkCANgZAgDeGQoA7RkGAPUZAAD7GQAA/RkAAP8ZAAAJGgEADRoCABEaAAAVGgAAFxoAABkaAQAcGgAAIBoBAC4aAQA0GgAAORoCAD8aAABBGgUASRoiAHAaGgGNGwAAkhsBAJUbUQDqGwAA7BsDAPIbAAD1GwgA/xtaAFscHQB+HAIAhBwAAIYcAQCLHAAAjRwAAI8cAwCUHCMAuRwYANMcGADvHLUAph0BAKsdAACtHQAAtB0AALYdAQC5HQAAux0AAL8dAADDHQAAxR0AAMkdAADMHQAAzx0AANYdAADYHQAA2h0BAN8dAADhHQUA6B0CAOwdAADuHQMA9x0AAPkdAAD7HQEAAB5tAHIeAAB9HgAAfx4AAKAeAACoHgAAux4AAMUeAADHHgsA2R4AAOEeAADkHgkA/R4AAAEfAAAKHwIADh8AABUfAAAZHwMAIh8AACYfAAApHwEALB8JAD0fAAA/HwAAQh8AAEUfAQBOHwEAUx8CAFkfBwBiHwIAZh8BAGofAgBuHwAAcB8AAHIfAAB3HwAAeR8AAH4fAACBHwEAhB8DAIkfAACLHwIAkh8HAJ0fAQChHwAArB8AAK4fQwD1HwQA/h8AAAAgAAACIAQACSAAAAsgAAANIAEAECAAABMgAQAYIAAAGyCFAKMgAACoIAEAqyABADEhAQA1IQAANyEHAEIhBQBJIQMATiEDAFQhAABWIQEAWSEAAFshAQBfIQEAZiEAAG0hAABvIQEAdCECAHghAwB+IQEAgSEAAIQhAACGIQAAjSEBAJAhAgCaIQAAnSEBAKAhAgCmIQIArCEBALQhAgC5IQgAxCEBAMghAgDMIQMA0iEOAOYhAADsIQEA8yEAAPYhBQD/IQAAByIEABIiAAAXIgAAISIAACgiAQArIgIALyIAADIiAAA3IgAAOSIAADsiAABAIgAARCIAAEYiAgBNIgYAWiIIAGgiAABqIgAAbiIAAHQiAAB2IgQAfyIBAIIiAQCFIgAAhyIBAIoiAQCNIgUAlCIAAJYiAACYIgAAmiIAAJ4iAACiIgAAqiIAAK0iAQCwIgAAtSIBALsiAQC+IgQAySICANEiAQDWIgAA2SICAN0iBADrIgAA7SIEAPMiBQD6IgAAACMDAAUjAAAHIwAACSMBAA4jAAAQIwAAEiMDACAjAAAjIwEAJiMCACojBAAxIwgAOyMFAEIjAABFIwAARyMAAEkjAABPIwAAVSMBAFsjAABfIwAAYSMAAGMjAQCGIwAAiyMAAI4jAACUIwMAmSMEAKAjAQCrIwAArSMAAK8jBAC1IwQAvSMAAL8jAQDCIwAAxCMAAMYjTwAYJAAAGiQAABwkBAAkJAAALSQAAC8kAAAxJAAAOSQDAEEkAABDJAAARSQAAEckAABJJAAATCQAAE4kAABUJAIAWCQEAF4kBwBnJAAAaiQAAG0kAQBxJAAAdyQAAHskAACBJAAAhSQKAJIkAgCXJAAAmiQCAKUkAQC2JAAAuCQAALskAgC/JAMAxCQCAMgkAADLJAAAzyRiADQlDgBGJQEASyUMAFklAABbJQEAXiWUAPQlgQB5JgAAfCYDAIcmAgCMJhAAniaAACAnAAAqJwAALycAADEnAAAzJwAAOicEAEAnAgBFJwEASScAAE0nAABTJwEAVicAAFgngQDgJwMA6ScAAOwnAADuJwEA8ycBAPgnAQD7JwAAAygAAAcoAQANKAAAEygAAB0oAAAkKAIAMCgEADgoAQBIKAAASigAAE0oAABPKAAAVigAAFgoAQBbKAMAYygAAGUoAABnKAAAcigAAHgoAAB7KAAAfigAAIAoAACCKAEAiCgAAI0oAACZKAAAnSgBAKAoAACiKAEAqigCALAoFQDHKAYA0ygBANYoDQDlKAQA6ygwAB4pAAAgKQAAIikBACUpAQAoKQYAMCk2AGkpFACAKQEAhCkAAIYpFACdKQEAoCkIAKspBQCyKQkAvSkBAMApAADEKQAAxikDAMspAQDOKQUA2CkSAOwpAQDvKQIA9CkAAPgpFgAQKhcALCoEADUqFgBNKgEAUCoAAFIqGgBvKgIAdSoCAHkqCgCIKhIAnCoGALMqAADBKgIA1yoAAN4qCQDsKgAA7ioMAPwqAgAAKxIAFCsBABcrDwApKwAAKysEADErCwA+KwAAQCsgAGMrBQBuKwAAcCsBAHQrAAB2KwQAgCsAAIMrAACGKwAAiisAAIwrFgCkKwIAqSsAAKsrIwDTKwQA2ysQAO0rBwD2KwMA+ysCAP8rAAACLAMABywCAAssBAASLAIAFiwFAB4sAAAgLA4AMywBADcsAAA5LAAAPiwBAEEsAABDLAAARSwEAEssAABNLAAAUCwBAFQsAABWLAEAWSwAAFssAgBfLA0AbiwAAHAsAQBzLAAAdSwBAHgsAAB6LAEAfSwAAH8sAQCCLAMAiSwAAI0sAQCRLAAAlCwAAJYsAACYLAMAnSwAAKAsCACqLAIArywDALQsAAC2LAIAuywAAL0sAgDBLAEAxywDAMwsAQDPLAAA0SwBANQsAADWLAEA2SwAANssAQDeLAAA4CwBAOMsAADlLAAA6CwSAPwsBwAGLQAACS0RABwtCAAmLQEAKS0IADMtAAA1LQEAOy0BAD4tBABHLQEAUC0CAFYtAABYLQAAYi0AAHEtAwB5LQoAhS0AAIctCACSLfQAiC4BAIsuHACpLgEArC4RAMAuEgDULgAA1i4gAPguAQD8LgAA/i4LAAsvAgASLwAAIi8DADgvBQBALwAARC8BAEsvAABNLwEAVC8GAF8vAABlLwoAeS8FAIAvAACCLwMAhy8FAJAvBACXLwIAnC8AAKIvBACrLwsAuC8KAMYvAgDKLwAAzi8CANIvAwDaLxMA8S8BAPUvAQD4LwAA+i8AAP0vAgAKMAMAETABABQwAwAaMAEAHTAwAFAwAABSMAAAVjABAFkwAQBdMAAAYzABAGYwAwBuMAUAezACAH8wAACCMAAAhzABAIowAQCNMAAAkTAAAJYwAwCbMAAAnjARALEwIQDVMAEA2TABAN0wAQDhMAAA4zAAAOcwAwDtMAEA8DAAAPMwBAD7MAEA/jAAAAAxAAACMQAABjEAAAkxAwASMQAAGTEAABwxAQAfMQEALDEHADgxBAA+MQEARDEAAEYxAABLMQMAVTEAAFgxAwBdMQAAYTELAG4xAABwMQAAcjEEAHgxJwCiMQEApjEaAMMxAQDHMRAA2TEBANwxBQA="}],["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCCHCQQQQQQIFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNCCNNNNNNNNNNNNNCNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNCNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFFKFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNCCPTTTTFPPTTFKFFGFGKPTTTPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIKKNNNNNNMNNNNCNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNCHNNNNNNNMNNNNNNNNNMMNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNMHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRRPPPPPPPPPNMMMMMMMNMCNNNMMNNNNNNNMMNMCMMCNNCMMCMMMMNNNNNNMMNNNNNNMMMMNMNCMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHKFFNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNOOOOOONNOOMMNNNNNNNNNNNNNNNNNNNNNNCHHHHHHHHPGPPRIKKKGGKPPPIPIFPFPPPPIFFPPFFKGPFFJJGPPPFPFPPPPIFPFPPFPPPPFFIPPFPPPPPIFPPPIFKPFRRRSIIIPKKPIFPPPIFPPPIFPPPIFPPPIFPKRRRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIIFKKKKRGGPPKPPPIPFPPPPFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNMNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNNNFFFKGPFPPPGNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNFNNNNNNNNNNNNNNNNNGPPPPGFHHHPPPPPPFPPPPPPGIGPPPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHNQQQQHHNNNNNNNNNNOOOOJJJEECEEEEEFKNHHHHHHHHHHNNHHHNNNHHHHHNNNNHHHHNNNNHHHHHNOHHHHHHCHHHHHHHHHNNNNNHHHHHHNOMSSSSSSSSHHHGPPNNNNNNNNNNHHHHHNNHHHHHNNNNNPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGKPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNONNONNNNOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFKSHHHNNHNNNNNNNNNNNNNNNNNNNNNGFEKIFIEEPFFFKGKFEEEEEPPPEPTTPPPPPKKKPFPPPIIGKEEEPIIIPPEPPEEEKEEPPPPPKKPPEPGPPFEKPPPFGEEIEPKIGPPGGFFFPPEPPEEPKFPEPEEPKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHEONNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNMCNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNHNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOOONNONMMNNNNNNNNNNNNNCNNNNNNQQQQONNNNMNNNNNCNCMMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNNOONNNNNNNOOOOKKKMMMFNNNNNNNNNNNNNNNNNNOFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNHRTIKKIHNMNMNMNMNMNMNMNMNPPGEPPKGGPPPFFIKPNNNNNNNNNNCNNNNNNNCNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNMNMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNNNNNNMNNNNNNNMMNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNNNMNNNNNMNNNMNNNNNNNMNNNNNMNNNNMNNNNNNNNNNNNNNNNNMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFINNNNNNNNNNNNNNNNNNNNNNKKKFFRNNMNNMNNNNNNCNNNNNNNNNNMNNMNNNNNNNNNNNNNNMNNMNNMNNMNNMNNMNNNNNNNNNNNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNTTKKKKKFFFFFNNNHHHHHHHNNNHHEHNNNNNNNNNNNNNNNNNNMNNNNNNNNNHHNNNHHNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNOCNNNNNNNNNNNNNNNNNNNMNNNNNNHHHHNNNNNNNNNNNNNNNNNNNMNNNNMNMHHMNNNNNNHENNNMHHHMHNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_dtype_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","scalar","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","_sum_as_f64","add","","","","add_to","agg_list","all","all_kleene","amortized_iter","","amortized_iter_with_name","","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","","apply_amortized_same_type","apply_as_ints","","apply_in_place","apply_into_string_amortized","apply_kernel","apply_kernel_cast","apply_mut","","","apply_nonnull_values_generic","apply_to_inner","","apply_to_slice","apply_values","apply_views","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitor","bitxor","borrow","","borrow_mut","","boxed_metadata_dyn","builder","cast","cast_and_apply_in_place","cast_unchecked","cast_with_options","checked_div","checked_div_num","chunk_lengths","","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","concat_compact","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","","deref_mut","","div","","","","divide","drop","","","drop_nulls","dtype","equal","","equal_missing","","extend","fill_null_with_values","filter","first","first_non_null","float","fmt","","for_each","for_each_amortized","","from","","","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_iter","","","from_iter_options","from_iter_trusted_length","","from_iter_values","from_iterator_par","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","","get","get_any_value","get_any_value_unchecked","get_as_series","","get_distinct_count","get_fast_explode_list","get_flags","get_inner","","get_leaf_array","get_max_value","get_min_value","get_object","get_object_unchecked","get_unchecked","group_tuples","group_tuples_perfect","gt","","gt_eq","","has_nulls","head","init","","init_rand","inner_dtype","","interior_mut_metadata","into","","into_column","into_decimal","into_decimal_unchecked","into_iter","into_no_null_iter","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_validities","iterator","join_compact","last","last_non_null","layout","legacy_div","","legacy_div_scalar","","legacy_div_scalar_lhs","","len","","lhs_div","lhs_rem","lhs_sub","limit","lt","","lt_eq","","max","","max_binary","max_reduce","mean","","median","median_reduce","merge_metadata","metadata","","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","","min_binary","min_max","min_reduce","mmap_slice","","mul","","","","multiply","n_chunks","n_unique","name","new","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not_equal","","not_equal_missing","","null_count","num_falses","num_trues","object","ops","par_iter","","par_iter_indexed","","prod_reduce","prune_empty_chunks","quantile","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","rechunk_and_trim_to_normalized_offsets","rechunk_validity","ref_field","rem","","","","remainder","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","","sort","sort_with","split_at","","std","std_reduce","sub","","","","subtract","sum","","sum_reduce","tail","take","","take_unchecked","","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","","to_ndarray","","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","","true_div_scalar","","true_div_scalar_lhs","","try_apply_amortized","try_apply_amortized_generic","","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_into_string_amortized","try_apply_nonnull_values_generic","try_from","","try_from_chunk_iter","try_into","","try_zip_and_apply_amortized","type_id","","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","vzip","","width","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","","wrapping_add","","wrapping_add_scalar","","wrapping_floor_div","","wrapping_floor_div_scalar","","wrapping_floor_div_scalar_lhs","","wrapping_mod","","wrapping_mod_scalar","","wrapping_mod_scalar_lhs","","wrapping_mul","","wrapping_mul_scalar","","wrapping_neg","","wrapping_sub","","wrapping_sub_scalar","","wrapping_sub_scalar_lhs","","wrapping_trunc_div","","wrapping_trunc_div_scalar","","wrapping_trunc_div_scalar_lhs","","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","","","","append_null","","","","","append_option","","append_value","","","","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","deref","","","","deref_mut","","","","drop","","","","finish","","","","","","","","fixed_size_list","from","","","","from_iter_options","from_iter_values","from_slice","from_slice_options","init","","","","into","","","","list","new","","","","shrink_to_fit","","","","to_owned","","","","try_from","","","","try_into","","","","type_id","","","","vzip","","","","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","","append_iter","","append_null","","","","","","","","append_opt_array","append_opt_series","","append_opt_slice","append_series","","","","","","","","append_slice","append_trusted_len_iter","","append_values_iter","","","append_values_iter_trusted_len","borrow","","","","","","","borrow_mut","","","","","","","builder","default","","deref","","","","","","","deref_mut","","","","","","","drop","","","","","","","fast_explode","","","","","field","","","","","finish","","","","from","","","","","","","get_list_builder","init","","","","","","","inner_array","","","","","into","","","","","","","new","","","","","","","new_with_values_type","try_from","","","","","","","try_into","","","","","","","type_id","","","","","","","vzip","","","","","","","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","borrow","","","borrow_mut","","","deref","","","deref_mut","","","drop","","","from","","","init","","","into","","","into_iter","","","new","","next","","","next_back","","","par","size_hint","","","try_from","","","try_into","","","type_id","","","vzip","","","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","","","","","all","","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","","","","","","borrow_mut","","","","","","","boxed_upcast","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","collect_cheap_metadata","","complement","","contains","","default","","","","deref","","","","","","","","deref_mut","","","","","","","difference","","disabled","distinct_count","","","distinct_count_opt","drop","","","","","","","empty","","enabled","eq","","experimental_enabled","extend","","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","","","","","","","","","","","","from","","","","","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","get_distinct_count","get_fast_explode_list","","get_flags","","","get_max_value","get_min_value","get_mut","get_sorted_flag","init","","","","","","","insert","","intersection","","intersects","","into","","","","","","","into_iter","","is_all","","is_empty","","","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","","iter_names","","log","logfile","max_value","","","max_value_opt","merge","min_value","","","min_value_opt","new","not","","read","remove","","set","","set_distinct_count","set_fast_explode_list","","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","","sorted","sorted_opt","sub","","sub_assign","","symmetric_difference","","take","to_owned","","","","","toggle","","try_from","","","","","","","try_into","","","","","","","try_read","try_write","type_id","","","","","","","union","","upcast","vzip","","","","","","","with_cheap_metadata","","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","eq","equal","fmt","from","","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","","iter","","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","","to_owned","try_arr_from_iter","","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","","validity","value","value_unchecked","","values_iter","","vzip","with_validity","","with_validity_typed","ObjectChunkedBuilder","append_null","","append_option","append_value","","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","get_list_builder","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_list_builder","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompareEq","ChunkCompareIneq","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","","Max","MaxBound","Mean","Min","MinBound","None","One","Some","Zero","__clone_box","_sum_as_f64","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","cast_with_options","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_elementwise","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","row_encode","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","default","","deref","","deref_mut","","descending","","drop","","eq","","equivalent","","","","fmt","","from","","","","hash","","init","","into","","limit","","maintain_order","","multithreaded","","new","","nulls_last","","slice_typed","slice_typed_unchecked","to_owned","","try_from","","try_into","","type_id","","vzip","","with_maintain_order","","with_multithreaded","","with_nulls_last","","with_nulls_last_multi","with_order_descending","","with_order_descending_multi","with_order_reversed","","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","get_strftime_format","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","Any","AnyValue","Array","","","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalOwned","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Dimension","Duration","","DurationType","Enum","","EnumOwned","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","Infer","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","ReshapeDimension","RevMapping","Second","Specified","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_can_fast_explode","add","","","","","","","","","","add_to","","","","","","","","","","","","agg_list","","","","","","all","all_kleene","amortized_iter","","amortized_iter_with_name","","any","any_kleene","apply","","","","","apply_amortized","apply_amortized_generic","","apply_amortized_same_type","apply_as_ints","","apply_kernel","","","apply_kernel_cast","","","apply_mut","","apply_to_inner","","apply_to_slice","","","","","apply_values","","","","","apply_views","arg_sort","","","","arg_sort_multiple","","","","arg_unique","","","","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","array_leaf_dtype","as_binary","as_borrowed","as_ref","","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","","bitor","","bitxor","","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","boxed","call_categorical_merge_operation","can_have_dtype","cast","","","cast_leaf","cast_unchecked","","","","","","cast_with_options","","","","","","","","categorical","checked_div","","","","","","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cmp","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","contains_categoricals","contains_dictionary","contains_objects","contains_views","create_enum_dtype","default","","","","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","div","divide","","","","","","","","","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dtype","","","","","enum_","eq","","","","","","","","","","","eq_missing","equal","","","","","","","equal_missing","","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","explode_and_offsets","","field","fill_null_with_values","","filter","","","finish","fmt","","","","","","","","","","","","","","","","","","","","for_each_amortized","","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_arrow","from_iter","","","","","","","","","","from_iter_options","","","","from_iter_trusted_length","","","","","","","","","","from_iter_values","","","","from_par_iter","","","","","","","from_par_iter_with_dtype","from_slice","","","","from_slice_options","","","","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","","","","","","","","full_null","","","","","","","","full_null_with_dtype","","get","","","get_any_value","","","","","","","","","","get_any_value_unchecked","","","","","","","","","","get_as_series","","get_dtype","","","","","","","","","","","","","","","","","","","","","","","","","get_inner","","get_leaf_array","get_object","get_object_unchecked","get_or_infer","get_or_infer_with","get_shape","get_str","get_unchecked","","get_values_size","","","","group_tuples","","","","","","","gt","","","","","gt_eq","","","","","hash","","","","","","","","hash_impl","idx","implode","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner_dtype","","","","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_column","into_decimal","into_decimal_unchecked","into_iter","","","","","","","into_scalar","into_series","","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_date","is_decimal","is_enum","is_float","","is_integer","","is_known","is_list","is_logical","is_nan","is_nested","","is_nested_null","","is_null","","is_numeric","","","is_object","is_ord","is_primitive","is_signed_integer","","is_string","is_struct","is_supported_list_arithmetic_input","is_temporal","is_unsigned_integer","","is_view","iter","last","leaf_dtype","lt","","","","","lt_eq","","","","","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","materialize_unknown","max","","max_binary","max_reduce","","","mean","median","","median_reduce","","merge_dtypes","min","","min_binary","min_reduce","","","mmap_slice","mul","multiply","","","","","","","","","n_unique","","name","","new","","","","","","","","","","","","","","","","new_dimension","new_empty","new_from_index","","","","","","","new_from_vec","new_from_vec_and_validity","new_logical","newest","not","","not_equal","","","","","","","not_equal_missing","","","","","","","num_falses","num_trues","offsets","","oldest","par_iter","","par_iter_indexed","","partial_cmp","","","physical","precision","","quantile","","quantile_reduce","","rand_bernoulli","rechunk_and_trim_to_normalized_offsets","remainder","","","","","","","","","reverse","","","","","","","revmap","scale","","scatter_single","","","scatter_with","","","set","","","set_fast_explode","set_inner_dtype","set_name","shift","","","","","","","shift_and_fill","","","","","","","sort","","","","sort_with","","","","std_reduce","","str_value","strict_cast","string_cache","sub","subtract","","","","","","","","","sum","sum_reduce","","take_unchecked","","","","","","","","to_arrow","","","to_arrow_field","to_ascii","to_decimal","to_fixed_size_list","to_logical","","to_logical_type","to_ndarray","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_scale","","to_string","","","","to_string_unchecked","tot_eq","try_apply_amortized","try_apply_amortized_generic","","try_apply_amortized_same_type","try_apply_amortized_to_list","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_strict_cast","try_to_arrow","try_to_compact_string","","","","try_zip_and_apply_amortized","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","underlying_physical_type","unique","","","","value","value_unchecked","value_within_range","values_iter","var_reduce","","vec_hash","","","","","","","","","","","","","","","","vec_hash_combine","","","","","","","","","","","","","","","","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","width","with_capacity","","","with_nullable_idx","with_validity_typed","zero_sum","zip_and_apply_amortized","zip_and_apply_amortized_same_type","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","_with_fast_unique","append","","append_null","append_value","arg_sort","borrow","","","","borrow_mut","","","","call_categorical_merge_operation","cast_with_options","clone","clone_into","clone_to_uninit","default","deref","","","","deref_mut","","","","drain_iter_and_finish","drop","","","","dtype","equal","","","equal_missing","","","finish","","","from","","","","from_cats_and_dtype_unchecked","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","","","gt_eq","","","init","","","","into","","","","into_column","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","","","lt_eq","","","make_categoricals_compatible","make_list_categoricals_compatible","max_reduce","merge_map","min_reduce","n_unique","name","new","","next","not_equal","","","not_equal_missing","","","null_count","physical","register_value","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","","","","try_into","","","","type_id","","","","unique","uses_lexical_ordering","value_counts","vzip","","","","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","","borrow","","borrow_mut","","build_local","clone","","clone_into","","clone_to_uninit","","default","","deref","","deref_mut","","drop","","eq","find","fmt","","from","","get","get_categories","get_optional","init","","into","","is_global","is_local","len","same_src","to_owned","","try_from","","try_into","","type_id","","vzip","","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","EnumChunkedBuilder","append_enum","append_null","append_str","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","","borrow_mut","","constants","deref","","","deref_mut","","drop","","feature_gated","fmt","","","from","","","get_warning_function","init","","into","","map_err","new_static","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","","try_into","","try_to_compact_string","type_id","","vzip","","error","","msg","","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","arrow","cast","chrono","num","once_cell","rayon","regex","CastOptionsImpl","SerPrimitive","__clone_box","binary_large_to_binary","binary_to_binview","binary_to_dictionary","binary_to_large_binary","binary_to_list","binary_to_utf8","binview_to_decimal","boolean_to_binaryview","boolean_to_primitive","boolean_to_utf8view","borrow","borrow_mut","cast","cast_default","cast_unchecked","clone","clone_into","clone_to_uninit","date32_to_date64","date64_to_date32","decimal_to_decimal","decimal_to_float","decimal_to_integer","default","deref","deref_mut","drop","f16_to_f32","fixed_size_binary_binary","fixed_size_binary_to_binview","float_to_decimal","fmt","from","","init","int32_to_time32ms","int32_to_time32s","int64_to_time64ns","int64_to_time64us","integer_to_decimal","into","partial","primitive_as_primitive","primitive_map_is_valid","primitive_to_boolean","primitive_to_dictionary","primitive_to_primitive","primitive_to_same_primitive","temporal","time32_to_time64","time32ms_to_time32s","time32s_to_time32ms","time64_to_time32","time64ns_to_time64us","time64us_to_time64ns","timestamp_to_date32","timestamp_to_date64","timestamp_to_timestamp","to_owned","try_from","try_into","type_id","unchecked","utf8_large_to_utf8","utf8_to_binary","utf8_to_dictionary","utf8_to_large_utf8","utf8_to_utf8view","utf8view_to_utf8","vzip","wrapped","write","EPOCH_DAYS_FROM_CE","MICROSECONDS","MICROSECONDS_IN_DAY","MILLISECONDS","MILLISECONDS_IN_DAY","NANOSECONDS","NANOSECONDS_IN_DAY","SECONDS_IN_DAY","time_unit_multiple","utf8_to_naive_timestamp_scalar","utf8_to_timestamp_scalar","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","","","_add_columns","_add_series","_apply_columns","_apply_columns_par","_filter_seq","_new_no_checks_impl","_select_impl","_select_impl_unchecked","_select_with_schema_impl","_slice_and_realloc","_to_metadata","add","","","align_chunks","align_chunks_par","append_record_batch","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","","","","","borrow_mut","","","","","chunk_lengths","clear","clear_columns","clone","","","clone_into","","","clone_to_uninit","","","column","","column_extend_unchecked","columns","default","","deref","","","","","deref_mut","","","","","div","","","drop","","","","","","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","","equals","equals_missing","equivalent","","estimated_size","explode","","explode_impl","extend","fields","fill_null","filter","first_col_n_chunks","fmt","","","","from","","","","","from_iter","","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_column_names_str","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","","","","","","","","init","","","","","insert_column","into","","","","","into_iter","","is_duplicated","is_empty","is_unique","iter","iter_chunks","","iter_chunks_physical","len","materialized_column_iter","max_horizontal","max_n_chunks","mean_horizontal","min_horizontal","mul","","","n_chunks","new","new_no_checks","new_no_checks_height_from_first","new_no_length_checks","new_with_broadcast","new_with_broadcast_len","new_with_broadcast_no_namecheck","next","","null_count","par_materialized_column_iter","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","rechunk_mut","rechunk_to_record_batch","rem","","","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_columns","select_physical","select_with_schema","select_with_schema_unchecked","set_column_names","set_height","shape","shift","should_rechunk","shrink_to_fit","size","size_hint","","slice","","slice_par","sort","sort_in_place","split_at","","split_chunks","split_chunks_by_n","sub","","","sum_horizontal","tail","take","take_columns","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","","","to_string","transpose","transpose_impl","try_apply","try_apply_at_idx","try_extend","","try_from","","","","","","","try_from_rows_iter_and_schema","try_get_column_index","try_into","","","","","try_to_compact_string","type_id","","","","","unique","unique_impl","unique_stable","vstack","vstack_mut","vstack_mut_unchecked","vzip","","","","","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","Column","IntoColumn","Partitioned","Scalar","ScalarColumn","Series","__clone_box","","add","","","","agg_first","agg_last","agg_list","agg_max","agg_mean","agg_median","agg_min","agg_n_unique","agg_quantile","agg_std","agg_sum","agg_valid_count","agg_var","and_reduce","append","apply_binary_elementwise","apply_broadcasting_binary_elementwise","apply_unary_elementwise","arg_sort","array","as_list","as_materialized_series","","as_partitioned_column","as_scalar_column","as_series","as_single_value_series","binary","binary_offset","bit_repr","bitand","","","bitor","","","bitxor","","","bool","borrow","","borrow_mut","","cast","","cast_unchecked","","cast_with_options","","categorical","clear","clone","","clone_into","","clone_to_uninit","","decimal","default","deref","","deref_mut","","div","","","","divide","drop","","drop_nulls","","dtype","","eq","equal","equal_missing","equals","equals_missing","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","","from","","","","from_single_value_series","full_null","gather_every","get","get_flags","get_metadata","get_object","get_unchecked","gt","gt_eq","has_nulls","","head","i16","i32","i64","i8","idx","implode","init","","into","","into_column","","","into_frame","into_materialized_series","into_nulls","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_sorted_flag","lazy_as_materialized_series","len","","list","lt","lt_eq","map_scalar","map_unary_elementwise_to_bool","max_reduce","mean_reduce","median_reduce","min_reduce","mul","","","","n_chunks","n_unique","name","","new","","new_empty","","new_from_index","new_partitioned","new_scalar","not_equal","not_equal_missing","null_count","or_reduce","phys_iter","product","quantile_reduce","rechunk","rem","","","","rename","","reshape_array","reshape_list","resize","reverse","sample_frac","sample_n","scalar","set_sorted_flag","shift","shrink_to_fit","shuffle","slice","sort","sort_with","split_at","std_reduce","str","strict_cast","","sub","","","","sum_reduce","tail","take","take_materialized_series","","take_slice","take_slice_unchecked","take_unchecked","to_owned","","to_physical_repr","to_series","try_add_owned","try_apply_binary_elementwise","try_apply_broadcasting_binary_elementwise","try_apply_unary_elementwise","try_array","try_binary","try_binary_offset","try_bool","try_categorical","try_decimal","try_f32","try_f64","try_from","","try_i16","try_i32","try_i64","try_i8","try_idx","try_into","","try_list","try_map_unary_elementwise_to_bool","try_mul_owned","try_str","try_sub_owned","try_u16","try_u32","try_u64","try_u8","type_id","","u16","u32","u64","u8","unique","unique_stable","unit_scalar_from_series","var_reduce","vec_hash","vec_hash_combine","vzip","","with_name","wrapping_trunc_div_scalar","xor_reduce","zip_with","zip_with_same_type","UnpivotArgsIR","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","index","init","into","on","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","","SlicedGroups","Std","Sum","Var","__clone_box","","","","agg_list","aggregations","all","apply","as_list_chunked","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","count","default","","deref","","","","","","","","","deref_mut","","","","","","","","df","drive_unindexed","drop","","","","","","","","","eq","","equivalent","","","","expr","first","","","first_mut","fmt","","","","","fmt_group_by_column","from","","","","","","","","","","","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","","groups","idx_mut","init","","","","","","","","into","","","","","","","","into_idx","into_iter","","","into_par_iter","","","is_empty","","is_sorted_flag","iter","","keys","keys_sliced","last","len","","max","mean","median","min","n_unique","new","","next","nth","par_apply","par_iter","","quantile","select","slice","sort","","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","","","","to_string","try_from","","","","","","","","try_into","","","","","","","","try_to_compact_string","type_id","","","","","","","","unroll","unwrap_idx","unwrap_slice","var","vzip","","","","","","","","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","","AnyValueBuffer","AnyValueBufferTrusted","Boolean","","Float32","","Float64","","Int32","","Int64","","Null","","Row","String","","UInt32","","UInt64","","__clone_box","","","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","coerce_dtype","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","fmt","from","","","","","infer_schema","init","","","into","","","into_series","","new","","","reset","","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","","","try_from","","","try_into","","","type_id","","","vzip","","","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","borrow_mut","columns_to_hashes","default","deref","deref_mut","drop","finish","from","init","into","try_from","try_into","type_id","vec_hash","","vec_hash_combine","","vzip","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","Column","ColumnNotFound","ComputeError","Context","DataFrame","Duplicate","EMPTY","EMPTY_REF","Earliest","Equiprobable","","Err","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","","IO","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoColumn","IntoSeries","IntoVec","InvalidOperation","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","","Midpoint","","NamedFrom","NamedFromOwned","Nearest","","NewChunkedArray","NoData","NonExistent","Null","","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","Ok","OutOfBounds","Physical","PlSmallStr","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","Quantile","QuantileAggSeries","QuantileInterpolOptions","QuantileMethod","Raise","","RevMapping","RollingFnParams","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SQLInterface","SQLSyntax","Scalar","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","UnpivotArgsIR","Var","VarAggSeries","VecHash","__clone_box","","","","","","","","","","","","allocator","as_fd","as_ptr","as_raw_fd","as_ref","","","","","as_str","assume_init","","borrow","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","","","","","","","","","","","","clone_into","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","cmp","","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","","context","context_trace","convert_inner_type","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","","","","","","","","","default_arrays","deref","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","description","df","downcast","downcast_unchecked","downgrade","drop","","","","","","","","","","","","","","","dtype","","eq","","","","","","","","","","","","","equivalent","","","","","","","","","","","","","","extract","finish","fixed_size_list","flush","fmt","","","","","","","","","","","","","","","","","fn_params","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_data_default","from_data_unchecked_default","","from_iter","","","","","","","","","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_static","from_str","","from_string","from_vec","ge","get_mut","get_mut_unchecked","get_unchecked","gt","hash","","","","","","idx","increment_strong_count","increment_strong_count_in","indexes_to_usizes","init","","","","","","","","","","","","","","inner","inner_mut","into","","","","","","","","","","","","","","into_column","into_inner","into_raw","into_raw_with_allocator","into_series","into_string","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","iter_names_and_dtypes","le","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_reduce","","median_reduce","metadata","method","min_periods","min_reduce","","name","ne","negative_to_usize","new","","","new_cyclic","new_cyclic_in","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","","","partial_cmp","","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_reduce","","provide","ptr_eq","quantile_reduce","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","std_reduce","store","string_cache","strong_count","sum_reduce","","to_opt","to_owned","","","","","","","","","","","","to_string","","","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_to_compact_string","","","try_unwrap","type_id","","","","","","","","","","","","","","unwrap_or_clone","utf8","var_reduce","vzip","","","","","","","","","","","","","","weak_count","weights","window_size","with_metadata","wrap_msg","write","write_char","write_fmt","write_str","write_vectored","error","","msg","","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","dtype","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","","set_global_random_seed","Scalar","__clone_box","as_any_value","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","dtype","eq","fmt","from","","","","","","","","","","","","","init","into","into_column","into_series","is_nan","is_null","new","reduce","to_owned","try_from","try_into","type_id","update","value","vzip","mean_reduce","DataType","IS_ARROW","Schema","SchemaExt","SchemaNamesAndDtypes","SchemaRef","ensure_matching_schema","from","from_arrow_schema","","get_field","","iter_fields","","iter_names_and_dtypes","","materialize_unknown_dtypes","","to_arrow","","to_supertype","","try_get_field","","Ascending","","BitRepr","ChunkCompareEq","Descending","","IntoSeries","IsSorted","","Large","Not","","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","","_sum_as_f64","","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","","","","amortized_iter","and_reduce","","append","arg_sort","","arg_unique","","arithmetic","array","array_ref","as_any","as_any_mut","","as_list","as_mut","as_ref","","as_single_ptr","","","binary","binary_offset","bitand","","","","bitor","","","","bitxor","","","","bool","borrow","","","","borrow_mut","","","","boxed_metadata","","cast","","cast_unchecked","cast_with_options","categorical","checked_div","","","checked_div_num","chunk_lengths","","chunks","chunks_mut","","clear","clone","","clone_inner","clone_into","","clone_to_uninit","","compute_len","decimal","default","deref","","","","","deref_mut","","","","div","","","","dot","drop","","","","drop_nulls","","dtype","","eq","","equal","","","equal_missing","","","equals","equals_missing","equivalent","","estimated_size","explode","extend","extend_constant","f32","f64","field","","fill_null","filter","first","","fmt","","","fmt_list","from","","","","","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_iter","","","","","","","","","","","","","","","","","","","","","","","","","from_vec","","","","","","","full_null","gather_every","get","get_flags","get_leaf_array","get_metadata","","get_object","","get_object_chunked_unchecked","","get_unchecked","","gt","","","gt_eq","","","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","","","","into","","","","into_chunks","into_column","into_frame","into_iter","into_series","","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","","","is_sorted_flag","iter","iter_chunks","last","","len","","limit","","list","list_offsets_and_validities_recursive","list_rechunk_and_trim_to_normalized_offsets","lt","","","lt_eq","","","max","max_reduce","","mean","","mean_reduce","median","","median_reduce","","min","min_reduce","","mul","","","","n_chunks","","","n_unique","","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_null","next","not_equal","","","not_equal_missing","","","null","null_count","ops","or_reduce","","phys_iter","product","quantile_reduce","","rechunk","rechunk_validity","","rem","","","rename","","reshape_array","reshape_list","reverse","","rolling_map","","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","","","shuffle","size_hint","slice","","sort","sort_with","","split_at","","std","","std_reduce","","str","str_value","strict_cast","sub","","","","sum","sum_reduce","","","tail","take","take_slice","take_slice_unchecked","take_unchecked","to_arrow","to_float","to_logical_repr_unchecked","to_owned","","to_physical_repr","to_string","try_add_owned","try_array","try_binary","try_binary_offset","try_bool","try_categorical","try_decimal","try_f32","try_f64","try_from","","","","","","","","try_i16","try_i32","try_i64","try_i8","try_idx","try_into","","","","try_list","try_mul_owned","try_new","try_null","try_set_metadata","try_str","try_sub_owned","try_to_compact_string","try_u16","try_u32","try_u64","try_u8","type_id","","","","u16","u32","u64","u8","unique","","unique_stable","unpack","var","","var_reduce","","vzip","","","","with_name","wrapping_trunc_div_scalar","xor_reduce","","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","NumericFixedSizeListOp","NumericListOp","Output","__clone_box","","add","","","add_to","","","borrow","","borrow_mut","","checked","clone","","clone_into","","clone_to_uninit","","deref","","deref_mut","","div","","","divide","","","drop","","execute","","floor_div","","from","","init","","into","","mul","","","multiply","","","rem","","","remainder","","","sub","","","subtract","","","to_owned","","try_from","","try_into","","type_id","","vzip","","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","","","checked_div_num","","","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ALLOW_IMPLODE_LIST","ALLOW_PRIMITIVE_TO_STRING","Container","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","SuperTypeFlags","SuperTypeOptions","TrustMyLength","Wrap","__clone_box","","","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all","allow_implode_list","allow_primitive_to_string","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","binary_concatenate_validities","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","borrow_mut","","","","","chunk_lengths","clone","","","clone_into","","","clone_to_uninit","","","coalesce_nulls","coalesce_nulls_columns","collect_reversed","collect_trusted","complement","concat_df","concat_df_unchecked","contains","default","","deref","","","","","","","deref_mut","","","","","","difference","drop","","","","","dtypes_to_schema","dtypes_to_supertype","empty","eq","","","equivalent","","","","","","extend","flags","flatten","fmt","","","","","","from","","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","","","from_iter_trusted_length","","","from_name","from_par_iter","from_trusted_len_iter_rev","","get_supertype","get_supertype_with_options","get_time_units","handle_casting_failures","hash","","","init","","","","","insert","intersection","intersects","into","","","","","into_inner","into_iter","","into_vec","","is_all","is_empty","iter","iter_chunks","iter_names","len","materialize_dyn_int","merge_dtypes_many","n_chunks","new","","new_repeat_n","next","next_back","not","operation_exceeded_idxsize_msg","rayon","remove","set","size_hint","slice","slice_slice","split","split_and_flatten","split_at","split_df_as_ref","sub","sub_assign","symmetric_difference","to_owned","","","toggle","trust_my_length","try_from","","","","","try_get_supertype","try_into","","","","","type_id","","","","","union","vzip","","","","","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[40,"polars_core::chunked_array"],[467,"polars_core::chunked_array::arithmetic"],[495,"polars_core::chunked_array::builder"],[604,"polars_core::chunked_array::builder::list"],[759,"polars_core::chunked_array::cast"],[787,"polars_core::chunked_array::collect"],[801,"polars_core::chunked_array::float"],[803,"polars_core::chunked_array::from_iterator_par"],[807,"polars_core::chunked_array::iterator"],[862,"polars_core::chunked_array::iterator::par"],[864,"polars_core::chunked_array::metadata"],[1150,"polars_core::chunked_array::object"],[1227,"polars_core::chunked_array::object::builder"],[1251,"polars_core::chunked_array::object::registry"],[1280,"polars_core::chunked_array::ops"],[1410,"polars_core::chunked_array::ops::arity"],[1446,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1448,"polars_core::chunked_array::ops::gather"],[1451,"polars_core::chunked_array::ops::row_encode"],[1460,"polars_core::chunked_array::ops::search_sorted"],[1489,"polars_core::chunked_array::ops::sort"],[1496,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1497,"polars_core::chunked_array::ops::sort::options"],[1574,"polars_core::chunked_array::temporal"],[1575,"polars_core::chunked_array::temporal::conversion"],[1579,"polars_core::config"],[1583,"polars_core::datatypes"],[3172,"polars_core::datatypes::categorical"],[3315,"polars_core::datatypes::categorical::revmap"],[3369,"polars_core::datatypes::categorical::string_cache"],[3388,"polars_core::datatypes::enum_"],[3406,"polars_core::datatypes::revmap"],[3412,"polars_core::datatypes::string_cache"],[3416,"polars_core::error"],[3483,"polars_core::error::PolarsError"],[3487,"polars_core::error::constants"],[3490,"polars_core::export"],[3498,"polars_core::export::cast"],[3573,"polars_core::export::cast::temporal"],[3584,"polars_core::fmt"],[3614,"polars_core::frame"],[3908,"polars_core::frame::column"],[4177,"polars_core::frame::explode"],[4205,"polars_core::frame::group_by"],[4441,"polars_core::frame::group_by::GroupByMethod"],[4442,"polars_core::frame::group_by::GroupsProxy"],[4444,"polars_core::frame::group_by::aggregations"],[4457,"polars_core::frame::group_by::expr"],[4460,"polars_core::frame::row"],[4556,"polars_core::functions"],[4558,"polars_core::hashing"],[4589,"polars_core::prelude"],[5220,"polars_core::prelude::PolarsError"],[5224,"polars_core::prelude::default_arrays"],[5230,"polars_core::prelude::fixed_size_list"],[5250,"polars_core::prelude::list"],[5273,"polars_core::prelude::null"],[5304,"polars_core::prelude::revmap"],[5310,"polars_core::prelude::slice"],[5313,"polars_core::prelude::string_cache"],[5317,"polars_core::prelude::utf8"],[5321,"polars_core::random"],[5322,"polars_core::scalar"],[5365,"polars_core::scalar::reduce"],[5366,"polars_core::schema"],[5390,"polars_core::series"],[5852,"polars_core::series::amortized_iter"],[5876,"polars_core::series::arithmetic"],[5951,"polars_core::series::arithmetic::checked"],[5959,"polars_core::series::ops"],[5985,"polars_core::utils"],[6194,"polars_core::utils::flatten"],[6199,"dyn_clone::sealed"],[6200,"num_traits"],[6201,"num_traits::cast"],[6202,"polars_error"],[6203,"polars_core::series::arithmetic::borrowed"],[6204,"polars_core::frame::group_by::proxy"],[6205,"core::option"],[6206,"core::iter::traits::iterator"],[6207,"polars_utils::pl_str"],[6208,"core::ops::function"],[6209,"core::marker"],[6210,"alloc::string"],[6211,"polars_core::datatypes::dtype"],[6212,"polars_arrow::array::binview::view"],[6213,"polars_core::datatypes::aliases"],[6214,"polars_core::chunked_array::metadata::md_trait"],[6215,"alloc::boxed"],[6216,"polars_core::series::arithmetic::borrowed::checked"],[6217,"polars_arrow::array"],[6218,"alloc::vec"],[6219,"compact_str"],[6220,"core::iter::traits::double_ended"],[6221,"core::fmt"],[6222,"core::iter::traits::collect"],[6223,"polars_arrow::bitmap::immutable"],[6224,"rayon::iter"],[6225,"polars_arrow::trusted_len"],[6226,"polars_core::datatypes::any_value"],[6227,"polars_utils::index"],[6228,"std::sync::rwlock"],[6229,"polars_core::chunked_array::logical::decimal"],[6230,"core::iter::traits::exact_size"],[6231,"polars_core::series::series_trait"],[6232,"core::slice::iter"],[6233,"core::iter::adapters::map"],[6234,"core::convert"],[6235,"polars_core::chunked_array::metadata::guard"],[6236,"polars_core::chunked_array::metadata::interior_mutable"],[6237,"alloc::sync"],[6238,"core::ops::range"],[6239,"polars_core::datatypes::field"],[6240,"polars_arrow::legacy::kernels::rolling::no_nulls"],[6241,"polars_core::chunked_array::ops::rolling_window"],[6242,"polars_utils::aliases"],[6243,"polars_utils::hashing"],[6244,"ndarray::aliases"],[6245,"either"],[6246,"core::result"],[6247,"core::any"],[6248,"polars_core::chunked_array::arithmetic::numeric"],[6249,"polars_core::chunked_array::builder::string"],[6250,"polars_arrow::array::binview"],[6251,"polars_core::chunked_array::builder::boolean"],[6252,"polars_core::chunked_array::builder::null"],[6253,"polars_core::chunked_array::builder::primitive"],[6254,"core::clone"],[6255,"polars_core::chunked_array::builder::list::anonymous"],[6256,"polars_core::chunked_array::builder::list::boolean"],[6257,"polars_core::chunked_array::builder::list::primitive"],[6258,"polars_core::chunked_array::builder::list::binary"],[6259,"polars_core::chunked_array::builder::list::null"],[6260,"core::hash"],[6261,"polars_arrow::array::boolean"],[6262,"polars_arrow::array::fixed_size_list"],[6263,"polars_core::chunked_array::metadata::env"],[6264,"polars_core::chunked_array::metadata::collect"],[6265,"bitflags::iter"],[6266,"std::fs"],[6267,"std::sync::mutex"],[6268,"polars_arrow::datatypes"],[6269,"polars_arrow::bitmap::utils::iterator"],[6270,"polars_arrow::bitmap::utils::zip_validity"],[6271,"polars_arrow::offset"],[6272,"polars_arrow::array::static_array"],[6273,"core::error"],[6274,"polars_arrow::array::primitive"],[6275,"polars_row::row"],[6276,"polars_arrow::array::binary"],[6277,"polars_arrow::legacy::array::slice"],[6278,"chrono::naive::datetime"],[6279,"alloc::borrow"],[6280,"polars_arrow::array::static_array_collect"],[6281,"bytemuck::zeroable"],[6282,"polars_core::chunked_array::logical::categorical"],[6283,"polars_core::chunked_array::logical::categorical::merge"],[6284,"polars_core::chunked_array::logical"],[6285,"polars_core::datatypes::time_unit"],[6286,"polars_arrow::datatypes::reshape"],[6287,"core::cmp"],[6288,"polars_arrow::types"],[6289,"polars_arrow::datatypes::physical_type"],[6290,"core::borrow"],[6291,"polars_arrow::pushable"],[6292,"polars_core::datatypes::into_scalar"],[6293,"polars_core::chunked_array::logical::categorical::builder"],[6294,"polars_core::chunked_array::logical::categorical::revmap"],[6295,"polars_core::chunked_array::logical::categorical::string_cache"],[6296,"polars_core::chunked_array::logical::enum_"],[6297,"polars_error::warning"],[6298,"polars_arrow::types::offset"],[6299,"polars_arrow::array::dictionary"],[6300,"polars_arrow::array::list"],[6301,"polars_arrow::array::utf8"],[6302,"polars_arrow::types::native"],[6303,"num_traits::identities"],[6304,"polars_compute::cast"],[6305,"num_traits::float"],[6306,"polars_arrow::array::fixed_size_binary"],[6307,"polars_compute::cast::primitive_to"],[6308,"chrono::offset"],[6309,"polars_row"],[6310,"polars_arrow::record_batch"],[6311,"polars_arrow::datatypes::schema"],[6312,"polars_core::series::from"],[6313,"polars_core::chunked_array::ndarray"],[6314,"polars_arrow::array::struct_"],[6315,"polars_core::frame::column::scalar"],[6316,"polars_core::series::iterator"],[6317,"polars_utils::idx_vec"],[6318,"rayon::iter::plumbing"],[6319,"polars_core::frame::group_by::into_groups"],[6320,"core::iter::adapters::copied"],[6321,"core::iter::adapters::zip"],[6322,"polars_arrow::legacy::kernels::rolling"],[6323,"polars_utils::float"],[6324,"polars_core::frame::group_by::aggregations::agg_list"],[6325,"polars_core::frame::row::av_buffer"],[6326,"polars_core::hashing::identity"],[6327,"polars_core::hashing::vector_hasher"],[6328,"core::alloc"],[6329,"std::os::fd::owned"],[6330,"std::os::fd::raw"],[6331,"std::path"],[6332,"std::ffi::os_str"],[6333,"core::mem::maybe_uninit"],[6334,"polars_arrow::legacy::kernels::time"],[6335,"core::ffi::c_str"],[6336,"core::default"],[6337,"polars_arrow::scalar"],[6338,"std::io::error"],[6339,"simdutf8::basic"],[6340,"alloc::collections"],[6341,"regex::error"],[6342,"alloc::ffi::c_str"],[6343,"polars_arrow::legacy::array::default_arrays"],[6344,"polars_arrow::buffer::immutable"],[6345,"polars_core::named_from"],[6346,"polars_core::chunked_array::ops::aggregate"],[6347,"polars_core::chunked_array::ops::aggregate::quantile"],[6348,"polars_arrow::legacy::index"],[6349,"core::pin"],[6350,"core::io::borrowed_buf"],[6351,"std::io"],[6352,"polars_core::chunked_array::ops::aggregate::var"],[6353,"alloc::collections::btree::map"],[6354,"polars_arrow::legacy::array::fixed_size_list"],[6355,"polars_arrow::legacy::array::list"],[6356,"polars_arrow::legacy::array::null"],[6357,"polars_arrow::bitmap::mutable"],[6358,"polars_schema::schema"],[6359,"alloc::rc"],[6360,"polars_core::series::arithmetic::list"],[6361,"polars_core::series::arithmetic::fixed_size_list"],[6362,"polars_core::utils::supertype"],[6363,"polars_arrow::legacy::utils"],[6364,"polars_arrow::legacy::trusted_len::rev"],[6365,"core::iter::sources::repeat"],[6366,"core::iter::adapters::take"],[6367,"polars_core::chunked_array::object::extension"],[6368,"polars_error::constants"],[6369,"polars_compute"],[6370,"polars_compute::cast::binary_to"],[6371,"polars_compute::cast::utf8_to"],[6372,"polars_compute::cast::binview_to"],[6373,"polars_compute::cast::boolean_to"],[6374,"polars_compute::cast::decimal_to"],[6375,"polars_arrow::temporal_conversions"],[6376,"polars_compute::cast::temporal"],[6377,"polars_core::frame::horizontal"],[6378,"polars_arrow::legacy::prelude"],[6379,"polars_arrow::legacy::array"],[6380,"polars_arrow::legacy::array::utf8"],[6381,"polars_core::utils::any_value"],[6382,"polars_core::utils::schema"],[6383,"polars_core::utils::series"]],"i":"```````````````````````````````````````````Kn000l0000000000000000000000000000000000000000`000000001010``0000000000000`0`00000001010000000100000000000`0000000100000000000`0000000000000000000000000000000000001000001000000000000000000`00000000000000000000000000000`0000000000000000000000000000000000000000000000000000000000``00000000000000000000000000000000000000000000000000000000000`00000000000000000000000001001001000000010000000000000000000000000000000000000000000000`A@d00000000000000000000000000````````A@hA@lA@nAA`A@f432140043143214321432143214321432143214321044AAdAAf543`6543AAh00076547654`7654365476547654765476547654````````AAj0AAlAAnAB`ABb43ABdABf4ABh4773437621504421214476215047621504476762150476215047621504215432154376037621504`7621504215437621504762150447621504762150476215047621504`Fj00000000000000000000000000``ABlABn1000101000`AC```ACbACd````AChAClACn21021021021021021021021021210210`210210210210210``ADlJbGh0If`3Ld22````````42110Lf4AD`43434343434344334343215604321560431150431504315043ADb054542654332671543267154541Ff7774378265652652657777777266666555554378265656655656565775077773543782656565654378265656576577776565220777707773653656577577777757765656533726565437826543782653343782656534378265113````AE`00000Ij1111`111111110011111111111111111111``111111101111111110Il2222222222`AEn0000000000000000000000````AFb00AFd00000001```00`0`10000AGh````````````````````````````0AFn``AGjAHj33333CGl4044AFj4AG`055AGb0AGd`88AGf00999999977AGl0`AH`AHb`<<`AHdAHf`AHh0<<????AHlAHn>><<AI`==:AIbAGj0:2AIdAIf`AIh0`0AIjAIl`AGb0AInAFjAJ`AJbAJdAGh000AGd61`AJf`AK`AJlAJh``````````````````````````````````````````````AKj00`0`00000000000000000`00000`````AKl0````EjF`101010101010101010101011001011001010101010101010221010101010101010010010`````````ANd`IbEbCd```````21AEb`2``3`0320```32````3`````200`2`3200``0`20`3230```00`40320``320```BCl`2CGnCH`````B@b``8``764``764``764``764``4`555444BCn875``4``5B@dANh1010A`;:8`;:`;``939```````````BAb``35`=<;`<`9;99```90`<;9``<;9``<;9``<;9``9;9`99AJj0;0AN`ANb?ANd?ANfMn8ANjANlMjMhANnAO`LlM`D`DbAObAOdDhDlAOfAnAOhAOjAOlAOnB@`B@bAEbB@dEfJhGl0Dd00Fb00IbjBhJfMjMhLlM`D`DbDhDlAnEdEfGlDdFbAF`33545433432104545ALfALh543543437665432654324543AKh65406543ALj0ALl0Eb8Ib1MnALnAJj>======AN`CHbC`jBhJfIhANb;ANd=ANf<ANhANjANlMjMhANnAO`LlM`D`DbAObAOdDhDlAOfAnAOhAOjAOlAOnB@`B@bAEbB@dAN`CHbC`jBhJfIhANbIbANdEbANfMnANhANjANlMjMhANnAO`LlM`D`DbAObAOdDhDlAOfAnAOhAOjAOlAOnB@`B@bAEbB@dEb`IbAMn012EdEfGlDdFbAKh6Jh654321`JfMjMhLlM`D`DbAN`ANbIbANdEbANfMnANhANjANl?>ANnAO`?>=<AObAOdDhDlAOfAnAOhAOjAOlAOnB@`B@bAEbB@dAN`ANbIbANdEbANfMnANhANjANlMjMhANnAO`LlM`D`DbAObAOdDhDlAOfAnAOhAOjAOlAOnB@`B@bAEbB@dAN`ANbIbANdEbANfMnANhANjANlMjMhANnAO`LlM`D`DbAObAOdDhDlAOfAnAOhAOjAOlAOnB@`B@bAEbB@d3MnB@h0005Eb400`IbANd26AN`0CHbC`jBhJfIhANb98:ANf=ANhANjANlMjMhANnAO`LlM`D`DbAObAOdDhDlAOfAnAOhAOjAOlAOnB@`B@bAEbB@dAN`0CHbC`jBhJfIhANbIbANdEbANfMnANhANjANlMjMhANnAO`LlM`D`DbAObAOdDhDlAOfAnAOhAOjAOlAOnB@`B@bAEbB@dJhjBhJfMjMhLlM`D`DbAN`CHbC`;:9IhANbIbANdEbANfMnANhANjANlMjMhANnAO`LlM`D`DbAObAOdDhDlAOfAnAOhAOjAOlAOnB@`B@bAEbB@dAMnJhIbMn0`1ANdEb0ANf3ANh;:985EdEfGlDd0Fb04321100::8877669955B@`0B@b0AEb0B@d087AN`7565AF`AMl;:871ANbIb0ANdEb0ANfMnANh0=<<;:EdEf;CHbC`jBhJfIh>======<;;;;:99988ANjANlMjMhANnAO`LlM`D`DbAObAOdDhDlAOfAnAOhAOjAOlAOnB@`B@bAEb00B@dEbEf000GlDd0Fb0AF`32104432211AKh01432154433225432143214AJj00Ed76542310765423071<;JhAMn02987645100298764529CdjBhJfIhANjANlMjMhANnAO`LlM`D`DbAObAOdDhDlAOfAnAOhAOjAOlAOnEdEf1AF`0B@b0EbIbBAnAJj76DdAKh98Gl2Fb2913300133006ANd8MnANh;AEbB@d;;<AN`CHbC`jBhJfIhANbIb=EbANf>=ANjANlMjMhANnAO`LlM`D`DbAObAOdDhDlAOfAnAOhAOjAOlAOnB@`B@bAEbB@dEdEfEb4AN`CHbC`jBhJfIhANbIbANd:ANfMnANhANjANlMjMhANnAO`LlM`D`DbAObAOdDhDlAOfAnAOhAOjAOlAOnB@`B@bAEbB@dAN`BB`0EdEfGlDdFbAKhAF`BBbJh9IbEb0010000101000010>101010>00010000010>AJj019887798877``1ANd2:28:98:ALfALh10`<4:<;:<6jBhJfMjMhLlM`D`DbDdFbMn0CGnCH`BCf55554444AF`04B@`B@b02EdEfGl;:AKh666AN`ANf33543>>==543>>==335404>4>IbANh93Jh4ALfALh1089jBhJfMjMhLlM`D`DbEdEfGlDdFbAKhAF``JhAN`65465465477Mn9876543987654376547654ALfALhIb0`5jBhJfMjMhLlM`D`DbGl0FbEd0Ef0Dd033EbMnANh203AEb6505AN`ANbIbANd7ANf76ANjANlMjMhANnAO`LlM`D`DbAObAOdDhDlAOfAnAOhAOjAOlAOnB@`B@bAEbB@dEb2JhAN`Ib3ANh7Fb2EfEd100ALj0ALl0B@h00078CHbC`jBhJfIhANb>ANdEbANfMnANhANjANlMjMhANnAO`LlM`D`DbAObAOdDhDlAOfAnAOhAOjAOlAOnB@`0B@bAEbB@dAN`CHbC`jBhJfIhANbIbANdEbANfMnANhANjANlMjMhANnAO`LlM`D`DbAObAOdDhDlAOfAnAOhAOjAOlAOnB@`B@bAEbB@dIbEb10ANh5EfAN`CHbC`jBhJfIhANb;ANd;ANfMn<ANjANlMjMhANnAO`LlM`D`DbAObAOdDhDlAOfAnAOhAOjAOlAOnB@`B@bAEbB@d1GlDdFbAF`AJj0Eb1ALfALh7BBhBBjB@lBBlBBnBC`BCbBCdBB`:9?>AKh>Gl:98765432<;DdFb3AF`AN`CHbC`jBhJfIhANbIbANdEbANfMnANhANjANlMjMhANnAO`LlM`D`DbAObAOdDhDlAOfAnAOhAOjAOlAOnB@`B@bAEbB@dEdCGnCH`BCfElAJjIbEf7`````BCl`BCn10`AMj00BCh10010BD`BCj32103`3333021032103221033333333AMl31321444444444444444321432144244444444444``41444312444444443`244`444443214321432144443214`6565`565656656565656565656565656666565666665656565656`BDf0000`00`0000000`0`BDh0000000000000000`8787`````BDlALb000Ah`112101```11111112BDj3030`3003030`300300`3030`0``````0303003030CHdCHf10`````````````BF```````````00```000`````0000````0000`````00````````````````00000``````00BFn````````````BGb00000000000`````00`````00000BH``0BGn11``0``01BDd000000000000000000000BIdBIf34210342222342342342`222421034210342222103422222222224222442`22222223422103422222222222222222`222422222222222222103422103421022222222222222222222222210222222222222222222`222222222222222222210222222222222222222234222222221034222221034221034222222210342222222``En0`0BJf11111111111111111111111111011110111111111111101010101011101010111010111111010101111111111111101011101111111110111111110101BGl1222112222222211222212222222222212121222222222222222212221222122222222221222222221222212212222222222221222222122222222221222222212221222222`BJl00000000000000000000000000`BKb0``0``````BKjAl`2`22222222210`222BJn1BHh40`1023BLdBKfBKd4537621045374537453745373456210045376210453731621044537454455`643445377`62104445537445335BKn04673215648732156486355255765564447644444543345644656446644564887321564873215648873215648666473215648CHhCHj0``````````BLnBM`0`BMb0BMdBMf``101010101010`10101010BHf211210210210210210`0210210210000022110`2102102121021```210210210210210`````````BMh0`00000000000BMj000111111`````````BJ`````````````ALb00`0Bj0CAjCHlNdAh6```BCl`326```````6```4BCn`43``````14343``43`7`5BOb```381``````BLj```71`````99`99``9``9`9``0``8OjBNlLhNf>BAd:5BNnBO`84444????4?44ALbBj08766CAj6BJ`6Nd<65=43;:928170<65=`98BNj04<;:9281=76>4<;:9281=76>4<;:9281=76>4:B@h0005;66``8;;5;;;;:392`655=<;;4:392>87?65=<;4:392>87?;`;;;65=<;;4:392>87?995=;;;:392>87?55==;;339922??<AMl`<7766>=<<<;4:3?98BOb<8888877777??>==================6<5;4BLj;:1CAbCAfCAh;;;;;;;;LhCHn0000111==<=CAl222Gb3?3=BAd=9Oj55`ALbBj2BNl8CAjNfBJ`7NdBLjBNnBO`BOb;8:9;8Lh876=5432100000:9<=0<0BHd1`1``1CBd0CBfBAd6;2204CBhCBj6266666666666`OjBNlBj999````;7799699999`9`AKl0:CCf3`;994243;NfBJ`9NdBLjBNnBO`BObALb:LhB@h0002<>=11CAj:9BAd987654>OjBNl53=<2;:987CBh666666667Bj77803275?>4=<;:97`CCf914386NfBJ`7NdBLjBNnBO`BOb?66<ALbLh:::0CHdCHf10```CAbCAfCAh`CD`000000000000000000`CDb000000000000000000000`CDf00000000000000000000000000000`BClBCn10``AKl0``````CI`CIb``Lb000000000000000000000000000000000`0000000`CEf0`````BGfCEb101012101010101Kb0``00```BJh11````01AfCB`0111111`0010000`110001001001111111111111111CEj342034211122221122121122421424222203422034222222034211114222222222442222221121114222034222222222222222222222222222222222222222221221111111122222214222222`2034203422220BIh322333322003333222322333333333322223222232233332232223333333333333333333333333333333333333323133333332`2233222223332333252233332223312332223222233333333223322223335333333333333145333333333314533333333333331453333322322222145333223``Cl000000000000000000000`````CEnCF`CFb210CFdAj03232`32323232324321003232323232324321004321004321003232323232``BNjFl0100CFf0`00000000000000000000000CFh0``````````0CFjCFn```````211````22222222CGfAKn43210432CFl543543543``CG`06``6653322654322654632654``636533665565`6666653265546666226CGd337333````4764376577743765375BIl6888383``3466668``8863```3`8888768254876`5487654876854876``````","f":"`````````````{{}b}``0```````````````{{}d}``````````````{{fh}b}{{{f{{l{j}}}}}d}{{{f{{l{c}}}}}nA`}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{c}}}}{f{Al}}}AfA`}{{{f{{l{An}}}}}d}{{{f{{l{An}}}}}{{B`{d}}}}{{{f{{l{j}}}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{{l{Bh}}}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{{l{Bh}}}}Bj}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{{l{j}}}}Bj}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}54{{{f{Bl{l{c}}}}{f{{l{c}}}}}{{Ah{b}}}{{Cd{}{{Bn{C`}}{Cb{C`}}}}}}{{{f{{l{c}}}}e}{{l{c}}}A`{{Ch{B`}{{Cf{B`}}}}Cj}}{{{f{{l{j}}}}c}{{l{j}}}{{Cn{Cl}{{Cf{Af}}}}}}{{{f{{l{Bh}}}}e}{{l{g}}}{}{{Cn{{B`{Cl}}}{{Cf{{B`{c}}}}}}Cj}Cd}{{{f{{l{j}}}}e}{{l{g}}}{}{{Cn{{B`{Cl}}}{{Cf{{B`{c}}}}}}Cj}Cd}{{{f{{l{Bh}}}}c}{{l{Bh}}}{{Cn{Cl}{{Cf{Af}}}}}}{{{f{{l{D`}}}}c}Af{{Ch{{f{Af}}}{{Cf{Af}}}}}}{{{f{{l{Db}}}}c}Af{{Ch{{f{Af}}}{{Cf{Af}}}}}}{{{l{c}}e}{{l{c}}}A`{{Ch{}{{Cf{}}}}Cj}}{{{f{{l{c}}}}e}DdCd{{Cn{{f{BlDf}}}}}}{{{f{{l{c}}}}{f{Ch}}}{{l{c}}}A`}{{{f{{l{c}}}}{f{Ch}}}{{l{e}}}A`Cd}{{{f{Bl{l{c}}}}e}bA`{{Ch{}{{Cf{}}}}Cj}}{{{f{{l{Dh}}}}c}{{l{Dh}}}{{Cn{{f{Dj}}}{{Cf{{f{Dj}}}}}}}}{{{f{{l{Dl}}}}c}{{l{Dl}}}{{Cn{{f{{E`{Dn}}}}}{{Cf{{f{{E`{Dn}}}}}}}}}}{{{f{{l{c}}}}Ebg}{{l{i}}}Cd{}{{Cn{}{{Cf{e}}}}}Cd}{{{f{{l{Bh}}}}{f{Ch}}}{{Ah{Ed}}}}{{{f{{l{j}}}}{f{Ch}}}{{Ah{Ef}}}}{{{f{{l{c}}}}g{f{Bl{E`{e}}}}}bA`{}{{Ch{B`{f{e}}}{{Cf{e}}}}}}{{{f{{l{c}}}}e}{{l{c}}}A`{{Ch{}{{Cf{}}}}Cj}}{{{f{{l{Dh}}}}c}{{l{Dh}}}{{Cn{Eh{f{Dj}}}{{Cf{Eh}}}}Cj}}{{{f{{l{c}}}}Ej}ElA`}{{{f{{l{c}}}}{f{{E`{En}}}}{f{F`}}}{{Ah{El}}}A`}{{{f{{l{c}}}}}{{Ah{El}}}A`}`{{{f{{l{Dh}}}}}Fb}{{{f{{l{c}}}}}{{f{{l{c}}}}}Cd}{{{f{{l{c}}}}}{{f{Eb}}}Cd}{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}CdCd{{Cn{{B`{Cl}}B`B`}{{Cf{{B`{Af}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}eFd{}}00{f{{f{c}}}{}}0{{{f{Bl}}}{{f{Blc}}}{}}0{{{f{{l{c}}}}}{{Fh{Ff}}}Cd}``{{{f{{l{c}}}}e}{{l{g}}}A`{{Ch{}{{Cf{}}}}Cj}A`}{{{f{{l{c}}}}{f{Eb}}}{{Ah{Af}}}A`}{{{f{{l{c}}}}{f{Eb}}Fj}{{Ah{Af}}}A`}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Fl}{{{f{{l{c}}}}e}{{Ah{Af}}}FlAd}{{{f{{l{c}}}}}{{`{{Bf{}{{Bb{Fn}}}}}}}Cd}{{{f{{l{c}}}}}G`Cd}{{{f{{l{c}}}}}{{f{{Gd{Gb}}}}}Cd}{{{f{Bl{l{c}}}}}{{f{Bl{Gd{Gb}}}}}Cd}{{{f{{l{c}}}}}{{l{c}}}Cd}0{{f{f{Blc}}}b{}}{fb}`{{{f{Bl{l{c}}}}}b{CdA`}}`{fGf}{{{f{{l{c}}}}}{{Ah{{f{E`}}}}}A`}{{{f{Bl{l{c}}}}{f{{l{c}}}}Gh}bCd}{{{f{Bl{l{c}}}}{f{{l{e}}}}Gh}bCdCd}{{{f{{l{c}}}}}{{`{{Gj{}{{Bb{{f{E`}}}}}}}}}A`}{{}{{l{c}}}Cd}{Fn{{f{c}}}{}}0{Fn{{f{Blc}}}{}}0{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{Bl{l{c}}}}}bCd}{Fnb}0{{{f{{l{c}}}}}{{l{c}}}Cd}{{{f{{l{c}}}}}{{f{Eb}}}Cd}{{{f{{l{c}}}}e}GlA`Ad}{{{f{{l{c}}}}{f{{l{c}}}}}GlA`}10{{{f{Bl{l{c}}}}{f{{l{c}}}}}{{Ah{b}}}A`}{{{f{{l{c}}}}}{{Ah{{l{c}}}}}A`}{{{f{{l{c}}}}{f{Gl}}}{{Ah{{l{c}}}}}{{Cd{}{{Gn{C`}}{Cb{C`}}}}}}{{{f{{l{c}}}}}B`Cd}{{{f{{l{c}}}}}{{B`{Fn}}}Cd}`{{{f{{l{c}}}}{f{BlH`}}}HbA`}{{{f{{l{An}}}}{f{BlH`}}}Hb}{{{f{{l{c}}}}e}bCd{{Cn{B`}}}}{{{f{{l{Bh}}}}c}b{{Cn{{B`{Cl}}}}}}{{{f{{l{j}}}}c}b{{Cn{{B`{Cl}}}}}}{c{{l{e}}}Hd{{Cd{}{{Hf{c}}}}}}{cc{}}0{{Bjc}{{l{e}}}Hh{{Cd{}{{Hf{}}}}Cd}}{{{f{{l{c}}}}e}{{l{c}}}{{Cd{}{{Hf{}}}}Cd}Hh}{{Bj{Gd{Gb}}}{{l{c}}}Cd}{{Bj{Gd{Gb}}Eb}{{l{c}}}Cd}{c{{l{e}}}{{Hh{}{{Bb{B`}}}}}A`}{c{{l{An}}}{{Hh{}{{Bb{{B`{d}}}}}}}}{c{{l{e}}}{{Hh{}{{Bb{{Hl{Gd{B`{Hj}}}}}}}}}A`}{{Bjc}{{l{e}}}{{Bf{}{{Bb{B`}}}}}A`}23{{Bjc}{{l{e}}}{{Bf{}{{Bb{}}}}}A`}`{c{{l{e}}}{{Hn{}{{Bb{B`}}}}}A`}{{Bj{f{E`}}}{{l{c}}}A`}{{Bj{f{{E`{B`}}}}}{{l{c}}}A`}{c{{l{e}}}{{I`{}{{Bb{B`}}}}}A`}{{BjGd}{{l{c}}}A`}{{BjGd{B`{Hj}}}{{l{c}}}A`}{{BjFn}{{l{c}}}A`}0{{{f{{l{c}}}}Fn}{{l{c}}}Cd}{{BjFn{f{Eb}}Fn}Ed}{{BjFn{f{Eb}}}Ef}{{{f{{l{c}}}}Fn}B`Cd}{{{f{{l{c}}}}Fn}{{Ah{Ib}}}A`}{{{f{{l{c}}}}Fn}IbA`}{{{f{{l{j}}}}Fn}{{B`{Af}}}}{{{f{{l{Bh}}}}Fn}{{B`{Af}}}}{{{f{{l{c}}}}}{{B`{Id}}}Cd}{{{f{{l{c}}}}}dCd}{{{f{{l{c}}}}}IfCd}{{{f{{l{j}}}}}Af}{{{f{{l{Bh}}}}}Af}0{{{f{{l{c}}}}}B`Cd}0{{{f{{l{{Ih{c}}}}}}Fn}{{B`{{f{Ij}}}}}Il}0;{{{f{{l{c}}}}dd}{{Ah{Al}}}A`}{{{f{{l{c}}}}FndFn}AlFd}{{{f{{l{c}}}}{f{{l{c}}}}}GlA`}{{{f{{l{c}}}}e}GlA`Ad}019{{{f{{l{c}}}}{B`{Fn}}}{{l{c}}}Cd}{{}Fn}0{{FnIn{B`{J`}}}{{l{c}}}A`}{{{f{{l{Bh}}}}}{{f{Eb}}}}{{{f{{l{j}}}}}{{f{Eb}}}}{{{f{{l{c}}}}}{{Jd{{Jb{c}}}}}Cd}{{}c{}}0{{}En}{{{l{Jf}}{B`{Fn}}Fn}{{Ah{Jh}}}}{{{l{Jf}}{B`{Fn}}Fn}Jh}{{{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}}{{`{JjJl{Jn{}{{Bb{}}}}GjI`}}}A`}{{{l{c}}}AfCd}{{{f{{l{c}}}}}dCd}{{{f{{l{c}}}}}GlK`}000{{{f{{l{c}}}}}GlCd}02{{{f{{l{c}}}}}KbCd}{{{f{{l{c}}}}}{{`{{Kd{}{{Bb{B`}}}}}}}Cd}{{{f{{l{c}}}}}{{`{{Bf{}{{Bb{{l{c}}}}}}}}}Cd}{{{f{{l{c}}}}}{{Kj{{Kf{Gb}}{Kh{{f{Gb}}}{{Cf{{B`{{f{Hj}}}}}}}}}}}Cd}`{{fc}Gf{{Kl{Dj}}}}{{{f{{l{c}}}}}B`Cd}{{{f{{l{c}}}}}{{B`{Fn}}}Cd}{{{f{{l{c}}}}}{{Kn{c}}}Cd}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}e}gA`{}{}}{{{l{c}}e}gA`{}{}}{{c{l{e}}}g{}A`{}}{{c{f{{l{e}}}}}g{}A`{}}{{{f{{l{c}}}}}FnCd}0{{{f{{l{c}}}}e}{{l{c}}}A`{AbL`}}00{{{f{{l{c}}}}Fn}{{l{c}}}Cd}{{{f{{l{c}}}}e}GlA`Ad}{{{f{{l{c}}}}{f{{l{c}}}}}GlA`}10{{{f{{l{c}}}}}B`A`}{{{f{{l{An}}}}}{{B`{d}}}}{{{f{{l{Dl}}}}}{{B`{{f{{E`{Dn}}}}}}}}{{{f{{l{c}}}}}LbA`}{{{f{{l{c}}}}}{{B`{n}}}A`}{{{f{{l{An}}}}}{{B`{n}}}}{{{f{{l{c}}}}}{{B`{n}}}Fd}{{{f{{l{c}}}}}LbFd}{{{f{Bl{l{c}}}}{Jb{c}}}bCd}`{{{f{{l{c}}}}}{{Ld{c}}}Cd}{{{f{{l{c}}}}}{{f{{Lh{{Lf{c}}}}}}}Cd}{{{f{{l{c}}}}}{{B`{{Lj{Ff}}}}}Cd}{{{f{Bl{l{c}}}}}{{f{Bl{Lh{{Lf{c}}}}}}}Cd}{{{f{{l{c}}}}}{{Lh{{Lf{c}}}}}Cd}<=;{{{f{{l{c}}}}}{{B`{Hl}}}A`};{{Bj{f{E`}}}{{l{c}}}A`}{{Bj{f{{E`{Dn}}}}FnFn}{{l{An}}}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{c}}}}}FnCd}{{{f{{l{c}}}}}{{Ah{Fn}}}A`}{{{f{{l{c}}}}}{{f{Bj}}}Cd}{{Bjc}{{l{Ll}}}{{Kl{{E`{Ln}}}}}}{{Bjc}{{l{M`}}}{{Kl{{E`{{B`{Mb}}}}}}}}{{Bjc}{{l{Dl}}}{{Kl{{E`{{B`{{Gd{Dn}}}}}}}}}}{{Bjc}{{l{Dh}}}{{Kl{{E`{{B`{Df}}}}}}}}{{Bjc}{{l{Db}}}{{Kl{{E`{n}}}}}}{{Bjc}{{l{Db}}}{{Kl{{E`{{B`{n}}}}}}}}{{Bjc}{{l{D`}}}{{Kl{{E`{In}}}}}}{{Bjc}{{l{Jf}}}{{Kl{{E`{Md}}}}}}{{Bjc}{{l{M`}}}{{Kl{{E`{Mb}}}}}}{{Bj{Mf{Mb}}}{{l{M`}}}}{{Bjc}{{l{Mh}}}{{Kl{{E`{J`}}}}}}{{Bjc}{{l{Mj}}}{{Kl{{E`{Ml}}}}}}{{Bjc}{{l{An}}}{{Kl{{E`{d}}}}}}{{Bjc}{{l{Dl}}}{{Kl{{E`{{Gd{Dn}}}}}}}}{{Bjc}{{l{Dh}}}{{Kl{{E`{Df}}}}}}{{Bjc}{{l{Mj}}}{{Kl{{E`{{B`{Ml}}}}}}}}{{Bj{Mf{Ln}}}{{l{Ll}}}}{{Bj{Mf{J`}}}{{l{Mh}}}}{{Bjc}{{l{Mh}}}{{Kl{{E`{{B`{J`}}}}}}}}{{Bjc}{{l{D`}}}{{Kl{{E`{{B`{In}}}}}}}}{{Bjc}{{l{Ll}}}{{Kl{{E`{{B`{Ln}}}}}}}}{{Bj{Mf{Ml}}}{{l{Mj}}}}{{Bjc}{{l{Jf}}}{{Kl{{E`{{B`{Md}}}}}}}}{{Bjc}{{l{An}}}{{Kl{{E`{{B`{d}}}}}}}}{Bj{{l{{Ih{c}}}}}Il}{{{f{{l{c}}}}FnFn}{{l{c}}}A`}{{Bj{Gd{c}}}{{l{{Ih{c}}}}}Il}{{Bj{Gd{c}}Hj}{{l{{Ih{c}}}}}Il}{{BjGd}{{l{c}}}A`}{{{Lh{Mn}}{Gd{Gb}}IdId}{{l{c}}}Cd}{{{f{{l{c}}}}}{{l{c}}}K`}{{{f{{l{c}}}}e}GlA`Ad}{{{f{{l{c}}}}{f{{l{c}}}}}GlA`}10{{{f{{l{c}}}}}FnCd}{{{f{{l{An}}}}}Fn}0``{{{f{{l{j}}}}}{{`{{N`{}{{Bb{{B`{Af}}}}}}}}}}{{{f{{l{Dh}}}}}{{`{{N`{}{{Bb{{B`{{f{Dj}}}}}}}}}}}}{{{f{Bl{l{j}}}}}{{`{{Nb{}{{Bb{{B`{Af}}}}}}}}}}{{{f{{l{Dh}}}}}{{`{{Nb{}{{Bb{{B`{{f{Dj}}}}}}}}}}}}{{{f{{l{c}}}}}LbA`}{{{f{Bl{l{c}}}}}bCd}{{{f{{l{c}}}}nNd}{{Ah{{B`{n}}}}}Fd}{{{f{{l{c}}}}nNd}{{Ah{Lb}}}Fd}{{BjFnn}{{Ah{{l{An}}}}}}{{BjFnnn}{{Ah{{l{c}}}}}A`}{{BjFn}{{l{c}}}A`}{{BjFnnn}{{l{c}}}A`}{{{f{{l{c}}}}}{{l{c}}}Cd}{{{f{{l{j}}}}}{{l{j}}}}{{{f{{l{c}}}}}{{B`{Hj}}}Cd}{{{f{{l{c}}}}}{{f{Mn}}}Cd}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{Bl{l{c}}}}Bj}bCd}{{{f{{l{c}}}}}{{l{c}}}A`}{{{f{{l{c}}}}{f{Ch}}Nf}{{Ah{Af}}}A`}{{{f{{l{c}}}}Fne}{{Ah{{l{c}}}}}K`{{Cn{{f{Bl{l{c}}}}}{{Cf{B`}}}}}}{{{f{{l{c}}}}ndd{B`{J`}}}{{Ah{{l{c}}}}}Cd}{{{f{{l{c}}}}Fndd{B`{J`}}}{{Ah{{l{c}}}}}Cd}{{{f{{l{c}}}}eB`}{{Ah{{l{c}}}}}A`{{Hh{}{{Bb{Id}}}}}}{{{f{{l{c}}}}eg}{{Ah{{l{c}}}}}A`{{Hh{}{{Bb{Id}}}}}{{Ch{B`}{{Cf{B`}}}}}}{{{f{{l{c}}}}{f{Gl}}B`}{{Ah{{l{c}}}}}A`}{{{f{Bl{l{j}}}}}b}{{{f{Bl{l{c}}}}d}bCd}{{{f{Bl{l{j}}}}Eb}b}{{{f{Bl{l{c}}}}Id}bCd}{{{f{Bl{l{c}}}}Kb}bCd}{{{f{{l{c}}}}Mb}{{l{c}}}A`}{{{f{{l{c}}}}MbB`}{{l{c}}}A`}{{{f{Bl{l{c}}}}}bCd}{{{f{{l{c}}}}MbFn}{{l{c}}}Cd}0{{{f{{l{c}}}}d}{{l{c}}}A`}{{{f{{l{c}}}}Ej}{{l{c}}}A`}{{{f{{l{c}}}}Mb}{{Hl{{l{c}}{l{c}}}}}Cd}0{{{f{{l{c}}}}Dn}{{B`{n}}}A`}{{{f{{l{c}}}}Dn}LbFd}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{An}}}}}{{B`{Id}}}}{{{f{{l{c}}}}}B`A`}{{{f{{l{c}}}}}LbA`}{{{f{{l{c}}}}{B`{Fn}}}{{l{c}}}Cd}{{{f{{l{c}}}}{f{e}}}{{Ah{{l{c}}}}}Cd{{Kl{{E`{Id}}}}Nh}}{{{f{{l{c}}}}{f{El}}}{{Ah{{l{c}}}}}Cd}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Cd{}{{Gn{C`}}{Nj{C`}}{Bn{C`}}}}Cd}{{Kl{{E`{Id}}}}Nh}}{{{f{{l{c}}}}{f{El}}}{{l{c}}}{{Cd{}{{Gn{C`}}{Nj{C`}}{Bn{C`}}}}Cd}}`{{{f{{l{c}}}}dNl}{{Gd{{Gd{Nn}}}}}Cd}{{{f{{l{c}}}}}{{l{c}}}K`}{{{f{{l{Dh}}}}Fn}{{Ah{Af}}}}{{{f{Bl{l{j}}}}Eb}b}{{{f{Bl{l{Bh}}}}Eb}b}{{{f{{l{c}}}}}{{Ah{O`}}}A`}{{{f{{l{j}}}}}{{Ah{Ob}}}}{fc{}}{{{f{{l{Dl}}}}}Dd}{{{f{{l{c}}}}}{{Gd{B`}}}A`}{{{f{{l{c}}}}}{{Od{Gd{Gd{B`}}}}}A`}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{}{}}{{{f{{l{c}}}}e}gA`{}{}}{{c{l{e}}}g{}A`{}}{{c{f{{l{e}}}}}g{}A`{}}{{{f{{l{j}}}}c}{{Ah{{l{j}}}}}{{Cn{Cl}{{Cf{{Ah{Af}}}}}}}}{{{f{{l{Bh}}}}e}{{Ah{{l{g}}}}}{}{{Cn{{B`{Cl}}}{{Cf{{Ah{{B`{c}}}}}}}}Cj}Cd}{{{f{{l{j}}}}e}{{Ah{{l{g}}}}}{}{{Cn{{B`{Cl}}}{{Cf{{Ah{{B`{c}}}}}}}}Cj}Cd}{{{f{{l{Bh}}}}c}{{Ah{{l{Bh}}}}}{{Cn{Cl}{{Cf{{Ah{Af}}}}}}}}{{{f{{l{Bh}}}}c}{{Ah{Ef}}}{{Cn{Cl}{{Cf{{Ah{Af}}}}}}}}{{{f{{l{c}}}}g}{{Of{Dde}}}Cd{}{{Cn{{f{BlDf}}}{{Cf{{Of{be}}}}}}}}{{{f{{l{c}}}}i}{{Of{{l{k}}g}}}Cd{}{}{{Cn{}{{Cf{{Of{eg}}}}}}}Cd}{c{{Of{e}}}{}{}}0{{Bjg}{{Of{{l{i}}e}}}Hd{}{{Hh{}{{Bb{{Of{ce}}}}}}}{{Cd{}{{Hf{c}}}}Cd}}{{}{{Of{c}}}{}}0{{{f{{l{j}}}}{f{{l{c}}}}e}{{Ah{{l{j}}}}}Cd{{Cn{{B`{Cl}}B`}{{Cf{{Ah{{B`{Af}}}}}}}}}}{fOh}0{{{f{{l{c}}}}}{{Ah{{l{c}}}}}A`}{{{f{{l{c}}}}{f{Af}}}{{Ah{{f{{l{c}}}}}}}Cd}{{{f{Bl{l{c}}}}}bCd}{{{f{{l{c}}}}Fn}{}Cd}{{{f{{l{c}}}}Dn}{{B`{n}}}A`}{{{f{{l{c}}}}Dn}LbFd}{{}c{}}0{{{f{{l{Bh}}}}}Fn}{{Bjc}{{l{e}}}Hd{{Cd{}{{Hf{c}}}}Cd}}{{{f{{l{e}}}}c}{{l{e}}}Hd{{Cd{}{{Hf{c}}}}Cd}}{{{f{{l{c}}}}{Gd{Gb}}}{{l{c}}}Cd}{{{l{c}}Bj}{{l{c}}}Cd}{{{f{{E`{Oj}}}}e}c{}{{Ol{{f{El}}}{{Cf{c}}}}}}{{{f{{l{c}}}}Kb}{{l{c}}}Cd}{{{l{c}}}eA`{}}{{{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}e}gA`{}{}}{{{l{c}}e}gA`{}{}}2310{{c{l{e}}}g{}A`{}}{{c{f{{l{e}}}}}g{}A`{}}543201542367453201452310{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}Cd{{Cn{{B`{Cl}}B`}{{Cf{{B`{Af}}}}}}}}{{{f{{l{Bh}}}}{f{{l{c}}}}e}{{l{Bh}}}Cd{{Cn{{B`{Cl}}B`}{{Cf{{B`{Af}}}}}}}}{{{f{{l{c}}}}{f{Gl}}{f{{l{c}}}}}{{Ah{{l{c}}}}}{{Cd{}{{Nj{C`}}}}}}````{{{A@d{}{{On{c}}{A@`{e}}{A@b{g}}}}{A@d{}{{On{c}}{A@`{e}}{A@b{g}}}}}e{}{}{}}{{{A@d{}{{On{c}}{A@`{e}}{A@b{g}}}}c}e{}{}{}}{{c{A@d{}{{On{c}}{A@`{e}}{A@b{g}}}}}e{}{}{}}{{{A@d{}{{On{c}}{A@`{e}}{A@b{g}}}}{A@d{}{{On{c}}{A@`{e}}{A@b{g}}}}}g{}{}{}}{{{A@d{}{{On{c}}{A@`{e}}{A@b{g}}}}c}g{}{}{}}{{c{A@d{}{{On{c}}{A@`{e}}{A@b{g}}}}}g{}{}{}}{{{A@d{}{{On{c}}{A@`{e}}{A@b{g}}}}}e{}{}{}}65654654650654654````````{{fh}b}000{{{f{BlA@f}}}b}{{{f{Bl{A@h{c}}}}}b{A@jNh}}{{{f{BlA@l}}}b}{{{f{BlA@n}}}b}{{{f{Bl{AA`{c}}}}}bA`}{{{f{Bl{A@h{c}}}}{B`{e}}}b{A@jNh}{{Kl{c}}}}{{{f{BlA@f}}{B`{c}}}b{}}{{{f{BlA@f}}c}b{}}{{{f{Bl{A@h{c}}}}e}b{A@jNh}{{Kl{c}}}}{{{f{BlA@l}}d}b}5{f{{f{c}}}{}}000{{{f{Bl}}}{{f{Blc}}}{}}000{{{f{{A@h{c}}}}}{{A@h{c}}}{A@jNh}}{{{f{A@l}}}A@l}{{{f{A@n}}}A@n}{{{f{{AA`{c}}}}}{{AA`{c}}}{A`AAb}}{{f{f{Blc}}}b{}}000{fb}000{Fn{{f{c}}}{}}000{Fn{{f{Blc}}}{}}000{Fnb}000{A@f{{l{c}}}Cd}{{{A@h{{E`{Dn}}}}}Fb}{{{A@h{Dj}}}Dd}{AAdDd}{AAfFb}{A@lGl}`{{{AA`{c}}}{{l{c}}}A`}`{cc{}}000{{Bje}AAh{}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bje}AAh{}{{Bf{}{{Bb{c}}}}}}{{Bj{f{{E`{c}}}}}AAh{}}{{Bj{f{{E`{{B`{c}}}}}}}AAh{}}{{}Fn}000{{}c{}}000`{{BjFn}{{A@h{c}}}{A@jNh}}{{BjFn}A@l}{{BjFn}A@n}{{BjFn}{{AA`{c}}}A`}{{{f{BlA@f}}}b}{{{f{BlA@l}}}b}{{{f{BlA@n}}}b}{{{f{Bl{AA`{c}}}}}bA`}{fc{}}000{c{{Of{e}}}{}{}}000{{}{{Of{c}}}{}}000{fOh}000<<<<````````{{{f{BlAAj}}{f{Hd}}}b}{{{f{BlAAj}}}b}{{{f{BlAAl}}}b}{{{f{BlAAn}}c}b{{Bf{}{{Bb{{B`{d}}}}}}I`}}{{{f{Bl{AB`{c}}}}e}bA`{{Bf{}{{Bb{B`}}}}I`}}{{{f{BlABb}}}b}43{{{f{BlABd}}}b}{{{f{BlABf}}}b}{{{f{BlAAn}}}b}{{{f{BlABh}}}b}{{{f{Bl{AB`{c}}}}}bA`}{{{f{BlAAj}}{B`{{f{Hd}}}}}b}{{{f{BlAAj}}{B`{{f{Af}}}}}{{Ah{b}}}}{{{f{BlABb}}{B`{{f{Af}}}}}{{Ah{b}}}}{{{f{Bl{AB`{c}}}}{B`{{f{E`}}}}}bA`}{{{f{BlABb}}{f{Af}}}{{Ah{b}}}}{{{f{BlAAj}}{f{Af}}}{{Ah{b}}}}{{{f{BlAAl}}{f{Af}}}{{Ah{b}}}}{{{f{BlABd}}{f{Af}}}{{Ah{b}}}}{{{f{BlABf}}{f{Af}}}{{Ah{b}}}}{{{f{BlAAn}}{f{Af}}}{{Ah{b}}}}{{{f{BlABh}}{f{Af}}}{{Ah{b}}}}{{{f{Bl{AB`{c}}}}{f{Af}}}{{Ah{b}}}A`}{{{f{Bl{AB`{c}}}}{f{E`}}}bA`}{{{f{BlABd}}c}b{{Bf{}{{Bb{{B`{{f{Dj}}}}}}}}I`}}{{{f{BlABf}}c}b{{Bf{}{{Bb{{B`{{f{{E`{Dn}}}}}}}}}}I`}}{{{f{BlABd}}c}b{{Bf{}{{Bb{{f{Dj}}}}}}}}{{{f{BlABf}}c}b{{Bf{}{{Bb{{f{{E`{Dn}}}}}}}}}}{{{f{Bl{AB`{c}}}}e}bA`{{Bf{}{{Bb{}}}}}}{{{f{Bl{AB`{c}}}}e}bA`{{Bf{}{{Bb{}}}}I`}}{f{{f{c}}}{}}000000{{{f{Bl}}}{{f{Blc}}}{}}000000`{{}AAj}{{}AAl}{Fn{{f{c}}}{}}000000{Fn{{f{Blc}}}{}}000000{Fnb}000000{{{f{ABd}}}d}{{{f{ABf}}}d}{{{f{AAn}}}d}{{{f{{AB`{c}}}}}dA`}{{{f{ABb}}}d}{{{f{ABd}}}{{f{Mn}}}}{{{f{ABf}}}{{f{Mn}}}}{{{f{AAn}}}{{f{Mn}}}}{{{f{{AB`{c}}}}}{{f{Mn}}}A`}{{{f{ABb}}}{{f{Mn}}}}{{{f{BlAAj}}}Ef}{{{f{BlAAl}}}Ef}{{{f{BlABh}}}Ef}{{{f{BlABb}}}Ef}{cc{}}000000{{{f{Eb}}FnFnBj}{{Fh{ABb}}}}{{}Fn}000000{{{f{BlABd}}}Gb}{{{f{BlABf}}}Gb}{{{f{BlAAn}}}Gb}{{{f{Bl{AB`{c}}}}}GbA`}{{{f{BlABb}}}Gb}{{}c{}}000000{{BjFn{B`{Eb}}}AAj}{{BjFn{B`{Eb}}}AAl}{{BjFnFn}ABd}{{BjFnFn}ABf}{{BjFnFn}AAn}{{BjFn}ABh}{{BjFnFnEb}{{AB`{c}}}A`}{{BjFnFnEbEb}{{AB`{c}}}A`}{c{{Of{e}}}{}{}}000000{{}{{Of{c}}}{}}000000{fOh}000000;;;;;;;````{{fh}b}{f{{f{c}}}{}}{{{f{Bl}}}{{f{Blc}}}{}}{{{f{Fj}}}Fj}{{f{f{Blc}}}b{}}{fb}{{}Fj}{Fn{{f{c}}}{}}{Fn{{f{Blc}}}{}}{Fnb}{{{f{Fj}}{f{Fj}}}d}{{f{f{c}}}d{}}0{{{f{Fj}}{f{BlH`}}}Hb}{cc{}}{{{f{Fj}}{f{Blc}}}bABj}{{}Fn}{{}c{}}{{{f{Fj}}}d}{fc{}}{c{{Of{e}}}{}{}}{{}{{Of{c}}}{}}{fOh}5``{{ABlBj}{{l{c}}}Cd}{{ABn{f{{l{c}}}}}{{l{c}}}Cd}10{{ABnBjEb}{{l{c}}}Cd}0{{ABlBj}{{Of{{l{c}}e}}}Cd{}}{{ABn{f{{l{c}}}}}{{Of{{l{c}}e}}}Cd{}}10{{ABnBjEb}{{Of{{l{c}}e}}}Cd{}}0`{AC`AC`}``{{ACbBjEb}e{}{{ACd{c}}}}{{eBjEb}ACd{}{{Hn{}{{Bb{c}}}}}}````{f{{f{c}}}{}}00{{{f{Bl}}}{{f{Blc}}}{}}00{Fn{{f{c}}}{}}00{Fn{{f{Blc}}}{}}00{Fnb}00{cc{}}00{{}Fn}00{{}c{}}00000{{{f{ACf}}}ACh}{{{f{ACj}}Eb}ACl}{{{f{BlACh}}}{{B`{c}}}{}}{{{f{BlACl}}}{{B`{c}}}{}}{{{f{Bl{ACn{c}}}}}{{B`{e}}}Bf{}}21{{{f{Bl{ACn{c}}}}}{{B`{e}}}Gj{}}`{{{f{ACh}}}{{Hl{Fn{B`{Fn}}}}}}{{{f{ACl}}}{{Hl{Fn{B`{Fn}}}}}}{{{f{{ACn{c}}}}}{{Hl{Fn{B`{Fn}}}}}Bf}{c{{Of{e}}}{}{}}00{{}{{Of{c}}}{}}00{fOh}00<<<`````````````````````````{{fh}b}0000{{}Gh}{{}If}{{GhGh}Gh}{{IfIf}If}{{{f{BlGh}}Gh}b}{{{f{BlIf}}If}b}3210{{{f{Gh}}}Ml}0{{{f{If}}}Dn}05432{f{{f{c}}}{}}000000{{{f{Bl}}}{{f{Blc}}}{}}000000{{{f{{Lf{c}}}}}{{Fh{Ff}}}Cd}{{{f{{Lf{c}}}}}{{Lf{c}}}Cd}{{{f{{Jb{c}}}}}{{Jb{c}}}Cd}{{{f{AD`}}}AD`}{{{f{Gh}}}Gh}{{{f{If}}}If}{{f{f{Blc}}}b{}}0000{fb}0000{{{f{BlADb}}}b}0{GhGh}{IfIf}{{{f{Gh}}Gh}d}{{{f{If}}If}d}{{}{{Lf{c}}}Cd}{{}{{Jb{c}}}Cd}{{}Gh}{{}If}{Fn{{f{c}}}{}}{{{f{{Ld{c}}}}}{{f{e}}}Cd{}}111111{Fn{{f{Blc}}}{}}000000{{GhGh}Gh}{{IfIf}If}{{}d}{{{f{Ff}}}{{B`{Id}}}}{{{Jb{c}}Id}{{Jb{c}}}Cd}{{{f{{Jb{c}}}}}{{B`{Id}}}Cd}{{{Jb{c}}{B`{Id}}}{{Jb{c}}}Cd}{Fnb}000000<;5{{{f{Gh}}{f{Gh}}}d}{{{f{If}}{f{If}}}d}7{{{f{BlGh}}c}b{{Hh{}{{Bb{Gh}}}}}}{{{f{BlIf}}c}b{{Hh{}{{Bb{If}}}}}}{{{Jb{c}}d}{{Jb{c}}}Cd}{{{Jb{c}}{B`{d}}}{{Jb{c}}}Cd}{{{f{{Jb{c}}}}Gh}{{Jb{c}}}Cd}{{{f{{Jb{c}}}}Gh}{{Jb{e}}}CdCd}{{{Jb{c}}If}{{Jb{c}}}Cd}{{{Jb{c}}{B`{If}}}{{Jb{c}}}Cd}{{{f{{Jb{c}}}}{f{BlH`}}}HbCd}{{{f{AD`}}{f{BlH`}}}Hb}{{{f{Gh}}{f{BlH`}}}Hb}0000{{{f{If}}{f{BlH`}}}Hb}0000{cc{}}000000{Ml{{B`{Gh}}}}{Dn{{B`{If}}}}{MlGh}0{DnIf}010{cGh{{Hh{}{{Bb{Gh}}}}}}{cIf{{Hh{}{{Bb{If}}}}}}{{{f{Dj}}}{{B`{Gh}}}}{{{f{Dj}}}{{B`{If}}}}{{{f{{Jb{c}}}}}{{B`{Id}}}Cd}{{{f{{Jb{c}}}}}dCd}{{{f{If}}}d}{{{f{Ff}}}If}{{{f{{Jb{c}}}}}IfCd}0{{{f{{Jb{c}}}}}{{B`{f}}}Cd}0{{{f{Bl{Lf{c}}}}}{{f{Bl{Jb{c}}}}}Cd}{{{f{If}}}Kb}{{}Fn}000000{{{f{BlGh}}Gh}b}{{{f{BlIf}}If}b}{{GhGh}Gh}{{IfIf}If}{{{f{Gh}}Gh}d}{{{f{If}}If}d}{{}c{}}000000{Ghc{}}{Ifc{}}{{{f{Gh}}}d}{{{f{If}}}d}{{{f{{Jb{c}}}}}dCd}21{{{f{{Jb{c}}}}}KbCd}111{{{f{Gh}}}{{ADd{Gh}}}}{{{f{If}}}{{ADd{If}}}}{{{f{Gh}}}{{ADf{Gh}}}}{{{f{If}}}{{ADf{If}}}}{{}d}{{}{{f{{ADj{ADh}}}}}}{{{f{Ff}}}{{B`{Lb}}}}{{{Jb{c}}}{{Jb{c}}}Cd}{{{f{{Jb{c}}}}}{{B`{Lb}}}Cd}{{{Jb{c}}B`}{{Jb{c}}}Cd}{{{f{{Jb{c}}}}{Jb{c}}}{{ADl{c}}}Cd}4231{{{Jb{c}}}{{Lf{c}}}Cd}{GhGh}{IfIf}{{{f{{Lf{c}}}}}{{Lj{{Jb{c}}}}}Cd}{{{f{BlGh}}Gh}b}{{{f{BlIf}}If}b}{{{f{BlGh}}Ghd}b}{{{f{BlIf}}Ifd}b}{{{f{Bl{Jb{c}}}}{B`{Id}}}bCd}{{{f{Bl{Jb{c}}}}d}bCd}{{{f{BlIf}}d}b}{{{f{Bl{Jb{c}}}}If}bCd}{{{f{Bl{Jb{c}}}}B`}bCd}033{{{f{Bl{Jb{c}}}}Kb}bCd}{{{f{BlIf}}Kb}b}{{{Jb{c}}Kb}{{Jb{c}}}Cd}{{{Jb{c}}{B`{Kb}}}{{Jb{c}}}Cd}{{GhGh}Gh}{{IfIf}If}>=10{{{Lf{c}}}{{Jb{c}}}Cd}{fc{}}0000{{{f{BlGh}}Gh}b}{{{f{BlIf}}If}b}{c{{Of{e}}}{}{}}000000{{}{{Of{c}}}{}}000000{{{f{{Lf{c}}}}}{{B`{{Lj{{Jb{c}}}}}}}Cd}{{{f{{Lf{c}}}}}{{B`{{Jd{{Jb{c}}}}}}}Cd}{fOh}000000:9{{{f{{Lf{c}}}}}{{f{{ADn{Ff}}}}}Cd}{{}c{}}000000{ADbADb}0{{{f{{Lf{c}}}}}{{Jd{{Jb{c}}}}}Cd}````{{fh}b}{{{f{{AE`{c}}}}Fn}{{Hl{{AE`{c}}{AE`{c}}}}}Il}{e{{AE`{c}}}Il{{Hh{}{{Bb{{B`{{f{c}}}}}}}}}}{e{{AE`{c}}}Il{{Hh{}{{Bb{{f{c}}}}}}}}{{AEbe}g{}{{Hh{}{{Bb{c}}}}}{}}0{{{f{Ij}}}{{f{AEd}}}}{{{f{{AE`{c}}}}}{{f{AEd}}}Il}{{{f{Bl{AE`{c}}}}}{{f{BlAEd}}}Il}{f{{f{c}}}{}}{{{f{Bl}}}{{f{Blc}}}{}}`{{{f{{AE`{c}}}}Fn}dIl}{{{f{{AE`{c}}}}}{{AE`{c}}}{IlAAb}}{{f{f{Blc}}}b{}}{fb}{Fn{{f{c}}}{}}{Fn{{f{Blc}}}{}}{Fnb}{{{f{{AE`{c}}}}}{{f{AEb}}}Il}{{{f{{f{Ij}}}}{f{{f{Ij}}}}}d}{{{f{Ij}}{f{Ij}}}d}{{{f{{AE`{c}}}}{f{BlH`}}}Hb{IlAEf}}{cc{}}{{{Gd{c}}}{{AE`{c}}}Il}{{FnAEb}{{AE`{c}}}Il}{{{f{{AE`{c}}}}Fn}{{B`{{f{c}}}}}Il}{{}AEb}{{{f{Hj}}{f{{AE`{c}}}}{f{{AE`{c}}}}}{{AE`{c}}}Il}{{AEb{f{Hj}}cc}{{AE`{e}}}{}Il}{{{f{Hj}}{f{{AE`{c}}}}e}{{AE`{c}}}Il{}}{{{f{Hj}}c{f{{AE`{e}}}}}{{AE`{e}}}{}Il}{{}Fn}{{}c{}}{{{f{{AE`{c}}}}}eIl{}}{{{f{{AE`{c}}}}Fn}dIl}{{fFn}d}1{{{f{{AE`{c}}}}}{{AEj{egAEh}}}Il{}{}}{{{f{{AE`{c}}}}}{{AEj{{f{c}}{AEl{c}}AEh}}}Il}{{{f{{AE`{c}}}}}FnIl}0`{db}{{{f{Bl{AE`{c}}}}{B`{Hj}}}bIl}{{{f{Bl{AE`{c}}}}FnFn}bIl}{{fFnFn}c{}}01{{{f{{AE`{c}}}}Fn}{{Hl{{Fh{Hd}}{Fh{Hd}}}}}Il}0{{{f{Ij}}}{{Fh{Ij}}}}{{{f{{AE`{c}}}}}{{Fh{Hd}}}Il}{fc{}}{g{{Of{{AE`{c}}e}}}Il{}{{Hh{}{{Bb{{Of{{f{c}}e}}}}}}}}{g{{Of{{AE`{c}}e}}}Il{}{{Hh{}{{Bb{{Of{{B`{{f{c}}}}e}}}}}}}}{{AEbg}{{Of{ie}}}{}{}{{Hh{}{{Bb{{Of{ce}}}}}}}{}}0{c{{Of{e}}}{}{}}{{}{{Of{c}}}{}}{fOh}{{{f{Ij}}}{{f{Dj}}}}{{}{{f{Dj}}}}{{{f{{AE`{c}}}}}{{B`{{f{Hj}}}}}Il}{{{f{{AE`{c}}}}Fn}{{f{c}}}Il}0{{{f{{AE`{c}}}}Fn}eIl{}}{{{f{{AE`{c}}}}}eIl{}}{{{f{{AE`{c}}}}}{{AEl{c}}}Il}{{}c{}}{{{f{{AE`{c}}}}{B`{Hj}}}{{Fh{Hd}}}Il}{{{AE`{c}}{B`{Hj}}}{{AE`{c}}}Il}0`{{{f{Bl{AEn{c}}}}}bIl}0{{{f{Bl{AEn{c}}}}{B`{c}}}bIl}{{{f{Bl{AEn{c}}}}{f{AEd}}}bIl}{{{f{Bl{AEn{c}}}}c}bIl}{{{f{Bl{AEn{c}}}}{f{AEd}}}{{Ah{b}}}Il}{f{{f{c}}}{}}{{{f{Bl}}}{{f{Blc}}}{}}{{}{{AEn{c}}}Il}{Fn{{f{c}}}{}}{Fn{{f{Blc}}}{}}{Fnb}{{{AEn{c}}}{{AF`{c}}}Il}{cc{}}{{{f{{AEn{c}}}}BjFnFn}{{Fh{ABb}}}Il}{{}Fn}{{}c{}}{{BjFn}{{AEn{c}}}Il}{{{f{Bl{AEn{c}}}}}AfIl}{c{{Of{e}}}{}{}}{{}{{Of{c}}}{}}{fOh}5````{{{f{BlAFb}}}b}{{{f{BlAFb}}{B`{{f{AEd}}}}}b}{{{f{BlAFb}}{f{AEd}}}b}{f{{f{c}}}{}}{{{f{Bl}}}{{f{Blc}}}{}}`{Fn{{f{c}}}{}}{Fn{{f{Blc}}}{}}{Fnb}{{{f{AFd}}{f{BlH`}}}Hb}{cc{}}{{{f{AFb}}BjFnFn}{{Fh{ABb}}}}{{BjFn}{{Fh{AFb}}}}{{}AFf}{{}AEb}{{}Fn}{{}c{}}{{}d}`{{AFhAFfAEb}b}{{{f{BlAFb}}}Af}{c{{Of{e}}}{}{}}{{}{{Of{c}}}{}}{fOh}6````````````````````````````````````````````{{fh}b}{{{f{AFj}}}n}{{{f{{AFn{}{{AFl{c}}}}}}g}{{AFn{}{{AFl{c}}}}}{}{}{{Ch{{B`{e}}}{{Cf{{B`{c}}}}}}Cj}}{{{f{AG`}}{f{Ch}}}AG`}{{{f{AG`}}{f{Ch}}}{{l{c}}}Cd}{{{f{{AFn{}{{AFl{c}}}}}}i{f{Bl{E`{g}}}}}b{}{}{}{{Ch{{B`{e}}{f{g}}}{{Cf{g}}}}}}{{{f{{AFn{}{{AFl{c}}}}}}g}{{AFn{}{{AFl{c}}}}}{}{}{{Ch{e}{{Cf{c}}}}Cj}}{{{f{AGb}}Ej}El}{{{f{AGb}}{f{{E`{En}}}}{f{F`}}}{{Ah{El}}}}{{{f{AGd}}}{{Ah{El}}}}`{f{{f{c}}}{}}{{{f{Bl}}}{{f{Blc}}}{}}{{{f{AGf}}{f{Eb}}}{{Ah{Af}}}}0{{{f{AGf}}{f{Eb}}Fj}{{Ah{Af}}}}{{{f{AGh}}}AGh}{{f{f{Blc}}}b{}}{fb}{Fn{{f{c}}}{}}{Fn{{f{Blc}}}{}}{Fnb}{{{f{AGh}}{f{AGh}}}d}{{{f{{AGj{}{{Bb{c}}}}}}e}c{}{}}0{{{f{AGl}}}{{Ah{Af}}}}{{{f{AGl}}}{{Ah{{Hl{Af{AGn{Mb}}}}}}}}`{{{f{AH`}}c}{{Ah{AH`}}}{}}{{{f{AHb}}{f{Gl}}}{{Ah{{l{c}}}}}Cd}`{{{f{AGh}}{f{BlH`}}}Hb}{cc{}}`{{BjcFn}AHd{}}{{BjFn}AHf}`{{{f{AHh}}Fn}{{Ah{Ib}}}}{{{f{AHh}}Fn}Ib}{{{f{{AHj{}{{Bb{c}}}}}}e}c{}{}}0{{{f{AGh}}{f{Blc}}}bABj}{{}Fn}{{}c{}}{{{f{AGh}}}d}{{{f{AHl}}}{{Ah{Gl}}}}{{{f{AHn}}}{{Ah{Gl}}}}66{{{f{AFj}}}{{B`{c}}}{}}{{{f{AFj}}}{{B`{n}}}}{{{f{AI`}}}{{B`{c}}}{}}2{{{f{AFj}}}{{B`{{Hl{cc}}}}}{}}{{{f{AGd}}}{{Ah{Fn}}}}{{{f{AIb}}FnFn}{{l{c}}}Cd}{{{f{{AGj{}{{Bb{c}}}}}}e}c{}{}}0{{{f{AGl}}}{{Ah{{AGn{Mb}}}}}}{{{f{AI`}}nNd}{{Ah{{B`{c}}}}}{}}{{{f{AId}}}AId}{{{f{AIf}}{f{Ch}}Nf}{{Ah{Af}}}}`{{{f{AIh}}c{B`{e}}}{{Ah{AIh}}}{{Hh{}{{Bb{Id}}}}}{}}{{{f{AIh}}ci}{{Ah{AIh}}}{{Hh{}{{Bb{Id}}}}}{}{}{{Ch{{B`{e}}}{{Cf{{B`{g}}}}}}}}`{{{f{AIh}}{f{Gl}}{B`{c}}}{{Ah{AIh}}}{}}{{{f{AIj}}Mb}{{l{c}}}Cd}{{{f{AIl}}Mbc}{{l{e}}}{}Cd}`{{{f{AGb}}d}{{l{c}}}Cd}{{{f{AGb}}Ej}{{l{c}}}Cd}{{{f{AIn}}Dn}{{B`{n}}}}{{{f{AFj}}}{{B`{c}}}{}}{{{f{AJ`}}{f{c}}}{{Ah{AJ`}}}Nh}{{{f{AJb}}{f{c}}}AJbNh}{{{f{AJd}}}{{Gd{{f{{E`{Dn}}}}}}}}{fc{}}{c{{Of{e}}}{}{}}{{}{{Of{c}}}{}}{fOh}{{{f{AGd}}}{{Ah{AGd}}}}9{{}c{}}`{{{f{AJf}}{f{Gl}}{f{{l{c}}}}}{{Ah{{l{c}}}}}Cd}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}CdCd{{Ch{ff}{{Cf{}}}}}{{Ch{f}{{Cf{}}}}}{{Ch{f}{{Cf{}}}}}Cd}{{{l{c}}{l{e}}gik}{{l{m}}}CdCd{{Ch{}{{Cf{}}}}}{{Ch{}{{Cf{}}}}}{{Ch{}{{Cf{}}}}}Cd}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}CdCdHd{{Cn{ff}{{Cf{g}}}}}{{Cd{}{{Hf{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}CdCd{{AJh{B`B`}}}Cd}{{{f{{l{c}}}}{f{{l{e}}}}g}bCdCd{{Cn{B`B`}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}DdCdCd{{Cn{{f{BlDf}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}CdCd{}{{Cn{}{{Cf{g}}}}}Cd}{{{f{{l{c}}}}{f{{l{e}}}}iBj}{{l{k}}}CdCd{HdAJj}{{Cn{ff}{{Cf{g}}}}}{{Cd{}{{Hf{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iBj}{{l{k}}}CdCdHd{{Cn{ff}{{Cf{g}}}}}{{Cd{}{{Hf{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}CdCdHd{{Cn{}{{Cf{g}}}}}{{Cd{}{{Hf{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Ah{Af}}}CdCd{{Cn{ff}{{Cf{{Fh{Hd}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}CdCd{{Cn{ff}{{Cf{{Fh{Hd}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{Of{{l{m}}i}}}CdCd{}{}{{Cn{B`B`}{{Cf{{Of{{B`{g}}i}}}}}}}Cd}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}CdCdCd{{AJl{B`B`B`}}}Cd}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Of{{l{m}}i}}}CdCdHdAJn{{Cn{ff}{{Cf{{Of{gi}}}}}}}{{Cd{}{{Hf{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kBj}{{Of{{l{m}}i}}}CdCdHdAJn{{Cn{ff}{{Cf{{Of{gi}}}}}}}{{Cd{}{{Hf{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Of{{l{c}}g}}}CdCdAJn{{Cn{ff}{{Cf{{Of{{Fh{Hd}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Of{{l{o}}k}}}CdCdCd{}{}{{Cn{B`B`B`}{{Cf{{Of{{B`{i}}k}}}}}}}Cd}{{{f{{l{c}}}}i}{{Of{{l{k}}g}}}Cd{}{}{{Cn{B`}{{Cf{{Of{{B`{e}}g}}}}}}}Cd}{{{f{{l{c}}}}i}{{Of{{l{k}}g}}}Cd{}{}{{Cn{}{{Cf{{Of{eg}}}}}}}Cd}{{{f{{l{c}}}}i}{{Of{{l{k}}g}}}Cd{HdAJj}AJn{{Cn{f}{{Cf{{Of{eg}}}}}}}{{Cd{}{{Hf{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Cd{{AK`{B`}}}Cd}{{{f{{l{c}}}}e}{{l{g}}}CdAK`Cd}{{{f{{l{c}}}}g}{{l{i}}}CdHd{{Cn{f}{{Cf{e}}}}}{{Cd{}{{Hf{e}}}}}}{{{l{c}}g}{{l{i}}}CdHd{{Cn{}{{Cf{e}}}}}{{Cd{}{{Hf{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Cd{HdAJj}{{Cn{f}{{Cf{e}}}}}{{Cd{}{{Hf{e}}}}}}0{{{f{{l{c}}}}}FnA`}0{{KbKb}Kb}{{{f{El}}Id}{{Ah{b}}}}{{{f{{AKb{Id}}}}Id}{{Ah{b}}}}{{{f{{E`{En}}}}{f{{E`{d}}}}{f{{E`{d}}}}}{{Ah{AKd}}}}{{{f{{E`{En}}}}{f{{E`{d}}}}{f{{E`{d}}}}}{{Ah{{AKf{Mb}}}}}}{{Bj{f{{E`{En}}}}{f{{E`{d}}}}{f{{E`{d}}}}}{{Ah{AKh}}}}{{Bj{f{{E`{Af}}}}}{{Ah{AKh}}}}{{{f{Af}}}{{Ah{Gb}}}}{{{f{{E`{Af}}}}}{{Ah{AKd}}}}{{{f{{E`{Af}}}}}{{Ah{AKh}}}}00````{{fh}b}{{{f{{l{c}}}}eAKjd}{{Gd{Id}}}Cd{{Bf{}{{Bb{B`}}}}}}{f{{f{c}}}{}}{{{f{Bl}}}{{f{Blc}}}{}}{{{f{AKj}}}AKj}{{f{f{Blc}}}b{}}{fb}{{}AKj}{Fn{{f{c}}}{}}{Fn{{f{Blc}}}{}}{Fnb}{{{f{AKj}}{f{AKj}}}d}{{f{f{c}}}d{}}0{{{f{AKj}}{f{BlH`}}}Hb}{cc{}}{{{f{AKj}}{f{Blc}}}bABj}{{}Fn}{{}c{}}{{{f{{E`{f}}}}cIde}{{Gd{Id}}}{{Bf{}{{Bb{B`}}}}}{{Ch{fFnf}{{Cf{d}}}}}}{fc{}}{c{{Of{e}}}{}{}}{{}{{Of{c}}}{}}{fOh}5`{{Fn{f{Bl{Gd{d}}}}}b}```{{{f{AKl}}FnFn}AKl}0{{Fn{f{{E`{En}}}}{f{BlF`}}}{{Ah{{AKn{El}}}}}}```{{fh}b}0{f{{f{c}}}{}}0{{{f{Bl}}}{{f{Blc}}}{}}0{{{f{Ej}}}Ej}{{{f{F`}}}F`}{{f{f{Blc}}}b{}}0{fb}0{{}Ej}{{}F`}{Fn{{f{c}}}{}}0{Fn{{f{Blc}}}{}}0``{Fnb}0{{{f{Ej}}{f{Ej}}}d}{{{f{F`}}{f{F`}}}d}{{f{f{c}}}d{}}000{{{f{Ej}}{f{BlH`}}}Hb}{{{f{F`}}{f{BlH`}}}Hb}{cc{}}{{{f{F`}}}Ej}{{{f{Ej}}}F`}2{{{f{Ej}}{f{Blc}}}bABj}{{{f{F`}}{f{Blc}}}bABj}{{}Fn}0{{}c{}}0``````{{}Ej}{{}F`}``{{{f{AKl}}FnFn}AKl}0{fc{}}0{c{{Of{e}}}{}{}}0{{}{{Of{c}}}{}}0{fOh}077{{Ejd}Ej}{{F`d}F`}1010{{F`c}F`{{Hh{}{{Bb{d}}}}}}210{EjEj}{F`F`}`{AL`Mb}00{{{f{Dj}}{f{Eb}}}{{Ah{Df}}}}{{}d}{{}Fn}01````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}0000000000000000000000000000000{{{f{Ef}}}d}{{{f{Jh}}{f{Jh}}}c{}}{{GlGl}c{}}{{{f{Gl}}{f{Gl}}}c{}}{{DdDd}c{}}{{{f{Dd}}{f{Dj}}}c{}}{{{f{Dd}}{f{Dd}}}c{}}{{{f{Fb}}{f{{E`{Dn}}}}}c{}}{{FbFb}c{}}{{{f{Fb}}{f{Fb}}}c{}}{{{f{Ib}}{f{Ib}}}Ib}{{{f{Ef}}{f{Af}}}{{Ah{Af}}}}{{{f{Ed}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Of{AfALb}}}{}}000000{{{f{Dd}}{f{Af}}}{{Ah{Af}}}}{{{f{Fb}}{f{Af}}}{{Ah{Af}}}}{{{f{Gl}}{f{Af}}}{{Ah{Af}}}}{{{f{Ed}}{f{Al}}}Af}{{{f{Ef}}{f{Al}}}Af}{{{f{Gl}}{f{Al}}}Af}{{{f{Dd}}{f{Al}}}Af}{{{f{Fb}}{f{Al}}}Af}{{{f{{AF`{c}}}}{f{Al}}}AfIl}{{{f{Gl}}}d}{{{f{Gl}}}{{B`{d}}}}{{{f{Ed}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{Ef}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{Ed}}Bj}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{Ef}}Bj}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}54{{{f{Ef}}c}Ef{{Ch{{B`{Af}}}{{Cf{{B`{Af}}}}}}Cj}}{{{f{Gl}}c}Gl{{Ch{{B`{d}}}{{Cf{{B`{d}}}}}}Cj}}{{{f{Dd}}c}Dd{{Ch{{B`{{f{Dj}}}}}{{Cf{{B`{{ALd{Dj}}}}}}}}Cj}}{{{f{Fb}}c}Fb{{Ch{{B`{{f{{E`{Dn}}}}}}}{{Cf{{B`{{ALd{{E`{Dn}}}}}}}}}}Cj}}{{{f{{AF`{c}}}}e}{{AF`{c}}}Il{{Ch{{B`{{f{c}}}}}{{Cf{{B`{c}}}}}}Cj}}{{{f{Ef}}c}Ef{{Cn{Cl}{{Cf{Af}}}}}}{{{f{Ed}}e}{{l{g}}}{}{{Cn{{B`{Cl}}}{{Cf{{B`{c}}}}}}Cj}Cd}{{{f{Ef}}e}{{l{g}}}{}{{Cn{{B`{Cl}}}{{Cf{{B`{c}}}}}}Cj}Cd}{{{f{Ed}}c}Ed{{Cn{Cl}{{Cf{Af}}}}}}{{{f{ALf}}c}Af{{Ch{{f{Af}}}{{Cf{Af}}}}}}{{{f{ALh}}c}Af{{Ch{{f{Af}}}{{Cf{Af}}}}}}{{{f{Gl}}{f{Ch}}}Gl}{{{f{Dd}}{f{Ch}}}Dd}{{{f{Fb}}{f{Ch}}}Fb}{{{f{Gl}}{f{Ch}}}{{l{c}}}Cd}{{{f{Dd}}{f{Ch}}}{{l{c}}}Cd}{{{f{Fb}}{f{Ch}}}{{l{c}}}Cd}{{{f{Dd}}c}Dd{{Cn{{f{Dj}}}{{Cf{{f{Dj}}}}}}}}{{{f{Fb}}c}Fb{{Cn{{f{{E`{Dn}}}}}{{Cf{{f{{E`{Dn}}}}}}}}}}{{{f{Ed}}{f{Ch}}}{{Ah{Ed}}}}{{{f{Ef}}{f{Ch}}}{{Ah{Ef}}}}{{{f{Ef}}e{f{Bl{E`{c}}}}}b{}{{Ch{{B`{Af}}{f{c}}}{{Cf{c}}}}}}{{{f{Gl}}e{f{Bl{E`{c}}}}}b{}{{Ch{{B`{d}}{f{c}}}{{Cf{c}}}}}}{{{f{Dd}}e{f{Bl{E`{c}}}}}b{}{{Ch{{B`{{f{Dj}}}}{f{c}}}{{Cf{c}}}}}}{{{f{Fb}}e{f{Bl{E`{c}}}}}b{}{{Ch{{B`{{f{{E`{Dn}}}}}}{f{c}}}{{Cf{c}}}}}}{{{f{{AF`{c}}}}g{f{Bl{E`{e}}}}}bIl{}{{Ch{{B`{{f{c}}}}{f{e}}}{{Cf{e}}}}}}{{{f{Ef}}c}Ef{{Ch{Af}{{Cf{Af}}}}Cj}}{{{f{Gl}}c}Gl{{Ch{d}{{Cf{d}}}}Cj}}{{{f{Dd}}c}Dd{{Ch{{f{Dj}}}{{Cf{{ALd{Dj}}}}}}Cj}}{{{f{Fb}}c}Fb{{Ch{{f{{E`{Dn}}}}}{{Cf{{ALd{{E`{Dn}}}}}}}}Cj}}{{{f{{AF`{c}}}}e}{{AF`{c}}}Il{{Ch{{f{c}}}{{Cf{c}}}}Cj}}{{{f{Dd}}c}Dd{{Cn{Eh{f{Dj}}}{{Cf{Eh}}}}Cj}}{{{f{Gl}}Ej}El}{{{f{Dd}}Ej}El}{{{f{Fb}}Ej}El}{{{f{AKh}}Ej}El}{{{f{Gl}}{f{{E`{En}}}}{f{F`}}}{{Ah{El}}}}{{{f{Dd}}{f{{E`{En}}}}{f{F`}}}{{Ah{El}}}}{{{f{Fb}}{f{{E`{En}}}}{f{F`}}}{{Ah{El}}}}{{{f{AKh}}{f{{E`{En}}}}{f{F`}}}{{Ah{El}}}}{{{f{Gl}}}{{Ah{El}}}}{{{f{Dd}}}{{Ah{El}}}}{{{f{Fb}}}{{Ah{El}}}}{{{f{{AF`{c}}}}}{{Ah{El}}}Il}{eALj{}{{Hh{}{{Bb{c}}}}}}0{{AEbe}ALl{}{{Hh{}{{Bb{c}}}}}}0{{{f{Eb}}}{{B`{{f{Eb}}}}}}{{{f{Dd}}}Fb}{{{f{Ib}}}Ib}{{{f{Eb}}}{{f{Eb}}}}{{{f{Mn}}}{{f{Eb}}}}{{{f{ALn}}}{{f{Eb}}}}{{{f{{AJj{}{{AM`{c}}{AMb{e}}{AMd{g}}}}}}}{{B`{{f{{E`{c}}}}}}}AAb{AMf{AMh{c}}}{{Gj{}{{Bb{c}}}}I`JjJl}}{{{f{Ef}}{f{{l{c}}}}{f{{l{e}}}}g}EfCdCd{{Cn{{B`{Cl}}B`B`}{{Cf{{B`{Af}}}}}}}}{{GlGl}c{}}{{{f{Gl}}{f{Gl}}}c{}}0101{f{{f{c}}}{}}0000000000000000000000000000000000000{{{f{Bl}}}{{f{Blc}}}{}}0000000000000000000000000000000000000{Eb{{Fh{Eb}}}}{{{f{AMj}}{f{AMj}}c}{{Ah{AMj}}}AMl}{{{f{Ib}}{f{Eb}}}d}{{{f{AMn}}{f{Eb}}}{{Ah{Af}}}}0{{{f{Ib}}{f{Eb}}}Ib}{{{f{Eb}}Eb}Eb}{{{f{Ed}}{f{Eb}}}{{Ah{Af}}}}{{{f{Ef}}{f{Eb}}}{{Ah{Af}}}}{{{f{Gl}}{f{Eb}}}{{Ah{Af}}}}{{{f{Dd}}{f{Eb}}}{{Ah{Af}}}}{{{f{Fb}}{f{Eb}}}{{Ah{Af}}}}{{{f{AKh}}{f{Eb}}}{{Ah{Af}}}}{{{f{AMn}}{f{Eb}}Fj}{{Ah{Af}}}}{{{f{Jh}}{f{Eb}}Fj}{{Ah{Af}}}}{{{f{Ed}}{f{Eb}}Fj}{{Ah{Af}}}}{{{f{Ef}}{f{Eb}}Fj}{{Ah{Af}}}}{{{f{Gl}}{f{Eb}}Fj}{{Ah{Af}}}}{{{f{Dd}}{f{Eb}}Fj}{{Ah{Af}}}}{{{f{Fb}}{f{Eb}}Fj}{{Ah{Af}}}}{{{f{AKh}}{f{Eb}}Fj}{{Ah{Af}}}}`{{{f{{l{c}}}}{f{Af}}}{{Of{AfALb}}}{}}0000{{{f{ALf}}{f{Af}}}{{Ah{Af}}}}{{{f{ALh}}{f{Af}}}{{Ah{Af}}}}{{{f{{AN`{ce}}}}}{{AN`{ce}}}CdCd}{{{f{ANb}}}ANb}{{{f{Ib}}}Ib}{{{f{ANd}}}ANd}{{{f{Eb}}}Eb}{{{f{ANf}}}ANf}{{{f{Mn}}}Mn}{{{f{ANh}}}ANh}{{{f{ANj}}}ANj}{{{f{ANl}}}ANl}{{{f{Mj}}}Mj}{{{f{Mh}}}Mh}{{{f{ANn}}}ANn}{{{f{AO`}}}AO`}{{{f{Ll}}}Ll}{{{f{M`}}}M`}{{{f{D`}}}D`}{{{f{Db}}}Db}{{{f{AOb}}}AOb}{{{f{AOd}}}AOd}{{{f{Dh}}}Dh}{{{f{Dl}}}Dl}{{{f{AOf}}}AOf}{{{f{An}}}An}{{{f{AOh}}}AOh}{{{f{AOj}}}AOj}{{{f{AOl}}}AOl}{{{f{AOn}}}AOn}{{{f{B@`}}}B@`}{{{f{B@b}}}B@b}{{{f{AEb}}}AEb}{{{f{B@d}}}B@d}{{f{f{Blc}}}b{}}0000000000000000000000000000000{fb}0000000000000000000000000000000{{{f{B@`}}{f{B@`}}}B@f}{{{f{BlMn}}Eb}b}{B@he{}{{ALj{c}}AJj}}0{{B@hAEb}e{}{{ALl{c}}AJj}}0{{f{f{c}}}B@f{}}{{{f{Eb}}}d}{{{f{AEb}}}d}11{B@jEb}{{}Ib}{{}ANd}{{}Eb}{{}AEb}{Fn{{f{c}}}{}}{{{f{{AN`{ce}}}}}{{f{g}}}CdCd{}}1111111111111111111111111111111111111{{{f{Bl{AN`{ce}}}}}{{f{Blg}}}CdCd{}}{Fn{{f{Blc}}}{}}0000000000000000000000000000000000000{{{f{Jh}}{f{Jh}}}c{}}{{{f{Ef}}{f{Af}}}{{Ah{Af}}}}{{{f{Ed}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Of{AfALb}}}{}}000000{Fnb}0000000000000000000000000000000000000{{{f{AMn}}}{{f{Eb}}}}{{{f{Jh}}}{{f{Eb}}}}{{{f{Ib}}}Eb}{{{f{Mn}}}{{f{Eb}}}}``{{{f{Ib}}{f{Ib}}}d}{{{f{ANd}}{f{ANd}}}d}{{{f{Eb}}{f{AEb}}}d}{{{f{Eb}}{f{Eb}}}d}{{{f{ANf}}{f{ANf}}}d}{{{f{Mn}}{f{Mn}}}d}{{{f{ANh}}{f{ANh}}}d}{{{f{B@`}}{f{B@`}}}d}{{{f{B@b}}{f{B@b}}}d}{{{f{AEb}}{f{AEb}}}d}{{{f{B@d}}{f{B@d}}}d}{{{f{Ib}}{f{Ib}}d}d}{{{f{Ed}}{f{Ed}}}Gl}{{{f{Ef}}{f{Ef}}}Gl}{{{f{Gl}}{f{Gl}}}Gl}{{{f{Dd}}{f{Dj}}}Gl}{{{f{Dd}}{f{Dd}}}Gl}{{{f{Fb}}{f{Fb}}}Gl}{{{f{Fb}}{f{{E`{Dn}}}}}Gl}6542310{{f{f{c}}}d{}}0000000000000000000{{{f{Ed}}}{{Ah{{Hl{Af{AGn{Mb}}}}}}}}{{{f{Ef}}}{{Ah{{Hl{Af{AGn{Mb}}}}}}}}{{{f{{AN`{ce}}}}}MnCdCd}{{{f{Gl}}d}{{Ah{Gl}}}}{{{f{Fb}}{f{{E`{Dn}}}}}{{Ah{Fb}}}}{{{f{Dd}}{f{Gl}}}{{Ah{{l{Dh}}}}}}{{{f{Fb}}{f{Gl}}}{{Ah{{l{Dl}}}}}}{{{f{{AF`{c}}}}{f{Gl}}}{{Ah{{l{{Ih{c}}}}}}}Il}{{AMl{f{B@l}}{f{B@l}}}{{Ah{B@l}}}}{{{f{Ed}}{f{BlH`}}}Hb}{{{f{Ef}}{f{BlH`}}}Hb}{{{f{Dd}}{f{BlH`}}}Hb}{{{f{Fb}}{f{BlH`}}}Hb}{{{f{{AF`{c}}}}{f{BlH`}}}HbIl}{{{f{ANb}}{f{BlH`}}}Hb}{{{f{Ib}}{f{BlH`}}}Hb}0{{{f{ANd}}{f{BlH`}}}Hb}{{{f{Eb}}{f{BlH`}}}Hb}0{{{f{ANf}}{f{BlH`}}}Hb}{{{f{Mn}}{f{BlH`}}}Hb}{{{f{ANh}}{f{BlH`}}}Hb}0{{{f{B@`}}{f{BlH`}}}{{Of{bB@n}}}}{{{f{B@b}}{f{BlH`}}}{{Of{bB@n}}}}0{{{f{AEb}}{f{BlH`}}}{{Of{bB@n}}}}{{{f{B@d}}{f{BlH`}}}{{Of{bB@n}}}}{{{f{Ed}}c}b{{Cn{{B`{Cl}}}}}}{{{f{Ef}}c}b{{Cn{{B`{Cl}}}}}}{cc{}}0000000{{{B`{c}}}Ib{{BA`{Ib}}}}{{{f{Dj}}}Ib}{cIbBAb}3{{{f{{E`{Dn}}}}}Ib}{dIb}5{{{f{AEb}}}Eb}6{{{f{Ib}}}Eb}{IbEb}8{{{f{Ib}}}Mn}{{{f{BAd}}}Mn}:{{{f{B@d}}}ANh};;;;;;;;;;;;;;;;;;;;;;;;{BAfAEb}{BAhAEb}={{{f{AEb}}d}Eb}{eEf{{BAj{Af}}}{{Hh{}{{Bb{c}}}}}}{cEf{{Hh{}{{Bb{{B`{{Fh{Hd}}}}}}}}}}{cEf{{Hh{}{{Bb{{B`{Af}}}}}}}}{cEf{{Hh{}{{Bb{{B`{En}}}}}}}}{cGl{{Hh{}{{Bb{d}}}}}}{eDd{{`{Dj}}}{{Hh{}{{Bb{c}}}}}}{eDd{{Kl{Dj}}}{{Hh{}{{Bb{{B`{c}}}}}}}}{eFb{{Kl{{E`{Dn}}}}}{{Hh{}{{Bb{{B`{c}}}}}}}}{eFb{{`{{E`{Dn}}}}}{{Hh{}{{Bb{c}}}}}}{e{{AF`{c}}}Il{{Hh{}{{Bb{{B`{c}}}}}}}}{{Bjc}{{l{An}}}{{Bf{}{{Bb{{B`{d}}}}}}}}{{Bje}Dd{{Kl{Dj}}}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bje}Fb{{Kl{{E`{Dn}}}}}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bje}{{AF`{c}}}Il{{Bf{}{{Bb{{B`{c}}}}}}}}=;98765{eAKh{{`{{E`{Dn}}}}}{{Hh{}{{Bb{c}}}}}}{eAKh{{Kl{{E`{Dn}}}}}{{Hh{}{{Bb{{B`{c}}}}}}}}6{{Bjc}{{l{An}}}{{Bf{}{{Bb{d}}}}}}{{Bje}Dd{{Kl{Dj}}}{{Bf{}{{Bb{c}}}}}}{{Bje}Fb{{Kl{{E`{Dn}}}}}{{Bf{}{{Bb{c}}}}}}{{Bje}{{AF`{c}}}Il{{Bf{}{{Bb{c}}}}}}{cEf{{Hn{}{{Bb{{B`{Af}}}}}}}}{cGl{{Hn{}{{Bb{d}}}}}}{cGl{{Hn{}{{Bb{{B`{d}}}}}}}}{eDd{{Kl{Dj}}JjJl}{{Hn{}{{Bb{{B`{c}}}}}}}}{eDd{{`{Dj}}JjJlBAl}{{Hn{}{{Bb{c}}}}}}{eFb{{Kl{{E`{Dn}}}}JjJl}{{Hn{}{{Bb{{B`{c}}}}}}}}{eFb{{`{{E`{Dn}}}}JjJlBAl}{{Hn{}{{Bb{c}}}}}}{{cBjEb}Ef{{Hn{}{{Bb{{B`{Af}}}}}}}}{{Bj{f{{E`{d}}}}}Gl}{{Bj{f{{E`{c}}}}}Dd{{Kl{Dj}}}}{{Bj{f{{E`{c}}}}}Fb{{Kl{{E`{Dn}}}}}}{{Bj{f{{E`{c}}}}}{{AF`{c}}}Il}{{Bj{f{{E`{{B`{d}}}}}}}Gl}{{Bj{f{{E`{{B`{c}}}}}}}Dd{{Kl{Dj}}}}{{Bj{f{{E`{{B`{c}}}}}}}Fb{{Kl{{E`{Dn}}}}}}{{Bj{f{{E`{{B`{c}}}}}}}{{AF`{c}}}Il}{cGl{{I`{}{{Bb{{B`{d}}}}}}}}{{{Gd{c}}AEb}{{AJj{}{{AM`{c}}{AMb{e}}{AMd{g}}}}}AAb{AMf{AMh{c}}}{{Gj{}{{Bb{c}}}}I`JjJl}}{{{Gd{c}}AEb}{{AJj{}{{AM`{e}}{AMb{c}}{AMd{g}}}}}{AMf{AMh{e}}}AAb{{Gj{}{{Bb{e}}}}I`JjJl}}{{FncAEb}{{AJj{}{{AM`{c}}{AMb{e}}{AMd{g}}}}}AAb{AMf{AMh{c}}}{{Gj{}{{Bb{c}}}}I`JjJl}}{{Bj{f{Af}}Fn}Ed}{{Bj{f{Af}}Fn}Ef}{{BjdFn}Gl}{{Bj{f{Dj}}Fn}Dd}{{Bj{f{{E`{Dn}}}}Fn}Fb}{{Bj{f{{E`{Dn}}}}Fn}AKh}{{BjcFn}{{AF`{c}}}Il}{{FnAEb}{{AJj{}{{AM`{c}}{AMb{e}}{AMd{g}}}}}AAb{AMf{AMh{c}}}{{Gj{}{{Bb{c}}}}I`JjJl}}{{BjFn}Ed}{{BjFn}Ef}{{BjFn}Gl}{{BjFn}Dd}{{BjFn}Fb}{{BjFn}AKh}{{BjFn}{{AF`{c}}}Il}{{BjFn{f{Eb}}Fn}Ed}{{BjFn{f{Eb}}}Ef}{{{f{{AJj{}{{AM`{c}}{AMb{e}}{AMd{g}}}}}}Fn}{{B`{c}}}AAb{AMf{AMh{c}}}{{Gj{}{{Bb{c}}}}I`JjJl}}{B@`J`}{B@b{{B`{J`}}}}{{{f{Jh}}Fn}{{Ah{Ib}}}}{{{f{AMn}}Fn}{{Ah{Ib}}}}0{{{f{Ed}}Fn}{{Ah{Ib}}}}{{{f{Ef}}Fn}{{Ah{Ib}}}}{{{f{Gl}}Fn}{{Ah{Ib}}}}{{{f{Dd}}Fn}{{Ah{Ib}}}}{{{f{Fb}}Fn}{{Ah{Ib}}}}{{{f{AKh}}Fn}{{Ah{Ib}}}}{{{f{{AF`{c}}}}Fn}{{Ah{Ib}}}Il}{{{f{Jh}}Fn}Ib}{{{f{AMn}}Fn}Ib}0{{{f{Ed}}Fn}Ib}{{{f{Ef}}Fn}Ib}{{{f{Gl}}Fn}Ib}{{{f{Dd}}Fn}Ib}{{{f{Fb}}Fn}Ib}{{{f{AKh}}Fn}Ib}{{{f{{AF`{c}}}}Fn}IbIl}{{{f{Ed}}Fn}{{B`{Af}}}}{{{f{Ef}}Fn}{{B`{Af}}}}{{}Eb}000000000000000000000000{{{f{Ed}}}Af}{{{f{Ef}}}Af}1{{{f{{AF`{c}}}}Fn}{{B`{{f{Ij}}}}}Il}0{{B@bJ`}J`}{{B@bc}J`{{Ch{}{{Cf{J`}}}}}}{{{f{Eb}}}{{B`{{Gd{Fn}}}}}}{{{f{Ib}}}{{B`{{f{Dj}}}}}}{{{f{BAn}}Fn}Ib}{{{f{{AJj{}{{AM`{c}}{AMb{e}}{AMd{g}}}}}}Fn}{{B`{c}}}AAb{AMf{AMh{c}}}{{Gj{}{{Bb{c}}}}I`JjJl}}{{{f{Ed}}}Fn}{{{f{Ef}}}Fn}{{{f{Dd}}}Fn}{{{f{AKh}}}Fn}{{{f{Ed}}dd}{{Ah{Al}}}}{{{f{Ef}}dd}{{Ah{Al}}}}{{{f{Gl}}dd}{{Ah{Al}}}}{{{f{Dd}}dd}{{Ah{Al}}}}{{{f{Fb}}dd}{{Ah{Al}}}}{{{f{AKh}}dd}{{Ah{Al}}}}{{{f{{AF`{c}}}}dd}{{Ah{Al}}}Il}{{{f{Gl}}{f{Gl}}}Gl}{{{f{Dd}}{f{Dd}}}Gl}{{{f{Dd}}{f{Dj}}}Gl}{{{f{Fb}}{f{{E`{Dn}}}}}Gl}{{{f{Fb}}{f{Fb}}}Gl}42301{{{f{Ib}}{f{Blc}}}bABj}{{{f{ANd}}{f{Blc}}}bABj}{{{f{Eb}}{f{Blc}}}bABj}{{{f{Mn}}{f{Blc}}}bABj}{{{f{ANh}}{f{Blc}}}bABj}{{{f{B@b}}{f{Blc}}}bABj}{{{f{AEb}}{f{Blc}}}bABj}{{{f{B@d}}{f{Blc}}}bABj}{{{f{Ib}}{f{Blc}}d}bABj}{{{f{Ib}}}Id}{EbEb}{{}Fn}0000000000000000000000000000000000000{{{f{Ed}}}{{f{Eb}}}}{{{f{Ef}}}{{f{Eb}}}}{{{f{Eb}}}{{B`{{f{Eb}}}}}}{{{f{AEb}}}{{B`{{f{AEb}}}}}}{{}c{}}0000000000000000000000000000000000000{{}En}{{BB`{B`{Fn}}Fn}{{Ah{Jh}}}}{{BB`{B`{Fn}}Fn}Jh}{{{f{Ed}}}c{}}{{{f{Ef}}}c{}}{{{f{Gl}}}c{}}{{{f{Dd}}}c{}}{{{f{Fb}}}c{}}{{{f{AKh}}}c{}}{{{f{{AF`{c}}}}}eIl{}}{{BBbEb}{{Ah{Lb}}}}{JhAf}{BB`Af}{IbIb}{{{f{Eb}}}d}00{{{f{Ib}}}d}1111010111101{{{f{AEb}}}d}1212120222122222120{{{f{{AJj{}{{AM`{c}}{AMb{e}}{AMd{g}}}}}}}{{AEj{cgAEh}}}AAb{AMf{AMh{c}}}{{Gj{}{{Bb{c}}}}I`JjJl}}{{{f{{AJj{}{{AM`{c}}{AMb{e}}{AMd{g}}}}}}}{{B`{c}}}AAb{AMf{AMh{c}}}{{Gj{}{{Bb{c}}}}I`JjJl}}{{{f{Eb}}}{{f{Eb}}}}{{{f{Gl}}{f{Gl}}}Gl}{{{f{Dd}}{f{Dj}}}Gl}{{{f{Dd}}{f{Dd}}}Gl}{{{f{Fb}}{f{{E`{Dn}}}}}Gl}{{{f{Fb}}{f{Fb}}}Gl}43201{{{f{AMj}}{f{AMj}}}{{Ah{{Hl{AMjAMj}}}}}}{{EfEf}{{Ah{{Hl{EfEf}}}}}}{{{f{Eb}}{f{Eb}}}{{Ah{d}}}}{{{f{ANd}}}{{B`{Eb}}}}{{{f{Eb}}}{{Ah{Eb}}}}{{{f{Gl}}}{{B`{d}}}}{{{f{Eb}}}{{Ah{Lb}}}}{{{f{Fb}}}{{B`{{f{{E`{Dn}}}}}}}}{{{f{Gl}}}Lb}{{{f{Dd}}}Lb}{{{f{Fb}}}Lb}{{{f{Gl}}}{{B`{n}}}}{{{f{ALf}}}{{B`{In}}}}{{{f{ALh}}}{{B`{n}}}}{{{f{ALf}}}Lb}{{{f{ALh}}}Lb}{{{f{Eb}}{f{Eb}}}{{Ah{Eb}}}};:9876{{Bj{f{{E`{Dn}}}}FnFn}Gl}{{{f{Jh}}{f{Jh}}}c{}}{{{f{Ef}}{f{Af}}}{{Ah{Af}}}}{{{f{Ed}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Of{AfALb}}}{}}000000{{{f{Dd}}}{{Ah{Fn}}}}{{{f{Fb}}}{{Ah{Fn}}}}{{{f{Mn}}}{{f{Bj}}}}`{{}c{}}00{{Bjc}Dd{{Kl{{E`{{B`{{ALd{Dj}}}}}}}}}}{{Bjc}Dd{{Kl{{E`{{f{Dj}}}}}}}}{{Bjc}Dd{{Kl{{E`{{ALd{Dj}}}}}}}}{{Bjc}Dd{{Kl{{E`{{B`{{f{Dj}}}}}}}}}}{{Bjc}Fb{{Kl{{E`{{ALd{{E`{Dn}}}}}}}}}}{{Bjc}Fb{{Kl{{E`{{f{{E`{Dn}}}}}}}}}}{{Bjc}Fb{{Kl{{E`{{B`{{ALd{{E`{Dn}}}}}}}}}}}}{{Bjc}Fb{{Kl{{E`{{B`{{f{{E`{Dn}}}}}}}}}}}}{{Bj{f{{E`{c}}}}}{{AF`{c}}}Il}{{Bje}{{AF`{c}}}Il{{Kl{{E`{{B`{c}}}}}}}}{{BjEb}Mn}{J`B@`}{MbB@b}{J`B@b}{Bj{{AF`{c}}}Il}{{{f{Ed}}FnFn}Ed}{{{f{Ef}}FnFn}Ef}{{{f{Gl}}FnFn}Gl}{{{f{Dd}}FnFn}Dd}{{{f{Fb}}FnFn}Fb}{{{f{AKh}}FnFn}AKh}{{{f{{AF`{c}}}}FnFn}{{AF`{c}}}Il}{{Bj{Gd{c}}}{{AF`{c}}}Il}{{Bj{Gd{c}}Hj}{{AF`{c}}}Il}{{{l{c}}}{{AN`{ec}}}CdCd}{{}ANf}{{{f{Gl}}}c{}}{Glc{}}{{{f{Ed}}{f{Ed}}}Gl}{{{f{Ef}}{f{Ef}}}Gl}{{{f{Gl}}{f{Gl}}}Gl}{{{f{Dd}}{f{Dd}}}Gl}{{{f{Dd}}{f{Dj}}}Gl}{{{f{Fb}}{f{{E`{Dn}}}}}Gl}{{{f{Fb}}{f{Fb}}}Gl}{{{f{Ed}}{f{Ed}}}c{}}653421{{{f{Gl}}}Fn}0{{{f{Ed}}}{{Ah{{AGn{Mb}}}}}}{{{f{Ef}}}{{Ah{{AGn{Mb}}}}}}={{{f{Ef}}}{{`{{N`{}{{Bb{{B`{Af}}}}}}}}}}{{{f{Dd}}}{{`{{N`{}{{Bb{{B`{{f{Dj}}}}}}}}}}}}{{{f{BlEf}}}{{`{{Nb{}{{Bb{{B`{Af}}}}}}}}}}{{{f{Dd}}}{{`{{Nb{}{{Bb{{B`{{f{Dj}}}}}}}}}}}}{{{f{Ib}}{f{Ib}}}{{B`{B@f}}}}{{{f{ANh}}{f{ANh}}}{{B`{B@f}}}}{{{f{B@`}}{f{B@`}}}{{B`{B@f}}}}{{{f{{AN`{ce}}}}}{{f{{l{e}}}}}CdCd}{{{f{Jh}}}{{B`{Fn}}}}{{{f{{AN`{AOhJf}}}}}{{B`{Fn}}}}{{{f{ALf}}nNd}{{Ah{{B`{In}}}}}}{{{f{ALh}}nNd}{{Ah{{B`{n}}}}}}{{{f{ALf}}nNd}{{Ah{Lb}}}}{{{f{ALh}}nNd}{{Ah{Lb}}}}{{BjFnn}{{Ah{Gl}}}}{{{f{Ef}}}Ef}{{{f{Ef}}{f{Af}}}{{Ah{Af}}}}{{{f{Ed}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Of{AfALb}}}{}}000000{{{f{Ed}}}Ed}4{{{f{Gl}}}Gl}{{{f{Dd}}}Dd}{{{f{Fb}}}Fb}{{{f{AKh}}}AKh}{{{f{{AF`{c}}}}}{{AF`{c}}}Il}`{{{f{Jh}}}Fn}{{{f{{AN`{AOhJf}}}}}Fn}{{{f{Gl}}c{B`{d}}}{{Ah{Gl}}}{{Hh{}{{Bb{Id}}}}}}{{{f{Dd}}c{B`{{f{Dj}}}}}{{Ah{Dd}}}{{Hh{}{{Bb{Id}}}}}}{{{f{Fb}}c{B`{{f{{E`{Dn}}}}}}}{{Ah{Fb}}}{{Hh{}{{Bb{Id}}}}}}{{{f{Gl}}ce}{{Ah{Gl}}}{{Hh{}{{Bb{Id}}}}}{{Ch{{B`{d}}}{{Cf{{B`{d}}}}}}}}{{{f{Dd}}ce}{{Ah{Dd}}}{{Hh{}{{Bb{Id}}}}}{{Ch{{B`{{f{Dj}}}}}{{Cf{{B`{Df}}}}}}}}{{{f{Fb}}ce}{{Ah{Fb}}}{{Hh{}{{Bb{Id}}}}}{{Ch{{B`{{f{{E`{Dn}}}}}}}{{Cf{{B`{{Gd{Dn}}}}}}}}}}{{{f{Gl}}{f{Gl}}{B`{d}}}{{Ah{Gl}}}}{{{f{Dd}}{f{Gl}}{B`{{f{Dj}}}}}{{Ah{Dd}}}}{{{f{Fb}}{f{Gl}}{B`{{f{{E`{Dn}}}}}}}{{Ah{Fb}}}}{{{f{BlEf}}}b}{{{f{BlEf}}Eb}b}{{{f{BlMn}}Bj}b}{{{f{Ed}}Mb}Ed}{{{f{Ef}}Mb}Ef}{{{f{Gl}}Mb}Gl}{{{f{Dd}}Mb}Dd}{{{f{Fb}}Mb}Fb}{{{f{AKh}}Mb}AKh}{{{f{{AF`{c}}}}Mb}{{AF`{c}}}Il}{{{f{Ed}}Mb{B`{{f{Af}}}}}Ed}{{{f{Ef}}Mb{B`{{f{Af}}}}}Ef}{{{f{Gl}}Mb{B`{d}}}Gl}{{{f{Dd}}Mb{B`{{f{Dj}}}}}Dd}{{{f{Fb}}Mb{B`{{f{{E`{Dn}}}}}}}Fb}{{{f{AKh}}Mb{B`{{f{{E`{Dn}}}}}}}AKh}{{{f{{AF`{c}}}}Mb{B`{{Ih{c}}}}}{{l{{Ih{c}}}}}Il}{{{f{Gl}}d}Gl}{{{f{Dd}}d}Dd}{{{f{Fb}}d}{{l{Dl}}}}{{{f{AKh}}d}AKh}{{{f{Gl}}Ej}{{l{An}}}}{{{f{Dd}}Ej}{{l{Dh}}}}{{{f{Fb}}Ej}{{l{Dl}}}}{{{f{AKh}}Ej}AKh}{{{f{ALf}}Dn}Lb}{{{f{ALh}}Dn}Lb}{{{f{Ib}}}{{ALd{Dj}}}}{{{f{Ib}}{f{Eb}}}{{B`{Ib}}}}`{{{f{Jh}}{f{Jh}}}c{}}{{{f{Ef}}{f{Af}}}{{Ah{Af}}}}{{{f{Ed}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Of{AfALb}}}{}}000000{{{f{Gl}}}{{B`{Id}}}}{{{f{Gl}}}Lb}{{{f{Fb}}}Lb}{{{f{Ed}}{f{El}}}Ed}{{{f{Ed}}{f{c}}}Ed{{Kl{{E`{Id}}}}Nh}}{{{f{Ef}}{f{El}}}Ef}{{{f{Ef}}{f{c}}}Ef{{Kl{{E`{Id}}}}Nh}}{{{f{Dd}}{f{c}}}Dd{{Kl{{E`{Id}}}}Nh}}{{{f{Dd}}{f{El}}}Dd}{{{f{Fb}}{f{El}}}Fb}{{{f{Fb}}{f{c}}}Fb{{Kl{{E`{Id}}}}Nh}}{{{f{Eb}}ANf}AEb}{{{f{Mn}}ANf}BAd}{ANhB@d}{{{f{Eb}}BjANf}BAd}{ANh{{f{Dj}}}}{{{f{Dd}}Fn}{{Ah{Af}}}}{{AEbFnd}AEb}{{{f{BlEd}}Eb}b}{{{f{BlEf}}Eb}b}{{{f{AEb}}}{{f{AEb}}}}{{{f{Ef}}}{{Ah{Ob}}}}{fc{}}0000000000000000000000000000000{{{f{Eb}}}Eb}{{{f{AEb}}}BBd}{{{f{Jh}}Fn}{{Ah{{ALd{Jh}}}}}}{{{f{{AN`{AOhJf}}}}Fn}{{Ah{{ALd{{AN`{AOhJf}}}}}}}}{fDf}000{{{f{Fb}}}Dd}{{{f{Ib}}{f{Ib}}}d}{{{f{Ef}}c}{{Ah{Ef}}}{{Cn{Cl}{{Cf{{Ah{Af}}}}}}}}{{{f{Ed}}e}{{Ah{{l{g}}}}}{}{{Cn{{B`{Cl}}}{{Cf{{Ah{{B`{c}}}}}}}}Cj}Cd}{{{f{Ef}}e}{{Ah{{l{g}}}}}{}{{Cn{{B`{Cl}}}{{Cf{{Ah{{B`{c}}}}}}}}Cj}Cd}{{{f{Ed}}c}{{Ah{Ed}}}{{Cn{Cl}{{Cf{{Ah{Af}}}}}}}}{{{f{Ed}}c}{{Ah{Ef}}}{{Cn{Cl}{{Cf{{Ah{Af}}}}}}}}{g{{Of{ALje}}}{}{}{{Hh{}{{Bb{{Of{ce}}}}}}}}0{{AEbg}{{Of{ALle}}}{}{}{{Hh{}{{Bb{{Of{ce}}}}}}}}0{B@h{{Of{eg}}}{}{{ALj{c}}AJj}{}}0{{B@hAEb}{{Of{eg}}}{}{{ALl{c}}AJj}{}}0{{{f{Ib}}}{{Ah{c}}}L`}{c{{Of{e}}}{}{}}0000000000000000000000000000000000{Mb{{Of{B@`}}}}111{{}{{Of{c}}}{}}0000000000000000000000000000000000000{{{f{Ib}}{f{Eb}}}{{Ah{Ib}}}}{{{f{Eb}}ANf}{{Ah{AEb}}}}{f{{Of{GfBBf}}}}000{{{f{Ef}}{f{{l{c}}}}e}{{Ah{Ef}}}Cd{{Cn{{B`{Cl}}B`}{{Cf{{Ah{{B`{Af}}}}}}}}}}{fOh}0000000000000000000000000000000000000{{{f{AEb}}}AEb}{{{f{Gl}}}{{Ah{Gl}}}}{{{f{Dd}}}{{Ah{Dd}}}}{{{f{Fb}}}{{Ah{Fb}}}}{{{f{{AF`{c}}}}}{{Ah{{l{{Ih{c}}}}}}}Il}{{{f{{AJj{}{{AM`{c}}{AMb{e}}{AMd{g}}}}}}Fn}cAAb{AMf{AMh{c}}}{{Gj{}{{Bb{c}}}}I`JjJl}}0{{{f{Eb}}Ib}d}{{{f{{AJj{}{{AM`{c}}{AMb{e}}{AMd{g}}}}}}}gAAb{AMf{AMh{c}}}{{Gj{}{{Bb{c}}}}I`JjJl}}{{{f{ALf}}Dn}Lb}{{{f{ALh}}Dn}Lb}{{{f{Gl}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}{{{f{BBh}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}{{{f{BBj}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}{{{f{B@l}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}{{{f{BBl}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}{{{f{BBn}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}{{{f{BC`}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}{{{f{BCb}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}{{{f{BCd}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}{{{f{BB`}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}{{{f{ALf}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}{{{f{ALh}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}{{{f{Dd}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}{{{f{Fb}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}{{{f{AKh}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}{{{f{{AF`{c}}}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}Il}{{{f{Gl}}Nl{f{Bl{E`{J`}}}}}{{Ah{b}}}}{{{f{BBh}}Nl{f{Bl{E`{J`}}}}}{{Ah{b}}}}{{{f{BBj}}Nl{f{Bl{E`{J`}}}}}{{Ah{b}}}}{{{f{B@l}}Nl{f{Bl{E`{J`}}}}}{{Ah{b}}}}{{{f{BBl}}Nl{f{Bl{E`{J`}}}}}{{Ah{b}}}}{{{f{BBn}}Nl{f{Bl{E`{J`}}}}}{{Ah{b}}}}{{{f{BC`}}Nl{f{Bl{E`{J`}}}}}{{Ah{b}}}}{{{f{BCb}}Nl{f{Bl{E`{J`}}}}}{{Ah{b}}}}{{{f{BCd}}Nl{f{Bl{E`{J`}}}}}{{Ah{b}}}}{{{f{BB`}}Nl{f{Bl{E`{J`}}}}}{{Ah{b}}}}{{{f{ALf}}Nl{f{Bl{E`{J`}}}}}{{Ah{b}}}}{{{f{ALh}}Nl{f{Bl{E`{J`}}}}}{{Ah{b}}}}{{{f{Dd}}Nl{f{Bl{E`{J`}}}}}{{Ah{b}}}}{{{f{Fb}}Nl{f{Bl{E`{J`}}}}}{{Ah{b}}}}{{{f{AKh}}Nl{f{Bl{E`{J`}}}}}{{Ah{b}}}}{{{f{{AF`{c}}}}Nl{f{Bl{E`{J`}}}}}{{Ah{b}}}Il}{{}c{}}0000000000000000000000000000000000000{{{f{Ed}}}Fn}{Fnc{}}0{Fn{{BCf{ce}}}{}{}}{{{f{{E`{Oj}}}}e}c{}{{Ol{{f{El}}}{{Cf{c}}}}}}{{{AJj{}{{AM`{c}}{AMb{e}}{AMd{g}}}}{B`{Hj}}}{{AJj{}{{AM`{c}}{AMb{e}}{AMd{g}}}}}AAb{AMf{AMh{c}}}{{Gj{}{{Bb{c}}}}I`JjJl}}{{{f{Eb}}}Ib}{{{f{Ef}}{f{{l{c}}}}e}EfCd{{Cn{{B`{Cl}}B`}{{Cf{{B`{Af}}}}}}}}{{{f{Ed}}{f{{l{c}}}}e}EdCd{{Cn{{B`{Cl}}B`}{{Cf{{B`{Af}}}}}}}}```````````{{fh}b}{{{f{AMj}}}d}{{AMjd}AMj}{{{f{BlBCh}}{B`{{f{Dj}}}}}b}{{{f{BlAMj}}{f{AMj}}}{{Ah{b}}}}{{{f{BlBCh}}}b}{{{f{BlBCh}}{f{Dj}}}b}{{{f{AMj}}Ej}El}{f{{f{c}}}{}}000{{{f{Bl}}}{{f{Blc}}}{}}000{{{f{AMj}}{f{AMj}}c}{{Ah{AMj}}}AMl}{{{f{AMj}}{f{Eb}}Fj}{{Ah{Af}}}}{{{f{AMj}}}AMj}{{f{f{Blc}}}b{}}{fb}{{}BCj}{Fn{{f{c}}}{}}000{Fn{{f{Blc}}}{}}000{{BChc}AMj{{Hh{}{{Bb{{B`{{f{Dj}}}}}}}}}}{Fnb}000{{{f{AMj}}}{{f{Eb}}}}{{{f{AMj}}{f{Dj}}}c{}}{{{f{AMj}}{f{AMj}}}c{}}{{{f{AMj}}{f{Dd}}}c{}}012{{AMl{f{B@l}}{f{B@l}}}{{Ah{B@l}}}}{BChAMj}{BCj{{Lh{BCl}}}}{cc{}}000{{B@lEb}AMj}{{B@l{Lh{BCl}}dBCn}AMj}{{B@lBCn}AMj}{{{f{Dd}}{f{B@j}}BCn}{{Ah{AMj}}}}{{BjdFnBCn}AMj}{{{f{AMj}}Fn}{{Ah{Ib}}}}{{{f{AMj}}Fn}Ib}{{{f{AMj}}}{{f{{Lh{BCl}}}}}}<>==<>{{}Fn}000{{}c{}}000{{}En}1{AMjAf}{{{f{AMj}}}d}0{{{f{AMj}}}BD`}{{{f{AMj}}}Fn}{{{f{AMj}}{f{Dd}}}c{}}{{{f{AMj}}{f{AMj}}}c{}}{{{f{AMj}}{f{Dj}}}c{}}201{{{f{AMj}}{f{AMj}}}{{Ah{{Hl{AMjAMj}}}}}}{{EfEf}{{Ah{{Hl{EfEf}}}}}}{{{f{AMj}}}Lb}{{{f{BlBCj}}{f{{Lh{BCl}}}}}{{Ah{b}}}}1{{{f{AMj}}}{{Ah{Fn}}}}{{{f{AMj}}}{{f{Bj}}}}{{BjFnBCn}BCh}{{{Lh{BCl}}}BCj}{{{f{BlBD`}}}{{B`{c}}}{}}9;:9:;<{{{f{AMj}}}{{f{B@l}}}}{{{f{BlBCh}}{f{Dj}}}{{Hl{Mld}}}}`{{{f{BD`}}}{{Hl{Fn{B`{Fn}}}}}}{{{f{AMj}}d}AMj}{{{f{AMj}}Ej}AMj}`{{{f{AMj}}ANfd}Gb}{{{f{AMj}}{f{B@j}}BDb}AMj}{{{f{AMj}}}{{Ah{AMj}}}}{{{f{AMj}}}AMj}{fc{}}{c{{Of{e}}}{}{}}000{{}{{Of{c}}}{}}000{fOh}0005{{{f{AMj}}}d}{{{f{AMj}}}{{Ah{BDd}}}}{{}c{}}000``````{{fh}b}0{f{{f{c}}}{}}0{{{f{Bl}}}{{f{Blc}}}{}}0{B@jBCl}{{{f{BCn}}}BCn}{{{f{BCl}}}BCl}{{f{f{Blc}}}b{}}0{fb}0{{}BCn}{{}BCl}{Fn{{f{c}}}{}}0{Fn{{f{Blc}}}{}}0{Fnb}0{{{f{BCn}}{f{BCn}}}d}{{{f{BCl}}{f{Dj}}}{{B`{Ml}}}}{{{f{BCn}}{f{BlH`}}}Hb}{{{f{BCl}}{f{BlH`}}}Hb}{cc{}}0{{{f{BCl}}Ml}{{f{Dj}}}}{{{f{BCl}}}{{f{B@j}}}}{{{f{BCl}}Ml}{{B`{{f{Dj}}}}}}{{}Fn}0{{}c{}}0{{{f{BCl}}}d}0{{{f{BCl}}}Fn}{{{f{BCl}}{f{BCl}}}d}{fc{}}0{c{{Of{e}}}{}{}}0{{}{{Of{c}}}{}}0{fOh}077`{f{{f{c}}}{}}{{{f{Bl}}}{{f{Blc}}}{}}{{}BDf}{Fn{{f{c}}}{}}{Fn{{f{Blc}}}{}}{{}b}{Fnb}{{{f{BlBDf}}}b}2{cc{}}6{{}Fn}{{}c{}}=<;{{}d}1`{{{f{BlBDh}}Ml{f{BCl}}}{{Ah{{f{BlBDh}}}}}}{{{f{BlBDh}}}{{f{BlBDh}}}}{{{f{BlBDh}}{f{Dj}}}{{Ah{{f{BlBDh}}}}}}>=;:8{BDhAMj}765{{BjFn{Lh{BCl}}BCnd}BDh}{c{{Of{e}}}{}{}}{{}{{Of{c}}}{}}{fOh}9```````>>8````````````````````````{{{f{BDj}}}{{f{Dj}}}}{f{{f{c}}}{}}0{{{f{Bl}}}{{f{Blc}}}{}}0`{Fn{{f{c}}}{}}{{{f{BDj}}}f}1{Fn{{f{Blc}}}{}}0{Fnb}0`{{{f{BDl}}{f{BlH`}}}{{Of{bB@n}}}}{{{f{BDj}}{f{BlH`}}}{{Of{bB@n}}}}0{cc{}}{cBDj{{BA`{{ALd{Dj}}}}}}1{{}{{Kh{{f{Dj}}BDl}{{Cf{b}}}}}}{{}Fn}0{{}c{}}0{cALbAJn}{{{f{Dj}}}BDj}````{{{Kh{{f{Dj}}BDl}{{Cf{b}}}}}b}{cALbBDn}{fDf}{c{{Of{e}}}{}{}}0{{}{{Of{c}}}{}}0{f{{Of{GfBBf}}}}{fOh}099`````````````````{{fh}b}{{{f{{AKf{Mb}}}}AEb}{{Of{{AKf{Ln}}ALb}}}}{{{f{{AKf{c}}}}}{{BE`{{E`{Dn}}}}}BEb}{{{f{{AKf{c}}}}}{{Of{{BEd{e}}ALb}}}BEbBEf}{{{f{{AKf{Ln}}}}AEb}{{AKf{Mb}}}}{{{f{{AKf{c}}}}AEb}{{BEh{c}}}BEb}{{{f{{AKf{c}}}}AEb}{{Of{{BEj{c}}ALb}}}BEb}{{{f{{BE`{{E`{Dn}}}}}}{B`{Fn}}Fn}{{AKb{Md}}}}{{{f{ACf}}}{{BE`{{E`{Dn}}}}}}{{{f{ACf}}}{{AKb{c}}}{BElBEn}}{{{f{ACf}}}{{BE`{Dj}}}}{f{{f{c}}}{}}{{{f{Bl}}}{{f{Blc}}}{}}{{{f{Hd}}{f{AEb}}BF`}{{Of{{Fh{Hd}}ALb}}}}{{{f{Hd}}{f{AEb}}}{{Of{{Fh{Hd}}ALb}}}}0{{{f{BF`}}}BF`}{{f{f{Blc}}}b{}}{fb}{{{f{{AKb{Ln}}}}}{{AKb{Mb}}}}{{{f{{AKb{Mb}}}}}{{AKb{Ln}}}}{{{f{{AKb{Md}}}}FnFn}{{AKb{Md}}}}{{{f{{AKb{Md}}}}}{{AKb{c}}}{BElBFb}}{{{f{{AKb{Md}}}}}{{AKb{c}}}{BElL`}}{{}BF`}{Fn{{f{c}}}{}}{Fn{{f{Blc}}}{}}{Fnb}{{{f{{AKb{BFd}}}}}{{AKb{In}}}}{{{f{BFf}}AEb}{{AKf{c}}}BEb}{{{f{BFf}}}{{BE`{{E`{Dn}}}}}}{{{f{{AKb{c}}}}FnFn}{{AKb{Md}}}{BElBFbAd}}{{{f{BF`}}{f{BlH`}}}{{Of{bB@n}}}}{cc{}}{FjBF`}{{}Fn}{{{f{{AKb{Ln}}}}}{{AKb{Ln}}}}0{{{f{{AKb{Mb}}}}}{{AKb{Mb}}}}0{{{f{{AKb{c}}}}FnFn}{{AKb{Md}}}{BEl{BFh{Md}}}}{{}c{}}`{{{f{{AKb{e}}}}{f{AEb}}}{{AKb{c}}}BEl{BEl{BFh{c}}}}{{{f{{AKb{c}}}}eAEb}{{AKb{c}}}BEl{{Ch{c}{{Cf{d}}}}}}{{{f{{AKb{c}}}}AEb}ACfBEl}{{{f{{AKb{c}}}}}{{Of{{BEd{e}}ALb}}}{BElBFjBFl}BEf}{{{f{{AKb{c}}}}{f{AEb}}}{{AKb{e}}}{BElL`}{BElL`}}{{{f{{AKb{c}}}}{f{AEb}}}{{AKb{c}}}BEl}`{{{f{{AKb{Ln}}}}B@dB@d}{{AKb{Mb}}}}::{{{f{{AKb{Mb}}}}B@dB@d}{{AKb{Ln}}}}::{{{f{{AKb{Mb}}}}B@d}{{AKb{Ln}}}}{{{f{{AKb{Mb}}}}B@d}{{AKb{Mb}}}}{{{f{{AKb{Mb}}}}B@dB@d{f{{B`{Bj}}}}}{{AKb{Mb}}}}{fc{}}{c{{Of{e}}}{}{}}{{}{{Of{c}}}{}}{fOh}{{}BF`}{{{f{{BEj{Mb}}}}}{{Of{{BEj{Ln}}ALb}}}}{{{f{{BEj{c}}}}AEb}{{AKf{c}}}BEb}{{{f{{BEj{c}}}}}{{Of{{BEd{e}}ALb}}}BEbBEf}{{{f{{BEj{Ln}}}}}{{BEj{Mb}}}}{{{f{{BEj{c}}}}}{{BE`{Dj}}}BEb}{{{f{{BE`{Dj}}}}}{{BEj{c}}}BEb}{{}c{}}`{{{f{Bl{Gd{Dn}}}}BFn}Fn}````````{B@dMb}{{{f{Dj}}{f{Dj}}{f{B@d}}}{{B`{Mb}}}}{{{f{Dj}}{f{Dj}}{f{c}}{f{B@d}}}{{B`{Mb}}}BG`}```{{fh}b}{f{{f{c}}}{}}{{{f{Bl}}}{{f{Blc}}}{}}{{{f{BGb}}}BGb}{{f{f{Blc}}}b{}}{fb}{Fn{{f{c}}}{}}{Fn{{f{Blc}}}{}}{Fnb}{cc{}}{{}BGd}{{}BGb}{{}{{B`{Fn}}}}{{}Df}{{}d}{{}Fn}{{}c{}}{{{B`{BGd}}}b}{BGbb}{{{B`{Fn}}}b}2{{{B`{d}}}b}{fc{}}{c{{Of{e}}}{}{}}{{}{{Of{c}}}{}}{fOh}8```````````{{fh}b}00{{{f{BlBDd}}{Gd{En}}{f{BGf}}}{{Ah{b}}}}{{{f{BlBDd}}{Gd{Af}}{f{BGf}}}{{Ah{b}}}}{{{f{BDd}}{f{Ch}}}{{Gd{En}}}}0{{{f{BDd}}{f{Gl}}}{{Ah{BDd}}}}{{Fn{Gd{En}}}BDd}{{{f{BDd}}{f{{E`{Bj}}}}}{{Ah{BDd}}}}0{{{f{BDd}}{f{{E`{Bj}}}}{f{BGf}}d}{{Ah{BDd}}}}{{{f{BDd}}MbFn}BDd}{{{f{BDd}}}BDd}{{{f{BDd}}{f{Af}}}c{}}{{{f{BDd}}{f{BDd}}}c{}}{{BDd{f{Af}}}c{}}{{{f{BlBDd}}}{{f{BlBDd}}}}0{{{f{BlBDd}}{BGj{BGh}}}{{Ah{b}}}}{{{f{BlBDd}}{f{Dj}}e}{{Ah{{f{BlBDd}}}}}BGl{{Ol{{f{En}}}{{Cf{c}}}}}}{{{f{BlBDd}}Fne}{{Ah{{f{BlBDd}}}}}BGl{{Ol{{f{En}}}{{Cf{c}}}}}}33{f{{f{c}}}{}}0000{{{f{Bl}}}{{f{Blc}}}{}}0000{{{f{BDd}}}{{`{{Bf{}{{Bb{Fn}}}}}}}}:{{{f{BlBDd}}}b}{{{f{BGn}}}BGn}{{{f{BH`}}}BH`}={{f{f{Blc}}}b{}}00{fb}00`{{{f{BDd}}{f{Dj}}}{{Ah{{f{En}}}}}}{{{f{BlBDd}}c}b{{Bf{}{{Bb{En}}}}}}{{{f{BDd}}e}{{Ah{{Gd{{f{En}}}}}}}{{Kl{Dj}}}{{Hh{}{{Bb{c}}}}}}{{}BH`}{{}BDd}{Fn{{f{c}}}{}}0000{Fn{{f{Blc}}}{}}0000{{BDd{f{Af}}}c{}}{{{f{BDd}}{f{Af}}}c{}}{{{f{BDd}}{f{BDd}}}c{}}{Fnb}0000{{{f{BDd}}{f{Dj}}}{{Ah{BDd}}}}{{{f{BlBDd}}{f{Dj}}}{{Ah{En}}}}{{{f{BDd}}e}BDd{{BA`{Bj}}}{{Hh{}{{Bb{c}}}}}}{{{f{BDd}}{f{{BHb{Bj}}}}}BDd}{{{f{BDd}}{B`{{f{{E`{c}}}}}}}{{Ah{BDd}}}{}}{{{f{BDd}}}{{Gd{Eb}}}}<{{{f{BHd}}}BDd}{{{f{BGf}}}BDd}{{{f{BH`}}{f{BH`}}}d}{{{f{BDd}}{f{BDd}}}d}00{{f{f{c}}}d{}}0{{{f{BDd}}}Fn}`{{{f{BDd}}e}{{Ah{BDd}}}{{BA`{Bj}}}{{Hh{}{{Bb{c}}}}}}{{{f{BDd}}{Gd{En}}}{{Ah{BDd}}}}{{{f{BlBDd}}{f{BDd}}}{{Ah{b}}}}{{{f{BDd}}}{{Gd{Mn}}}}{{{f{BDd}}AGh}{{Ah{BDd}}}}{{{f{BDd}}{f{Gl}}}{{Ah{BDd}}}}6{{{f{BGn}}{f{BlH`}}}Hb}{{{f{BH`}}{f{BlH`}}}Hb}{{{f{BDd}}{f{BlH`}}}Hb}0{cc{}}0000{cBDd{{Hh{}{{Bb{Af}}}}}}{cBDd{{Hh{}{{Bb{En}}}}}}{{{f{{E`{BHf}}}}}{{Ah{BDd}}}}{{{f{{E`{BHf}}}}{f{BGf}}}{{Ah{BDd}}}}{{c{f{BGf}}}{{Ah{BDd}}}{{Bf{}{{Bb{{f{BHf}}}}}}}}{{{f{BDd}}Fn}{{B`{{Gd{Ib}}}}}}{{{f{BDd}}{f{Dj}}}{{B`{Fn}}}}{{{f{BDd}}}{{Gd{{f{Bj}}}}}}{{{f{BDd}}}{{Gd{Bj}}}}{{{f{BDd}}}{{Gd{{f{Dj}}}}}}{{{f{BDd}}}{{f{{E`{En}}}}}}{{{f{BlBDd}}}{{f{Bl{Gd{En}}}}}}{{{f{BDd}}Fn}{{Ah{BHf}}}}{{{f{BDd}}Fn{f{BlBHf}}}{{Ah{b}}}}{{{f{BDd}}Fn{f{BlBHf}}}b}{{{f{BDd}}}{{B`{{Ah{Eb}}}}}}`{{{f{BDd}}e}{{Ah{BHh}}}{{BA`{Bj}}}{{Hh{}{{Bb{c}}}}}}0{{{f{BDd}}{Gd{En}}dd}{{Ah{BHh}}}}{{{f{BH`}}{f{Blc}}}bABj}{{{f{BlBDd}}{B`{Nl}}}{{Ah{BBl}}}}{{{f{BDd}}{B`{Fn}}}BDd}{{{f{BDd}}}Fn}{{{f{BDd}}{f{{E`{En}}}}}{{Ah{BDd}}}}{{{f{BlBDd}}{f{{E`{En}}}}}{{Ah{{f{BlBDd}}}}}}{{{f{BlBDd}}{f{{E`{En}}}}}{{f{BlBDd}}}}{{{f{BDd}}BHj}{{f{c}}}{}}{{{f{BDd}}Fn}{{f{c}}}{}}{{{f{BDd}}{f{Dj}}}{{f{c}}}{}}{{{f{BDd}}{BHl{Fn}}}{{f{c}}}{}}{{{f{BDd}}{BHn{Fn}}}{{f{c}}}{}}{{{f{BDd}}{BI`{Fn}}}{{f{c}}}{}}{{{f{BDd}}{BIb{Fn}}}{{f{c}}}{}}{{{f{BDd}}{Mf{Fn}}}{{f{c}}}{}}{{}Fn}0000{{{f{BlBDd}}Fnc}{{Ah{{f{BlBDd}}}}}BGl}{{}c{}}000000{{{f{BDd}}}{{Ah{Gl}}}}{{{f{BDd}}}d}1{{{f{BDd}}}{{`{{Jn{}{{Bb{{f{Af}}}}}}}}}}{{{f{BDd}}}{{`{{Bf{}{{Bb{BDd}}}}}}}}{{{f{BDd}}ANfd}BId}{{{f{BDd}}}BIf}{{{f{BDd}}}Fn}4{{{f{BDd}}}{{Ah{{B`{En}}}}}}1{{{f{BDd}}BGn}{{Ah{{B`{Af}}}}}}1{{BDd{f{Af}}}c{}}{{{f{BDd}}{f{Af}}}c{}}{{{f{BDd}}{f{BDd}}}c{}}5{{{Gd{En}}}{{Ah{BDd}}}}{{Fn{Gd{En}}}BDd}{{{Gd{En}}}BDd}22{{{Gd{En}}Fn}{{Ah{BDd}}}}0{{{f{BlBId}}}{{B`{c}}}{}}{{{f{BlBIf}}}{{B`{c}}}{}}{{{f{BDd}}}BDd}{{{f{BDd}}}{{`{{N`{}{{Bb{{f{Af}}}}}}}}}}{{{f{BDd}}ed}{{Ah{{Gd{BDd}}}}}{{BA`{Bj}}}{{Hh{}{{Bb{c}}}}}}0{{BDde}{{Ah{c}}}{}{{Ch{BDd}{{Cf{{Ah{c}}}}}}}}{{{f{BlBDd}}e}{{Ah{c}}}{}{{Ch{{f{BlBDd}}}{{Cf{{Ah{c}}}}}}}}{{BDdgc}{{Ah{e}}}{}{}{{Ch{BDdc}{{Cf{{Ah{e}}}}}}}}{{{f{BlBDd}}}{{B`{En}}}}{{{f{BlBDd}}}b}{{BDdANf}{{BGj{{Fh{Hd}}}}}}?{{BDd{f{Af}}}c{}}{{{f{BDd}}{f{Af}}}c{}}{{{f{BlBDd}}{f{Dj}}Bj}{{Ah{{f{BlBDd}}}}}}{{{f{BlBDd}}{f{Dj}}c}{{Ah{{f{BlBDd}}}}}BIh}{{{f{BlBDd}}Fnc}{{Ah{{f{BlBDd}}}}}BGl}{{{f{BlBDd}}Bjc}{{Ah{{f{BlBDd}}}}}BIh}>`{{{f{BDd}}{f{Af}}dd{B`{J`}}}{{Ah{BDd}}}}0{{{f{BDd}}Fndd{B`{J`}}}{{Ah{BDd}}}}{{{f{BDd}}}BGf}{{{f{BDd}}{f{BDd}}}{{Ah{b}}}}{{{f{BDd}}e}{{Ah{BDd}}}{{BA`{Bj}}}{{Hh{}{{Bb{c}}}}}}{{{f{BDd}}Fn}{{B`{{f{En}}}}}}{{{f{BDd}}c}{{Ah{BDd}}}{{BIj{Fn}}}}{{{f{BDd}}c}{{Ah{{Gd{En}}}}}{{BIl{Bj}}}}3{{{f{BDd}}e{f{BIn}}}{{Ah{BDd}}}{{BA`{Bj}}}{{Hh{}{{Bb{c}}}}}}{{{f{BDd}}e{f{BGf}}}{{Ah{BDd}}}{{BA`{Bj}}}{{Hh{}{{Bb{c}}}}}}{{{f{BlBDd}}e}{{Ah{b}}}{{BA`{Bj}}}{{Hh{}{{Bb{c}}}}}}{{{f{BlBDd}}Fn}b}{{{f{BDd}}}{{Hl{FnFn}}}}{{{f{BDd}}Mb}BDd}{{{f{BDd}}}d}{{{f{BlBDd}}}b}{{{f{BDd}}}Fn}{{{f{BId}}}{{Hl{Fn{B`{Fn}}}}}}{{{f{BIf}}}{{Hl{Fn{B`{Fn}}}}}}{{{f{BDd}}MbFn}BDd}00{{{f{BDd}}cF`}{{Ah{BDd}}}{{BIl{Bj}}}}{{{f{BlBDd}}cF`}{{Ah{{f{BlBDd}}}}}{{BIl{Bj}}}}{{{f{BDd}}Mb}{{Hl{BDdBDd}}}}0{{{f{BlBDd}}}{{`{{Bf{}{{Bb{BDd}}}}}}}}{{BDdFnd}{{Gd{BDd}}}}{{{f{BDd}}{f{Af}}}c{}}{{{f{BDd}}{f{BDd}}}c{}}{{BDd{f{Af}}}c{}}{{{f{BDd}}BGn}{{Ah{{B`{Af}}}}}}{{{f{BDd}}{B`{Fn}}}BDd}{{{f{BDd}}{f{El}}}{{Ah{BDd}}}}{BDd{{Gd{En}}}}{{{f{BDd}}{f{El}}}BDd}{{{f{BDd}}{f{El}}d}BDd}{{{f{BDd}}BJ`}{{Ah{Ob}}}}{fc{}}00{fDf}{{{f{BlBDd}}{B`{{f{Dj}}}}{B`{{Od{Df{Gd{Df}}}}}}}{{Ah{BDd}}}}{{{f{BlBDd}}{B`{{f{Dj}}}}{B`{{Od{Bj{Gd{Bj}}}}}}}{{Ah{BDd}}}}{{{f{BlBDd}}{f{Dj}}e}{{Ah{{f{BlBDd}}}}}BGl{{Ol{{f{Af}}}{{Cf{{Ah{c}}}}}}}}{{{f{BlBDd}}Fne}{{Ah{{f{BlBDd}}}}}BGl{{Ol{{f{En}}}{{Cf{{Ah{c}}}}}}}}{{{f{BlBDd}}c}{{Ah{b}}}{{Hh{}{{Bb{{Ah{{BGj{{Fh{Hd}}}}}}}}}}}}{{{f{BlBDd}}c}{{Ah{b}}}{{Hh{}{{Bb{{BGj{{Fh{Hd}}}}}}}}}}{c{{Of{e}}}{}{}}0000{{{Hl{BJb{f{BHd}}}}}{{Ah{BDd}}}}{BJd{{Ah{BDd}}}}{{c{f{BGf}}}{{Ah{BDd}}}{{Bf{}{{Bb{{Ah{{f{BHf}}}}}}}}}}{{{f{BDd}}{f{Dj}}}{{Ah{Fn}}}}{{}{{Of{c}}}{}}0000{f{{Of{GfBBf}}}}{fOh}0000{{{f{BDd}}{B`{{f{{E`{Df}}}}}}BH`{B`{{Hl{MbFn}}}}}{{Ah{BDd}}}}{{{f{BDd}}d{B`{{Gd{Bj}}}}BH`{B`{{Hl{MbFn}}}}}{{Ah{BDd}}}}1{{{f{BDd}}{f{BDd}}}{{Ah{BDd}}}}{{{f{BlBDd}}{f{BDd}}}{{Ah{{f{BlBDd}}}}}}{{{f{BlBDd}}{f{BDd}}}b}{{}c{}}0000{{{f{BDd}}}Fn}{{{f{BlBDd}}c}{{Ah{{f{BlBDd}}}}}BGl}{{{f{BlBDd}}c{f{BGf}}}{{Ah{{f{BlBDd}}}}}BGl}{{{f{BlBDd}}En}{{f{BlBDd}}}}{{{f{BDd}}Bj{B`{Id}}}{{Ah{BDd}}}}{{{f{BlBDd}}Bj{B`{Id}}}{{f{BlBDd}}}}``````{{fh}b}0{{{f{En}}{f{En}}}c{}}{{EnEn}c{}}{{{f{En}}c}e{AbL`}{}}{{Enc}e{AbL`}{}}{{{f{En}}{f{Al}}}En}0000000{{{f{En}}{f{Al}}nNd}En}{{{f{En}}{f{Al}}Dn}En}220{{{f{En}}}{{Ah{Lb}}}}{{{f{BlEn}}{f{En}}}{{Ah{{f{BlEn}}}}}}{{{f{En}}{f{En}}ceg}En{{Ch{{f{Af}}{f{Af}}}{{Cf{Af}}}}}{{Ch{{f{Lb}}{f{Af}}}{{Cf{Af}}}}}{{Ch{{f{Af}}{f{Lb}}}{{Cf{Af}}}}}}{{{f{En}}{f{En}}c}{{Ah{En}}}{{Ch{{f{Af}}{f{Af}}}{{Cf{Af}}}}}}{{{f{En}}c}En{{Ch{{f{Af}}}{{Cf{Af}}}}}}{{{f{En}}Ej}El}{{{f{En}}}{{Ah{{f{Ed}}}}}}{{{f{En}}}Ef}{{{f{BJf}}}{{f{Af}}}}{{{f{En}}}{{f{Af}}}}{{{f{En}}}{{B`{{f{`}}}}}}{{{f{En}}}{{B`{{f{BJf}}}}}}{{{f{En}}}{{B`{{f{Af}}}}}}{{{f{BJf}}}Af}{{{f{En}}}{{Ah{{f{Fb}}}}}}{{{f{En}}}{{Ah{{f{AKh}}}}}}{{{f{En}}}{{B`{BJh}}}}{{{f{En}}{f{En}}}{{Ah{En}}}}{{EnEn}c{}}{{{f{En}}{f{En}}}c{}}021120{{{f{En}}}{{Ah{{f{Gl}}}}}}{f{{f{c}}}{}}0{{{f{Bl}}}{{f{Blc}}}{}}0{{{f{BJf}}{f{Eb}}}{{Ah{BJf}}}}{{{f{En}}{f{Eb}}}{{Ah{En}}}}10{{{f{BJf}}{f{Eb}}Fj}{{Ah{BJf}}}}{{{f{En}}{f{Eb}}Fj}{{Ah{En}}}}{{{f{En}}}{{Ah{{f{AMj}}}}}}{{{f{En}}}En}{{{f{BJf}}}BJf}1{{f{f{Blc}}}b{}}0{fb}0{{{f{En}}}{{Ah{{f{Jh}}}}}}{{}En}{Fn{{f{c}}}{}}0{Fn{{f{Blc}}}{}}0{{{f{En}}c}e{AbL`}{}}{{Enc}e{AbL`}{}}{{EnEn}c{}}{{{f{En}}{f{En}}}c{}}{{{f{En}}{f{En}}}{{Ah{En}}}}{Fnb}0<={{{f{BJf}}}{{f{Eb}}}}{{{f{En}}}{{f{Eb}}}}{{{f{En}}{f{En}}}d}{{{f{En}}{f{En}}}{{Ah{Gl}}}}011{{{f{En}}}{{Ah{En}}}}{{{f{BlEn}}{f{En}}}{{Ah{{f{BlEn}}}}}}{{{f{En}}IbFn}{{Ah{En}}}}{{{f{En}}}{{Ah{{f{ALf}}}}}}{{{f{En}}}{{Ah{{f{ALh}}}}}}{{{f{En}}}{{ALd{Mn}}}}{{{f{En}}AGh}{{Ah{En}}}}{{{f{En}}{f{Gl}}}{{Ah{En}}}}{{{f{BJf}}{f{BlH`}}}Hb}{{{f{En}}{f{BlH`}}}Hb}{cc{}}{BJfEn}{AfEn}2{{AfFn}BJf}{{BjFn{f{Eb}}}En}{{{f{En}}FnFn}En}{{{f{En}}Fn}{{Ah{Ib}}}}{{{f{En}}}If}{{{f{En}}}{{B`{{Fh{Ff}}}}}}{{{f{En}}Fn}{{B`{{f{Ij}}}}}}{{{f{En}}Fn}Ib}{{{f{En}}{f{En}}}{{Ah{Gl}}}}0{{{f{BJf}}}d}{{{f{En}}}d}{{{f{En}}{B`{Fn}}}En}{{{f{En}}}{{Ah{{f{BC`}}}}}}{{{f{En}}}{{Ah{{f{BCb}}}}}}{{{f{En}}}{{Ah{{f{BCd}}}}}}{{{f{En}}}{{Ah{{f{BBn}}}}}}{{{f{En}}}{{Ah{{f{El}}}}}}{{{f{En}}}{{Ah{Ef}}}}{{}Fn}0{{}c{}}0{BGlEn}{BJfEn}{EnEn}{EnBDd}{{{f{BlEn}}}{{f{BlAf}}}}{BJfBJf}{{{f{BJf}}}d}{{{f{En}}}d}{{{f{En}}}{{Ah{Gl}}}}000{{{f{En}}}Gl}0{{{f{En}}}Kb}{{{f{BJf}}}{{B`{{f{Af}}}}}}{{{f{BJf}}}Fn}{{{f{En}}}Fn}{{{f{En}}}{{Ah{{f{Ef}}}}}}{{{f{En}}{f{En}}}{{Ah{Gl}}}}0{{{f{BlBJf}}c}b{{Ch{Lb}{{Cf{Lb}}}}}}{{{f{En}}c}Gl{{Ch{{f{Af}}}{{Cf{Gl}}}}}}{{{f{En}}}{{Ah{Lb}}}}{{{f{En}}}Lb}11{{Enc}e{AbL`}{}}{{{f{En}}{f{En}}}c{}}{{EnEn}c{}}{{{f{En}}c}e{AbL`}{}}:{{{f{En}}}{{Ah{Fn}}}}{{{f{BJf}}}{{f{Bj}}}}{{{f{En}}}{{f{Bj}}}}{{BjLbFn}BJf}{{Bjc}En{}}{{BjEb}BJf}{{Bj{f{Eb}}}En}{{{f{En}}FnFn}En}{{BjLbFn}En}0{{{f{En}}{f{En}}}{{Ah{Gl}}}}0{{{f{En}}}Fn}{{{f{En}}}{{Ah{Lb}}}}{{{f{En}}}BJj}1{{{f{En}}nNd}{{Ah{Lb}}}}{{{f{En}}}En}{{{f{En}}{f{En}}}c{}}{{{f{En}}c}e{AbL`}{}}{{Enc}e{AbL`}{}}{{EnEn}c{}}{{{f{BlBJf}}Bj}{{f{BlBJf}}}}{{{f{BlEn}}Bj}b}{{{f{En}}{f{{E`{B@b}}}}}{{Ah{En}}}}0{{{f{BJf}}Fn}BJf}8{{{f{En}}ndd{B`{J`}}}{{Ah{En}}}}{{{f{En}}Fndd{B`{J`}}}{{Ah{En}}}}{{{f{BJf}}}{{f{Lb}}}}{{{f{BlEn}}Kb}b}{{{f{En}}Mb}En}{{{f{BlEn}}}b}{{{f{En}}{B`{J`}}}En}{{{f{En}}MbFn}En}{{{f{En}}Ej}{{Ah{En}}}}0{{{f{En}}Mb}{{Hl{EnEn}}}}{{{f{En}}Dn}{{Ah{Lb}}}}{{{f{En}}}{{Ah{{f{Dd}}}}}}{{{f{BJf}}{f{Eb}}}{{Ah{BJf}}}}{{{f{En}}{f{Eb}}}{{Ah{En}}}}{{{f{En}}{f{En}}}c{}}{{{f{En}}c}e{AbL`}{}}{{EnEn}c{}}{{Enc}e{AbL`}{}}{{{f{En}}}{{Ah{Lb}}}}{{{f{En}}{B`{Fn}}}En}{{{f{En}}{f{El}}}{{Ah{En}}}}{BJfAf}{EnAf}{{{f{En}}{f{{E`{Id}}}}}{{Ah{En}}}}{{{f{En}}{f{{E`{Id}}}}}En}{{{f{En}}{f{El}}}En}{fc{}}0{{{f{En}}}En}{{{f{BJf}}}Af}{{EnEn}{{Ah{En}}}}{{{f{En}}{f{En}}ceg}{{Ah{En}}}{{Ch{{f{Af}}{f{Af}}}{{Cf{{Ah{Af}}}}}}}{{Ch{{f{Lb}}{f{Af}}}{{Cf{{Ah{Af}}}}}}}{{Ch{{f{Af}}{f{Lb}}}{{Cf{{Ah{Af}}}}}}}}{{{f{En}}{f{En}}c}{{Ah{En}}}{{Ch{{f{Af}}{f{Af}}}{{Cf{{Ah{Af}}}}}}}}{{{f{En}}c}{{Ah{En}}}{{Ch{{f{Af}}}{{Cf{{Ah{Af}}}}}}}}{{{f{En}}}{{B`{{f{Ed}}}}}}{{{f{En}}}{{B`{{f{Fb}}}}}}{{{f{En}}}{{B`{{f{AKh}}}}}}{{{f{En}}}{{B`{{f{Gl}}}}}}{{{f{En}}}{{B`{{f{AMj}}}}}}{{{f{En}}}{{B`{{f{Jh}}}}}}{{{f{En}}}{{B`{{f{ALf}}}}}}{{{f{En}}}{{B`{{f{ALh}}}}}}{c{{Of{e}}}{}{}}0{{{f{En}}}{{B`{{f{BC`}}}}}}{{{f{En}}}{{B`{{f{BCb}}}}}}{{{f{En}}}{{B`{{f{BCd}}}}}}{{{f{En}}}{{B`{{f{BBn}}}}}}{{{f{En}}}{{B`{{f{El}}}}}}{{}{{Of{c}}}{}}0{{{f{En}}}{{B`{{f{Ef}}}}}}{{{f{En}}c}{{Ah{Gl}}}{{Ch{{f{Af}}}{{Cf{{Ah{Gl}}}}}}}}{{EnEn}{{Ah{En}}}}{{{f{En}}}{{B`{{f{Dd}}}}}}1{{{f{En}}}{{B`{{f{BBj}}}}}}{{{f{En}}}{{B`{{f{B@l}}}}}}{{{f{En}}}{{B`{{f{BBl}}}}}}{{{f{En}}}{{B`{{f{BBh}}}}}}{fOh}0{{{f{En}}}{{Ah{{f{BBj}}}}}}{{{f{En}}}{{Ah{{f{B@l}}}}}}{{{f{En}}}{{Ah{{f{BBl}}}}}}{{{f{En}}}{{Ah{{f{BBh}}}}}}{{{f{En}}}{{Ah{En}}}}0{AfBJf}{{{f{En}}Dn}{{Ah{Lb}}}}{{{f{En}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}{{{f{En}}Nl{f{Bl{E`{J`}}}}}{{Ah{b}}}}{{}c{}}0{{EnBj}En}{{{f{En}}c}En{AbL`}}{{{f{En}}}{{Ah{Lb}}}}{{{f{En}}{f{Gl}}{f{En}}}{{Ah{En}}}}{{{f{En}}{f{{l{An}}}}{f{En}}}{{Ah{En}}}}`{{fh}b}{f{{f{c}}}{}}{{{f{Bl}}}{{f{Blc}}}{}}{{{f{BJl}}}BJl}{{f{f{Blc}}}b{}}{fb}{{}BJl}{Fn{{f{c}}}{}}{Fn{{f{Blc}}}{}}{Fnb}{{{f{BJl}}{f{BJl}}}d}{{f{f{c}}}d{}}0{{{f{BJl}}{f{BlH`}}}Hb}{cc{}}{{{f{BJl}}{f{Blc}}}bABj}`{{}Fn}{{}c{}}`{fc{}}{c{{Of{e}}}{}{}}{{}{{Of{c}}}{}}{fOh}``4````````````````````````````````{{fh}b}000{{{f{BHh}}}{{Ah{BDd}}}}`{{{f{BJn}}}{{f{{E`{BK`}}}}}}{{{f{BHh}}c}{{Ah{BDd}}}{{Cn{BDd}{{Cf{{Ah{BDd}}}}}}JjJl}}{{{f{Al}}}Ef}{f{{f{c}}}{}}0000000{{{f{Bl}}}{{f{Blc}}}{}}0000000{{{f{BJn}}}BJn}{{{f{Al}}}Al}{{{f{BHh}}}BHh}{{{f{BKb}}}BKb}{{f{f{Blc}}}b{}}000{fb}000;{{}BJn}{{}Al}{Fn{{f{c}}}{}}00{{{f{BKd}}}{{f{c}}}{}}11111{Fn{{f{Blc}}}{}}0000000`{{BKfe}{}{}{{BKh{c}}}}{Fnb}000{{{f{BlBJn}}}b}1111{{{f{BJn}}{f{BJn}}}d}{{{f{Al}}{f{Al}}}d}{{f{f{c}}}d{}}000`{{{f{BKj}}}Id}{{{f{BJn}}}{{f{{E`{Id}}}}}}{{{f{BHh}}}{{Ah{BDd}}}}{{{f{BlBJn}}}{{f{Bl{Gd{Id}}}}}}{{{f{BJn}}{f{BlH`}}}Hb}{{{f{Al}}{f{BlH`}}}Hb}{{{f{BHh}}{f{BlH`}}}Hb}{{{f{BKb}}{f{BlH`}}}Hb}0{{{f{Dj}}BKb}Bj}{cc{}}0000{{{Gd{BKl}}}BJn}{{{Gd{{Gd{BKl}}}}}BJn}2{BJnAl}33{cBJn{{Hh{}{{Bb{BKl}}}}}}{cBJn{{Hn{}{{Bb{BKl}}}}}}{{{f{Al}}Fn}BKj}{{{f{BHh}}}{{f{Al}}}}{{{f{BlBHh}}}{{f{BlAl}}}}{{{f{Al}}}El}{{{f{BKn}}dd}{{Ah{Al}}}}0{{{f{BHh}}}{{Ah{BDd}}}}{{{f{BlAl}}}{{f{BlBJn}}}}{{}Fn}0000000{{}c{}}0000000{AlBJn}1{BJnc{}}{{{f{BJn}}}c{}}310{{{f{BKj}}}d}{{{f{Al}}}d}{{{f{BJn}}}d}{{{f{BJn}}}{{BLb{{BL`{{Kf{Id}}}}{Kf{BK`}}}}}}{{{f{Al}}}BLd}{{{f{BHh}}}{{Gd{En}}}}{{{f{BHh}}{B`{{Hl{MbFn}}}}}{{Gd{En}}}}={{{f{BKj}}}Fn}{{{f{Al}}}Fn}?????{{{Gd{Id}}{Gd{BK`}}d}BJn}{{{f{BDd}}{Gd{En}}Al{B`{{Gd{Bj}}}}}BHh}{{{f{BlBLd}}}{{B`{c}}}{}}{{{f{BlBLd}}Fn}{{B`{c}}}{}}{{{f{BHh}}c}{{Ah{BDd}}}{{Ch{BDd}{{Cf{{Ah{BDd}}}}}}JjJl}}{f}{{{f{Al}}}BKf}{{{f{BHh}}nNd}{{Ah{BDd}}}}{{BHhe}BHh{{BA`{Bj}}}{{Hh{}{{Bb{c}}}}}}{{{f{Al}}MbFn}BKd}{{{f{BlBJn}}}b}{{{f{BlAl}}}b}{{{f{BHh}}Dn}{{Ah{BDd}}}}{{{f{BHh}}}{{Ah{BDd}}}}{Al{{Gd{Id}}}}0{BHhAl}{{{f{BlBHh}}}Al}{fc{}}000{fDf}{c{{Of{e}}}{}{}}0000000{{}{{Of{c}}}{}}0000000{f{{Of{GfBBf}}}}{fOh}0000000{AlAl}{{{f{Al}}}{{f{BJn}}}}{{{f{Al}}}{{f{BLf}}}}={{}c{}}0000000`````{{{f{BJn}}c}Af{{Ch{{Hl{Id{f{BK`}}}}}{{Cf{B`}}}}JjJl}}{{{f{BJn}}c}Af{{Ch{{Hl{Id{f{BK`}}}}}{{Cf{}}}}JjJl}}{{{f{{E`{{BLh{Id}}}}}}c}Af{{Ch{{BLh{Id}}}{{Cf{B`}}}}JjJl}}{{{f{{E`{{BLh{Id}}}}}}c}Af{{Ch{{BLh{Id}}}{{Cf{}}}}JjJl}}{{{f{{E`{c}}}}e{B`{BLj}}}{{AKb{c}}}{BLlBEl}{{Bf{}{{Bb{{Hl{IdId}}}}}}I`}}{{{f{{E`{c}}}}{f{Hj}}e{B`{BLj}}}{{AKb{c}}}{BLlBEl}{{Bf{}{{Bb{{Hl{IdId}}}}}}I`}}{{{f{{l{c}}}}IdId}{{l{c}}}Cd}{{{f{BLf}}{f{{E`{Gb}}}}}d}{{{f{BLn}}{f{Al}}}Af}{{BM`BM`}BM`}0`{{{f{BMb}}{f{BDd}}{f{Al}}}{{Ah{Af}}}}{{{f{BMb}}}{{Ah{{f{Bj}}}}}}```````````````````````{{fh}b}00{{{f{BlBMd}}Ib}{{B`{b}}}}{{{f{BlBMf}}{f{Ib}}}b}0{f{{f{c}}}{}}00{{{f{Bl}}}{{f{Blc}}}{}}00{{{f{BMd}}}BMd}{{{f{BMf}}}BMf}{{{f{BHf}}}BHf}{{f{f{Blc}}}b{}}00{fb}00{{{f{{E`{c}}}}}Eb{{BAj{Eb}}}}{{}BHf}{Fn{{f{c}}}{}}00{Fn{{f{Blc}}}{}}00{Fnb}00{{{f{BHf}}{f{BHf}}}d}{{f{f{c}}}d{}}0{{{f{BHf}}{f{BlH`}}}Hb}{{{Hl{{f{Eb}}Fn}}}BMd}{cc{}}0{{{Hl{{f{Eb}}Fn}}}BMf}1{{gFn}BGf{{BA`{Bj}}}{{BA`{Eb}}}{{Bf{}{{Bb{{Gd{{Hl{ce}}}}}}}}}}{{}Fn}00{{}c{}}00{BMdAf}{BMfAf}{{{f{Eb}}Fn}BMd}{{{f{Eb}}Fn}BMf}{{{Gd{Ib}}}BHf}{{{f{BlBMd}}Fn}Af}{{{f{BlBMf}}Fn}Af}{{{f{{E`{BHf}}}}{B`{Fn}}}{{Ah{BGf}}}}0{{{f{{E`{BHf}}}}{B`{Fn}}}{{Ah{{Gd{Eb}}}}}}{fc{}}00{c{{Of{e}}}{}{}}00{{}{{Of{c}}}{}}00{fOh}00==={{{f{{E`{BDd}}}}}{{Ah{BDd}}}}{{{f{{E`{BDd}}}}d}{{Ah{BDd}}}}````{{J`J`}J`}{{{f{{E`{BDd}}}}{B`{Nl}}}{{Ah{{Hl{{Gd{BBl}}Nl}}}}}}{{{f{{AKf{Mb}}}}Nl{f{Bl{Gd{J`}}}}}b}{f{{f{c}}}{}}{{{f{Bl}}}{{f{Blc}}}{}}{{{f{{E`{En}}}}{B`{Nl}}{f{Bl{Gd{J`}}}}}{{Ah{Nl}}}}{{}BMh}{Fn{{f{c}}}{}}{Fn{{f{Blc}}}{}}{Fnb}{{{f{BMh}}}J`}{cc{}}{{}Fn}{{}c{}}{c{{Of{e}}}{}{}}{{}{{Of{c}}}{}}{fOh}{{{f{BMj}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}0{{{f{BMj}}Nl{f{Bl{E`{J`}}}}}{{Ah{b}}}}05{{{f{BlBMh}}{f{{E`{Dn}}}}}b}{{{f{BlBMh}}Ln}b}{{{f{BlBMh}}Mb}b}{{{f{BlBMh}}Ml}b}{{{f{BlBMh}}J`}b}```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}00000000000{{{f{{Lh{ce}}}}}{{f{e}}}NhBMl}{{{f{{Lh{c}}}}}BMn{BN`Nh}}{{{f{{Lh{ce}}}}}{}NhBMl}{{{f{{Lh{c}}}}}LnBNb}{{{f{Bj}}}{{f{Dj}}}}{{{f{Bj}}}{{f{BNd}}}}{{{f{Bj}}}{{f{{E`{Dn}}}}}}{{{f{Bj}}}{{f{BNf}}}}{{{f{{Lh{ce}}}}}{{f{c}}}NhBMl}4{{{Lh{{E`{{BNh{c}}}}e}}}{{Lh{{E`{c}}e}}}{}BMl}{{{Lh{{BNh{c}}e}}}{{Lh{ce}}}{}BMl}{f{{f{c}}}{}}700030000000000{{{f{Bl}}}{{f{Blc}}}{}}0000000000000{{{f{AMj}}{f{AMj}}c}{{Ah{AMj}}}AMl}{{{f{{Lh{c}}}}}{{B`{{f{AJn}}}}}{AJnNh}}`{{{f{BNj}}{f{Af}}}{{Ah{Af}}}}{{{f{BNj}}c}{{Ah{Af}}}Ad}{{{f{Bj}}}Bj}{{{f{Oj}}}Oj}{{{f{BNl}}}BNl}{{{f{{Lh{ce}}}}}{{Lh{ce}}}Nh{BMlAAb}}{{{f{Nf}}}Nf}{{{f{BJ`}}}BJ`}{{{f{BAd}}}BAd}{{{f{Nd}}}Nd}{{{f{BLj}}}BLj}{{{f{BNn}}}BNn}{{{f{BO`}}}BO`}{{{f{BOb}}}BOb}{{f{f{Blc}}}b{}}00000000000{fb}00000000000{{{f{Bj}}{f{Bj}}}B@f}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}B@f{BOdNh}BMl}{B@he{}{{ALj{c}}AJj}}0{{B@hAEb}e{}{{ALl{c}}AJj}}0{{f{f{c}}}B@f{}}0{{ALbBDj}ALb}{ALbALb}{{{f{Hd}}{f{AEb}}}{{Fh{Hd}}}}``{{}b}{cbBMl}{{}Bj}{{}{{Lh{BOf}}}}{{}{{Lh{Dj}}}}{{}{{Lh{{E`{c}}}}}{}}{{}{{Lh{c}}}BOh}{{}Nf}{{}BJ`}{{}BAd}{{}Nd}`{Fn{{f{c}}}{}}0{{{f{Bj}}}f}111{{{f{{Lh{ce}}}}}{{f{c}}}NhBMl}222222222{Fn{{f{Blc}}}{}}0000000000000{{{f{{Lh{c}}}}}{{f{Dj}}}{AJnNh}}`{{{Lh{AEdc}}}{{Of{{Lh{ec}}{Lh{AEdc}}}}}BMl{AEdJjJl}}{{{Lh{AEdc}}}{{Lh{ec}}}BMl{AEdJjJl}}{{{f{{Lh{ce}}}}}{{BOj{ce}}}Nh{AAbBMl}}{Fnb}000{{{f{Bl{Lh{ce}}}}}bNhBMl}1111111111{{{f{BAd}}}{{f{AEb}}}}`{{{f{Bj}}{f{c}}}d{{Kl{Dj}}Nh}}{{{f{Oj}}{f{Oj}}}d}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}d{BOlNh}BMl}{{{f{{Lh{Hd}}}}{f{Hd}}}d}{{{f{{Lh{BOn}}}}{f{BOn}}}d}{{{f{Nf}}{f{Nf}}}d}{{{f{BJ`}}{f{BJ`}}}d}{{{f{BAd}}{f{BAd}}}d}{{{f{Nd}}{f{Nd}}}d}{{{f{BLj}}{f{BLj}}}d}{{{f{BNn}}{f{BNn}}}d}{{{f{BO`}}{f{BO`}}}d}{{{f{BOb}}{f{BOb}}}d}{{f{f{c}}}d{}}0000000000000{BNl{{Hl{MlMl}}}}{{AMl{f{B@l}}{f{B@l}}}{{Ah{B@l}}}}`{{{f{Bl{Lh{ADh}}}}}{{Of{bC@`}}}}{{{f{ALb}}{f{BlH`}}}{{Of{bB@n}}}}0{{{f{Bj}}{f{BlH`}}}{{Of{bB@n}}}}0{{{f{Oj}}{f{BlH`}}}{{Of{bB@n}}}}{{{f{BNl}}{f{BlH`}}}{{Of{bB@n}}}}{{{f{{Lh{ce}}}}{f{BlH`}}}{{Of{bB@n}}}NhBMl}{{{f{{Lh{ce}}}}{f{BlH`}}}{{Of{bB@n}}}{BDnNh}BMl}{{{f{{Lh{ce}}}}{f{BlH`}}}{{Of{bB@n}}}{AEfNh}BMl}{{{f{Nf}}{f{BlH`}}}Hb}{{{f{BJ`}}{f{BlH`}}}Hb}{{{f{BAd}}{f{BlH`}}}{{Of{bB@n}}}}{{{f{Nd}}{f{BlH`}}}{{Of{bB@n}}}}{{{f{BLj}}{f{BlH`}}}{{Of{bB@n}}}}{{{f{BNn}}{f{BlH`}}}{{Of{bB@n}}}}{{{f{BO`}}{f{BlH`}}}{{Of{bB@n}}}}{{{f{BOb}}{f{BlH`}}}{{Of{bB@n}}}}`{C@bALb}{C@dALb}{C@fALb}{C@`ALb}{cc{}}0{{{f{Dj}}}Bj}{GfBj}{{{f{Df}}}Bj}{DfBj}4{MlOj}5{{{Lh{Dj}}}{{Lh{{E`{Dn}}}}}}{Gf{{Lh{Dj}}}}{{{f{{E`{c}}}}}{{Lh{{E`{c}}}}}AAb}{C@h{{Lh{BNf}}}}{{{f{BNf}}}{{Lh{BNf}}}}{c{{Lh{c}}}{}}{{{f{Dj}}}{{Lh{Dj}}}}{Df{{Lh{Dj}}}}{{{f{BOf}}}{{Lh{BOf}}}}{{{Fh{ce}}}{{Lh{ce}}}NhBMl}{{{Gd{ce}}}{{Lh{{E`{c}}e}}}{}{BMlAAb}}{{{ALd{c}}}{{Lh{c}}}{C@jNh}}{C@l{{Lh{BNd}}}}{{{BLh{c}}}{{Lh{{E`{c}}}}}{}}{cc{}}{C@nc{}}{{{f{BNd}}}{{Lh{BNd}}}}{CA`{{Lh{BOf}}}}333333333{{c{B`{Hj}}}CAb{}}{{{CAd{Mb}}{CAd{Dn}}{B`{Hj}}}CAf}{{{CAd{Mb}}{CAd{Dn}}{B`{Hj}}}CAh}{cBj{{Hh{}{{Bb{{Fh{Dj}}}}}}}}{cBj{{Hh{}{{Bb{Bj}}}}}}{cBj{{Hh{}{{Bb{{f{BGd}}}}}}}}{cBj{{Hh{}{{Bb{{f{Dj}}}}}}}}{cBj{{Hh{}{{Bb{Df}}}}}}{cBj{{Hh{}{{Bb{BGd}}}}}}{cBj{{Hh{}{{Bb{{f{Bj}}}}}}}}{cBj{{Hh{}{{Bb{{ALd{Dj}}}}}}}}{e{{Lh{{E`{c}}}}}{}{{Hh{}{{Bb{c}}}}}}{{gFn}{{BEh{Mb}}}Kl{{Hh{}{{Bb{{B`{c}}}}}}}{{Hh{}{{Bb{{B`{e}}}}}}}}0{e{{BEh{Mb}}}{{Hh{}{{Bb{{B`{d}}}}}}}{{Hh{}{{Bb{{B`{c}}}}}}}}{{gAEb}{{BEh{Mb}}}BEl{{Hh{}{{Bb{{B`{c}}}}}}}{{Hh{}{{Bb{{B`{e}}}}}}}}2{e{{Lh{{E`{c}}}}}Jj{{Hn{}{{Bb{c}}}}}}{{}{{Lh{c}}}Nh}{c{{Lh{ec}}}BMlNh}{{{f{Dj}}}Bj}0{{{f{Dj}}}{{Of{CAj}}}}{DfBj}{{Bjc}CAl{}}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}d{CAnNh}BMl}{{{f{Bl{Lh{ce}}}}}{{B`{{f{Blc}}}}}NhBMl}{{{f{Bl{Lh{ce}}}}}{{f{Blc}}}NhBMl}{{{f{Gb}}Fn}Ib}3{{{f{Bj}}{f{Blc}}}bABj}{{{f{{Lh{ce}}}}{f{Blg}}}b{BFlNh}BMlABj}{{{f{BJ`}}{f{Blc}}}bABj}{{{f{BAd}}{f{Blc}}}bABj}{{{f{Nd}}{f{Blc}}}bABj}{{{f{BOb}}{f{Blc}}}bABj}{{{f{Oj}}}Ml}{{}b}{cb{AAbBMl}}{{{f{{E`{Ml}}}}}{{`{{Bf{}{{Bb{Fn}}}}}}}}{{}Fn}0000000000000`{{{f{BlBNl}}}{{f{BlJ`}}}}{{}c{}}0000000000000{{}En}{{{Lh{ce}}}{{B`{c}}}{}BMl}{{{Lh{ce}}}{}NhBMl}{{{Lh{ce}}}{{Hl{e}}}NhBMl}{{{Lh{CB`}}}Af}{BjDf}{{{f{BNl}}}d}{{{f{Oj}}}d}`{{{f{{Lh{ADh}}}}}d}{{{f{c}}}d{}}1{{{f{BHd}}}{{`{{Jn{}{{Bb{{Hl{{f{Bj}}{f{c}}}}}}}}}}}{}}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}d{CAnNh}BMl}`0{{{f{AMj}}{f{AMj}}}{{Ah{{Hl{AMjAMj}}}}}}{{EfEf}{{Ah{{Hl{EfEf}}}}}}{{{f{Bl{Lh{ce}}}}}{{f{Blc}}}{CBbNh}{BMlAAb}}{{{f{CBd}}}Lb}0{{{f{CBf}}}Lb}```11`{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}d{BOlNh}BMl}{{CBhFn}{{B`{Fn}}}}{{Bjc}CBj{}}{c{{Lh{c}}}{}}{{BjAEbd}BAd}{e{{Lh{c}}}{}{{Ol{{f{{BOj{c}}}}}{{Cf{c}}}}}}{{ge}{{Lh{ce}}}{}BMl{{Ol{{f{{BOj{ce}}}}}{{Cf{c}}}}}}{{ce}{{Lh{ce}}}{}BMl}{{}{{Lh{{BNh{c}}}}}{}}{c{{Lh{{BNh{e}}c}}}BMl{}}{Fn{{Lh{{E`{{BNh{c}}}}}}}{}}{{Fnc}{{Lh{{E`{{BNh{e}}}}c}}}BMl{}}3210`{{}Oj}{{}BNl}{{{f{Bj}}{f{Bj}}}{{B`{B@f}}}}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}{{B`{B@f}}}{CAnNh}BMl}{c{{CBl{{Lh{c}}}}}{}}{{ce}{{CBl{{Lh{ce}}}}}{}BMl}`````{{{f{CBd}}}Lb}0{{{f{{Lh{c}}}}{f{BlCBn}}}b{AJnNh}}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}dNhBMl}{{{f{CBf}}nNd}{{Ah{Lb}}}}{{{f{Bl{Lh{ADh}}}}{f{Bl{E`{Dn}}}}}{{Of{FnC@`}}}}{{{f{Bl{Lh{ADh}}}}CC`}{{Of{bC@`}}}}{{{f{Bl{Lh{ADh}}}}{f{Bl{Gd{Dn}}}}}{{Of{FnC@`}}}}{{{f{Bl{Lh{ADh}}}}{f{BlDf}}}{{Of{FnC@`}}}}{{{f{Bl{Lh{ADh}}}}{f{Bl{E`{CCb}}}}}{{Of{FnC@`}}}}`{{{f{Bl{Lh{ADh}}}}CCd}{{Of{J`C@`}}}}`{{{f{AKl}}FnFn}AKl}0{{{f{{Lh{c}}}}}{{B`{{f{AJn}}}}}{AJnNh}}{{{f{CCf}}Dn}Lb}{{MlMl}BNl}`{{{f{{Lh{ce}}}}}FnNhBMl}>>{{{f{Oj}}}{{B`{Ml}}}}{fc{}}00000000000{fDf}00{B@h{{Of{eg}}}{}{{ALj{c}}AJj}{}}0{{B@hAEb}{{Of{eg}}}{}{{ALl{c}}AJj}{}}0{c{{Of{e}}}{}{}}000{{{Lh{{E`{c}}e}}}{{Of{{Lh{{BLh{c}}e}}}}}{}BMl}1111111111{{}{{Of{c}}}{}}0000000000000{{CBhFn}{{Of{FnALb}}}}{c{{Of{{Lh{c}}CCh}}}{}}{{ce}{{Of{{Lh{ce}}CCh}}}{}BMl}{{}{{Of{{Lh{{BNh{c}}}}CCh}}}{}}{c{{Of{{Lh{{BNh{e}}c}}CCh}}}BMl{}}10{c{{Of{{CBl{{Lh{c}}}}CCh}}}{}}{{ce}{{Of{{CBl{{Lh{ce}}}}CCh}}}{}BMl}{f{{Of{GfBBf}}}}00{{{Lh{ce}}}{{Of{c{Lh{ce}}}}}{}BMl}{fOh}0000000000000{{{Lh{ce}}}cAAbBMl}`{{{f{CCf}}Dn}Lb}{{}c{}}0000000000000{{{f{{Lh{ce}}}}}FnNhBMl}``{{BAd{CCj{BjBj}}}BAd}{{{f{ALb}}c}ALb{{Ol{{f{Dj}}}{{Cf{Df}}}}}}{{{f{Bl{Lh{ADh}}}}{f{{E`{Dn}}}}}{{Of{FnC@`}}}}{{{f{BlBj}}BGd}{{Of{bB@n}}}}{{{f{BlBj}}CCl}{{Of{bB@n}}}}{{{f{BlBj}}{f{Dj}}}{{Of{bB@n}}}}{{{f{Bl{Lh{ADh}}}}{f{{E`{CCn}}}}}{{Of{FnC@`}}}}```````{{c{B`{Hj}}}CAb{}}{{{CAd{Mb}}{CAd{Dn}}{B`{Hj}}}CAf}{{{CAd{Mb}}{CAd{Dn}}{B`{Hj}}}CAh}`{f{{f{c}}}{}}{{{f{Bl}}}{{f{Blc}}}{}}{{}CD`}{Fn{{f{c}}}{}}{Fn{{f{Blc}}}{}}{Fnb}{{CD`{B`{{f{AEb}}}}}{{Of{ACjALb}}}}{cc{}}{{}Fn}{{}c{}}{{{f{CD`}}}d}{{FnFn}CD`}{{{f{BlCD`}}{Fh{Hd}}}b}{{{f{BlCD`}}}b}{c{{Of{e}}}{}{}}{{}{{Of{c}}}{}}{fOh}7``{f{{f{c}}}{}}{{{f{Bl}}}{{f{Blc}}}{}}?>={{CDb{B`{{f{AEb}}}}}{{Of{{BEh{Mb}}ALb}}}}<;:{{{f{CDb}}}d}{FnCDb}{{{f{CDb}}}{{f{{E`{Mb}}}}}}{{{f{BlCDb}}{f{Hd}}}b}{{{f{BlCDb}}}b}{{{f{BlCDb}}{f{{E`{{Fh{Hd}}}}}}}b}1{{{f{BlCDb}}{B`{{f{Hd}}}}}b}{CDb{{CDd{Mb}}}}=<;{{}c{}}`{{fh}b}{{{f{CDf}}}{{f{AEd}}}}{{{f{BlCDf}}}{{Fh{Hd}}}}{{{f{BlCDf}}}{{f{BlAEd}}}}?>{{{f{CDf}}}CDf}{{f{f{Blc}}}b{}}{fb}{{}CDf}{Fn{{f{c}}}{}}{Fn{{f{Blc}}}{}}{Fnb}{{{f{CDf}}}{{f{AEb}}}}{{{f{BlCDf}}Fn}b}{{{f{CDf}}{f{BlH`}}}{{Of{bB@n}}}}{cc{}}{{}Fn}{{}c{}}{{{f{CDf}}}Fn}{FnCDf}{{{f{BlCDf}}}b}70{fc{}}{c{{Of{e}}}{}{}}{{}{{Of{c}}}{}}{fOh}{{{f{CDf}}}{{B`{{f{CDh}}}}}}8```````{{{f{AKl}}FnFn}AKl}0`{{}b}0{{}d}``{{eFnFn}{{BEj{Mb}}}{{Kl{Dj}}}{{Bf{}{{Bb{c}}}}}}{{eFnFn}{{AKf{Mb}}}{{Kl{{E`{Dn}}}}}{{Bf{}{{Bb{c}}}}}}{J`b}`{{fh}b}{{{f{Lb}}}Ib}{f{{f{c}}}{}}{{{f{Bl}}}{{f{Blc}}}{}}{{{f{Lb}}}Lb}{{f{f{Blc}}}b{}}{fb}{{}Lb}{Fn{{f{c}}}{}}{Fn{{f{Blc}}}{}}{Fnb}{{{f{Lb}}}{{f{Eb}}}}{{{f{Lb}}{f{Lb}}}d}{{{f{Lb}}{f{BlH`}}}Hb}{InLb}{BjLb}{cc{}}{MlLb}{J`Lb}{dLb}{DnLb}{CDjLb}{CDlLb}{CDnLb}{nLb}{MbLb}{LnLb}{{}Fn}{{}c{}}{{LbBj}En}{{LbBj}Af}{{{f{Lb}}}d}0{{EbIb}Lb}`{fc{}}{c{{Of{e}}}{}{}}{{}{{Of{c}}}{}}{fOh}{{{f{BlLb}}Ib}b}{{{f{Lb}}}{{f{Ib}}}}:{{{B`{n}}Eb}Lb}``````{{{f{{CE`{c}}}}{f{{CE`{c}}}}}{{Ah{b}}}{}}{{{f{BHf}}}BGf}{{{f{BHd}}}CEb}{{{f{BHd}}}BGf}{{{f{CEb}}{f{Dj}}}{{B`{Mn}}}}{{{f{BGf}}{f{Dj}}}{{B`{Mn}}}}{{{f{CEb}}}{{`{{Jn{}{{Bb{Mn}}}}}}}}{{{f{BGf}}}{{`{{Jn{}{{Bb{Mn}}}}}}}}{{{f{{CEf{}{{CEd{c}}}}}}}{{`{{Jn{}{{Bb{{Hl{{f{Bj}}{f{c}}}}}}}}}}}{AEfAAbBOhBOl}}{{{f{BGf}}}{{`{{Jn{}{{Bb{{Hl{{f{Bj}}{f{c}}}}}}}}}}}{}}{{{f{CEb}}}{{Ah{BGf}}}}{{{f{BGf}}}{{Ah{BGf}}}}{{{f{CEb}}ANf}BHd}{{{f{BGf}}ANf}BHd}{{{f{BlCEb}}{f{BGf}}}{{Ah{d}}}}{{{f{BlBGf}}{f{BGf}}}{{Ah{d}}}}{{{f{CEb}}{f{Dj}}}{{Ah{Mn}}}}{{{f{BGf}}{f{Dj}}}{{Ah{Mn}}}}`````````````````{{fh}b}0{{{f{CB`}}}n}0{{Bj{Gd{Gb}}{f{AEb}}}{{Ah{Af}}}}{{Bj{Gd{Gb}}{f{AEb}}{B`{{f{CEh}}}}}{{Ah{Af}}}}{{{f{Af}}{f{Af}}}c{}}{{AfAf}c{}}{{{f{Af}}c}e{AbL`}{}}{{Afc}e{AbL`}{}}`{{{f{CB`}}}{{Ah{Lb}}}}0{{{f{BlAf}}{f{Af}}}{{Ah{{f{BlAf}}}}}}{{{f{CB`}}Ej}El}0{{{f{CB`}}}{{Ah{El}}}}0`{{{f{Af}}}{{Ah{{f{Ed}}}}}}{{{f{Af}}Fn}{{f{Gb}}}}{{{f{CB`}}}{{f{AEd}}}}{{{f{BlCB`}}}{{f{BlAEd}}}}0{{{f{Af}}}Ef}{{{f{BlCB`}}}{{f{Bl{l{c}}}}}Cd}{{{f{CB`}}}{{f{{l{c}}}}}Cd}{{{f{Af}}}{{f{CB`}}}}{{{f{BlCB`}}}{{Ah{Fn}}}}0{{{f{BlAf}}}{{Ah{Fn}}}}{{{f{Af}}}{{Ah{{f{Fb}}}}}}{{{f{Af}}}{{Ah{{f{AKh}}}}}}{{AfAf}c{}}{{{f{Af}}{f{Af}}}c{}}{{Af{f{Af}}}c{}}{{{f{Af}}Af}c{}}01320132{{{f{Af}}}{{Ah{{f{Gl}}}}}}{f{{f{c}}}{}}000{{{f{Bl}}}{{f{Blc}}}{}}000{{{f{CB`}}}{{B`{{Fh{Ff}}}}}}0{{{f{CB`}}{f{Eb}}Fj}{{Ah{Af}}}}{{{f{Af}}{f{Eb}}}{{Ah{Af}}}}0{{{f{Af}}{f{Eb}}Fj}{{Ah{Af}}}}{{{f{Af}}}{{Ah{{f{AMj}}}}}}{{{f{CB`}}{f{Af}}}{{Ah{Af}}}}0{{{f{Af}}{f{Af}}}{{Ah{Af}}}}{{{f{Af}}c}{{Ah{Af}}}Ad}{{{f{CB`}}}G`}{{{f{Af}}}{{`{{Bf{}{{Bb{Fn}}}}}}}}{{{f{CB`}}}{{f{{Gd{Gb}}}}}}{{{f{BlCB`}}}{{f{Bl{Gd{Gb}}}}}}{{{f{BlAf}}}{{f{Bl{Gd{Gb}}}}}}{{{f{Af}}}Af}{{{f{Kb}}}Kb}1{{{f{CB`}}}{{Lh{CB`}}}}{{f{f{Blc}}}b{}}0{fb}0{{{f{BlAf}}}b}{{{f{Af}}}{{Ah{{f{Jh}}}}}}{{}Af}{Fn{{f{c}}}{}}000{{{f{Af}}}{{f{c}}}{}}{Fn{{f{Blc}}}{}}000{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}c}e{AbL`}{}}{{Afc}e{AbL`}{}}{{AfAf}c{}}{{{f{Af}}{f{Af}}}{{Ah{n}}}}{Fnb}000{{{f{CB`}}}Af}0{{{f{CB`}}}{{f{Eb}}}}0{{{f{Kb}}{f{Kb}}}d}{{{f{Af}}{f{Af}}}d}{{{f{Af}}c}eBAb{}}{{{f{Af}}{f{Dj}}}{{Ah{Gl}}}};1{{{f{Af}}{f{Dj}}}c{}}<33{{f{f{c}}}d{}}0{{{f{Af}}}Fn}{{{f{Af}}}{{Ah{Af}}}}{{{f{BlAf}}{f{Af}}}{{Ah{{f{BlAf}}}}}}{{{f{Af}}IbFn}{{Ah{Af}}}}{{{f{Af}}}{{Ah{{f{ALf}}}}}}{{{f{Af}}}{{Ah{{f{ALh}}}}}}{{{f{CB`}}}{{ALd{Mn}}}}0{{{f{Af}}AGh}{{Ah{Af}}}}{{{f{CB`}}{f{Gl}}}{{Ah{Af}}}}{{{f{CB`}}}Lb}0{{{f{Kb}}{f{BlH`}}}Hb}{{{f{Af}}{f{BlH`}}}Hb}0{{{f{Af}}}Df}{cc{}}000{{{l{c}}}AfCd}{{Bj{f{{E`{Ib}}}}d}{{Ah{Af}}}}{{Bj{f{{E`{Ib}}}}{f{Eb}}d}{{Ah{Af}}}}{{BjGb}{{Ah{Af}}}}{{Bj{Gd{Gb}}}{{Ah{Af}}}}{{Bj{Gd{Gb}}{f{Eb}}}Af}{cAf{{Hh{}{{Bb{{B`{d}}}}}}}}{cAf{{Hh{}{{Bb{Mb}}}}}}{cAf{{Hh{}{{Bb{{f{Ml}}}}}}}}{cAf{{Hh{}{{Bb{Df}}}}}}{cAf{{Hh{}{{Bb{{B`{Df}}}}}}}}{cAf{{Hh{}{{Bb{{f{Dj}}}}}}}}{cAf{{Hh{}{{Bb{{B`{{f{Dj}}}}}}}}}}{cAf{{Hh{}{{Bb{{B`{J`}}}}}}}}{cAf{{Hh{}{{Bb{J`}}}}}}{cAf{{Hh{}{{Bb{{f{d}}}}}}}}{cAf{{Hh{}{{Bb{{f{J`}}}}}}}}{cAf{{Hh{}{{Bb{d}}}}}}{cAf{{Hh{}{{Bb{Ml}}}}}}{cAf{{Hh{}{{Bb{{f{Mb}}}}}}}}{cAf{{Hh{}{{Bb{n}}}}}}{cAf{{Hh{}{{Bb{{B`{n}}}}}}}}{cAf{{Hh{}{{Bb{{f{In}}}}}}}}{cAf{{Hh{}{{Bb{In}}}}}}{cAf{{Hh{}{{Bb{{B`{In}}}}}}}}{cAf{{Hh{}{{Bb{{B`{Ln}}}}}}}}{cAf{{Hh{}{{Bb{Ln}}}}}}{cAf{{Hh{}{{Bb{{f{Ln}}}}}}}}{cAf{{Hh{}{{Bb{{B`{Mb}}}}}}}}{cAf{{Hh{}{{Bb{{B`{Ml}}}}}}}}{cAf{{Hh{}{{Bb{{f{n}}}}}}}}{{Bj{Gd{J`}}}Af}{{Bj{Gd{Ln}}}Af}{{Bj{Gd{Mb}}}Af}{{Bj{Gd{Md}}}Af}{{Bj{Gd{Ml}}}Af}{{Bj{Gd{In}}}Af}{{Bj{Gd{n}}}Af}{{BjFn{f{Eb}}}Af}{{{f{Af}}FnFn}Af}{{{f{CB`}}Fn}{{Ah{Ib}}}}{{{f{Af}}}If}{{{f{Af}}}Af}{{{f{CB`}}}{{B`{{Lj{Ff}}}}}}0{{{f{CB`}}Fn}{{B`{{f{Ij}}}}}}0{{{f{CB`}}FnFn}{{B`{{f{Ij}}}}}}0{{{f{CB`}}Fn}Ib}0{{{f{Af}}c}eBAb{}}{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}{f{Dj}}}c{}}120{{{f{CB`}}}d}{{{f{Kb}}{f{Blc}}}bABj}{{{f{Af}}{B`{Fn}}}Af}{{{f{Af}}}{{Ah{{f{BC`}}}}}}{{{f{Af}}}{{Ah{{f{BCb}}}}}}{{{f{Af}}}{{Ah{{f{BCd}}}}}}{{{f{Af}}}{{Ah{{f{BBn}}}}}}{{{f{Af}}}{{Ah{{f{El}}}}}}`{{{f{Af}}}{{Ah{Ef}}}}{{}Fn}000{{}c{}}000{Af{{Gd{Gb}}}}{{}En}{AfBDd}3{BIhAf}{AfAf}??{{{f{Af}}}{{Ah{Gl}}}}000{{{f{CB`}}}Gl}0{{}d}00{{{f{Af}}}Kb}{{{f{Af}}}CEj}{{{f{Af}}}{{`{{Bf{}{{Bb{Af}}}}}}}}{{{f{CB`}}}Lb}0{{{f{CB`}}}Fn}{{{f{Af}}}Fn}{{{f{CB`}}Fn}Af}0{{{f{Af}}}{{Ah{{f{Ef}}}}}}{{{f{Af}}}{{Hl{{Gd{{AGn{Mb}}}}{Gd{{B`{Hj}}}}}}}}{{{f{Af}}}Af}{{{f{Af}}c}eBAb{}}{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}{f{Dj}}}c{}}021{{{f{Af}}}{{Ah{{B`{c}}}}}L`}{{{f{CB`}}}{{Ah{Lb}}}}0{{{f{CB`}}}{{B`{n}}}}0{{{f{Af}}}Lb}11223225{{AfAf}c{}}{{Afc}e{AbL`}{}}{{{f{Af}}c}e{AbL`}{}}??>{{{f{CB`}}}{{Ah{Fn}}}}0{{{f{CB`}}}{{f{Bj}}}}{{Bjc}Af{{Kl{{E`{{B`{{ALd{Dj}}}}}}}}}}{{Bjc}Af{{Kl{{E`{Ln}}}}}}{{Bjc}Af{{Kl{{E`{Df}}}}}}{{Bj{Mf{Ln}}}Af}{{Bjc}Af{{Kl{{E`{Ml}}}}}}{{Bj{Mf{Mb}}}Af}{{Bjc}Af{{Kl{{E`{In}}}}}}{{Bjc}Af{{Kl{{E`{Af}}}}}}{{Bjc}Af{{Kl{{E`{{Gd{Dn}}}}}}}}{{Bjc}Af{{Kl{{E`{{B`{Af}}}}}}}}{{Bjc}Af{{Kl{{E`{{B`{n}}}}}}}}{{Bjc}Af{{Kl{{E`{{f{Dj}}}}}}}}{{Bjc}Af{{Kl{{E`{{B`{In}}}}}}}}{{Bjc}Af{{Kl{{E`{{B`{Md}}}}}}}}{{Bj{f{Af}}}Af}{{Bjc}Af{{Kl{{E`{{B`{{f{Dj}}}}}}}}}}{{Bjc}Af{{Kl{{E`{{B`{Mb}}}}}}}}{{Bjc}Af{{Kl{{E`{{ALd{Dj}}}}}}}}{{Bjc}Af{{Kl{{E`{Md}}}}}}{{Bjc}Af{{Kl{{E`{{B`{Ln}}}}}}}}{{Bjc}Af{{Kl{{E`{{B`{J`}}}}}}}}{{Bj{Mf{J`}}}Af}{{Bjc}Af{{Kl{{E`{{B`{d}}}}}}}}{{Bjc}Af{{Kl{{E`{J`}}}}}}{{Bjc}Af{{Kl{{E`{{B`{{Gd{Dn}}}}}}}}}}{{Bjc}Af{{Kl{{E`{{f{{E`{Dn}}}}}}}}}}{{Bjc}Af{{Kl{{E`{{B`{{f{{E`{Dn}}}}}}}}}}}}{{Bjc}Af{{Kl{{E`{d}}}}}}{{Bjc}Af{{Kl{{E`{{ALd{{E`{Dn}}}}}}}}}}{{Bjc}Af{{Kl{{E`{{B`{{ALd{{E`{Dn}}}}}}}}}}}}{{Bjc}AfBIh}{{Bjc}Af{{Kl{{E`{Ib}}}}}}{{Bjc}Af{{Kl{{E`{{B`{Df}}}}}}}}{{Bjc}Af{{Kl{{E`{n}}}}}}{{Bjc}Af{{Kl{{E`{Mb}}}}}}{{Bj{Mf{Ml}}}Af}{{Bjc}Af{{Kl{{E`{{B`{Ml}}}}}}}}{{Bj{f{Eb}}}Af}{{{f{CB`}}FnFn}Af}{{BjFn}Af}{{{f{BlCEj}}}{{B`{c}}}{}}{{{f{Af}}c}eBAb{}}{{{f{Af}}{f{Dj}}}{{Ah{Gl}}}}{{{f{Af}}{f{Af}}}c{}}2{{{f{Af}}{f{Dj}}}c{}}1{{{f{Af}}}{{Ah{{f{`}}}}}}{{{f{CB`}}}Fn}`{{{f{CB`}}}{{Ah{Lb}}}}0{{{f{Af}}}BJj}{{{f{Af}}}{{Ah{Lb}}}}{{{f{CB`}}nNd}{{Ah{Lb}}}}0{{{f{CB`}}}Af}{{{f{CB`}}}{{B`{Hj}}}}09{{{f{Af}}c}e{AbL`}{}}{{Afc}e{AbL`}{}}{{{f{BlCB`}}Bj}b}{{{f{BlAf}}Bj}{{f{BlAf}}}}{{{f{Af}}{f{{E`{B@b}}}}}{{Ah{Af}}}}06{KbKb}{{{f{CB`}}{f{Ch}}Nf}{{Ah{Af}}}}0{{{f{Af}}ndd{B`{J`}}}{{Ah{Af}}}}{{{f{Af}}Fndd{B`{J`}}}{{Ah{Af}}}}{{{f{Af}}Fn}Af}{{{f{BlAf}}Kb}b}{{{f{CB`}}Mb}Af}{{{f{BlCB`}}}b}0{{{f{BlAf}}}b}{{{f{Af}}{B`{J`}}}Af}{{{f{CEj}}}{{Hl{Fn{B`{Fn}}}}}}{{{f{CB`}}MbFn}Af}{{{f{Af}}MbFn}Af}{{{f{Af}}Ej}{{Ah{Af}}}}{{{f{CB`}}Ej}{{Ah{Af}}}}0{{{f{CB`}}Mb}{{Hl{AfAf}}}}{{{f{Af}}Mb}{{Hl{AfAf}}}}{{{f{CB`}}Dn}{{B`{n}}}}0{{{f{CB`}}Dn}{{Ah{Lb}}}}0{{{f{Af}}}{{Ah{{f{Dd}}}}}}{{{f{Af}}Fn}{{Ah{{ALd{Dj}}}}}}{{{f{Af}}{f{Eb}}}{{Ah{Af}}}}{{AfAf}c{}}{{{f{Af}}c}e{AbL`}{}}{{Afc}e{AbL`}{}}{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}}{{Ah{c}}}L`}{{{f{CB`}}}{{Ah{Lb}}}}0{{{f{Af}}}{{Ah{Lb}}}}{{{f{Af}}{B`{Fn}}}Af}{{{f{CB`}}{f{El}}}{{Ah{Af}}}}{{{f{CB`}}{f{{E`{Id}}}}}{{Ah{Af}}}}{{{f{CB`}}{f{{E`{Id}}}}}Af}{{{f{CB`}}{f{El}}}Af}{{{f{Af}}FnANf}Gb}{{{f{Af}}}{{Ah{Af}}}}>{fc{}}0{{{f{Af}}}{{ALd{Af}}}}{fDf}{{AfAf}{{Ah{Af}}}}{{{f{Af}}}{{B`{{f{Ed}}}}}}{{{f{Af}}}{{B`{{f{Fb}}}}}}{{{f{Af}}}{{B`{{f{AKh}}}}}}{{{f{Af}}}{{B`{{f{Gl}}}}}}{{{f{Af}}}{{B`{{f{AMj}}}}}}{{{f{Af}}}{{B`{{f{Jh}}}}}}{{{f{Af}}}{{B`{{f{ALf}}}}}}{{{f{Af}}}{{B`{{f{ALh}}}}}}{c{{Of{e}}}{}{}}00{{{Hl{Bj{Gd{Gb}}}}}{{Ah{Af}}}}{{{Hl{{f{BAd}}{Gd{Gb}}}}}{{Ah{Af}}}}2{{{Hl{{f{BAd}}Gb}}}{{Ah{Af}}}}{{{Hl{BjGb}}}{{Ah{Af}}}}{{{f{Af}}}{{B`{{f{BC`}}}}}}{{{f{Af}}}{{B`{{f{BCb}}}}}}{{{f{Af}}}{{B`{{f{BCd}}}}}}{{{f{Af}}}{{B`{{f{BBn}}}}}}{{{f{Af}}}{{B`{{f{El}}}}}}{{}{{Of{c}}}{}}000{{{f{Af}}}{{B`{{f{Ef}}}}}}{{AfAf}{{Ah{Af}}}}{{Bjc}{{Of{Af}}}{}}{{{f{Af}}}{{B`{{f{`}}}}}}{{{f{BlAf}}{Jb{c}}}dCd}{{{f{Af}}}{{B`{{f{Dd}}}}}}4{f{{Of{GfBBf}}}}{{{f{Af}}}{{B`{{f{BBj}}}}}}{{{f{Af}}}{{B`{{f{B@l}}}}}}{{{f{Af}}}{{B`{{f{BBl}}}}}}{{{f{Af}}}{{B`{{f{BBh}}}}}}{fOh}000{{{f{Af}}}{{Ah{{f{BBj}}}}}}{{{f{Af}}}{{Ah{{f{B@l}}}}}}{{{f{Af}}}{{Ah{{f{BBl}}}}}}{{{f{Af}}}{{Ah{{f{BBh}}}}}}{{{f{CB`}}}{{Ah{Af}}}}0{{{f{Af}}}{{Ah{Af}}}}{{{f{CB`}}}{{Ah{{f{{l{c}}}}}}}Cd}{{{f{CB`}}Dn}{{B`{n}}}}0{{{f{CB`}}Dn}{{Ah{Lb}}}}0{{}c{}}000{{AfBj}Af}{{{f{Af}}c}Af{AbL`}}{{{f{CB`}}}{{Ah{Lb}}}}0{{{f{Af}}{f{Gl}}{f{Af}}}{{Ah{Af}}}}``{{fh}b}{{{f{Cl}}}{{f{Af}}}}{f{{f{c}}}{}}{{{f{Bl}}}{{f{Blc}}}{}}{{{f{Cl}}}Cl}{{f{f{Blc}}}b{}}{fb}{{{f{Cl}}}Af}{Fn{{f{c}}}{}}{Fn{{f{Blc}}}{}}{Fnb}{cc{}}{{}Fn}{{}c{}}{{{CEl{Af}}}Cl}{{{f{BlCl}}{f{BlGb}}}b}{fc{}}{c{{Of{e}}}{}{}}{{}{{Of{c}}}{}}{fOh}6{{{f{BlCl}}{f{BlGb}}e}c{}{{Ch{{f{Cl}}}{{Cf{c}}}}}}``````{{fh}b}0{{{CEn{}{{Cf{c}}}}{f{Af}}}c{}}{{}CF`}{{}CFb}{{{f{CFd}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{Aj}}}}{f{Af}}}{{Ah{Af}}}}0{f{{f{c}}}{}}0{{{f{Bl}}}{{f{Blc}}}{}}0`{{{f{CF`}}}CF`}{{{f{CFb}}}CFb}{{f{f{Blc}}}b{}}0{fb}0{Fn{{f{c}}}{}}0{Fn{{f{Blc}}}{}}0<;:988{Fnb}0{{{f{CF`}}{f{Af}}{f{Af}}}{{Ah{Af}}}}{{{f{CFb}}{f{Af}}{f{Af}}}{{Ah{Af}}}}>={cc{}}0{{}Fn}0{{}c{}}0{{{CEn{}{{Cf{c}}}}{f{Af}}}c{}}{{}CF`}{{}CFb}{{{f{CFd}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{Aj}}}}{f{Af}}}{{Ah{Af}}}}0432100432100{fc{}}0{c{{Of{e}}}{}{}}0{{}{{Of{c}}}{}}0{fOh}099``{{{f{BNj}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{Fl}}}}{f{Af}}}{{Ah{Af}}}}0{{{f{BNj}}c}{{Ah{Af}}}Ad}{{{f{{l{Fl}}}}c}{{Ah{Af}}}Ad}0```{{fh}b}{f{{f{c}}}{}}{{{f{Bl}}}{{f{Blc}}}{}}{{{f{CFf}}}CFf}{{f{f{Blc}}}b{}}{fb}{{}CFf}{Fn{{f{c}}}{}}{Fn{{f{Blc}}}{}}{Fnb}{{{f{CFf}}{f{CFf}}}d}{{f{f{c}}}d{}}0{{{f{CFf}}{f{BlH`}}}Hb}{cc{}}{{{f{CFf}}{f{Blc}}}bABj}{{}Fn}{{}c{}}{fc{}}{c{{Of{e}}}{}{}}{{}{{Of{c}}}{}}{fOh}4````````````{{fh}b}006{{{Gd{BDd}}}{{Ah{BDd}}}}{c{{Ah{BDd}}}{{Hh{}{{Bb{BDd}}}}}}{cBDd{{Hh{}{{Bb{BDd}}}}}}{c{{B`{BDd}}}{{Hh{}{{Bb{BDd}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}}{{Hl{{ALd{{l{c}}}}{ALd{{l{e}}}}}}}CdCd}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}}{{Hl{{ALd{{l{c}}}}{ALd{{l{e}}}}{ALd{{l{g}}}}}}}CdCdCd}{{}CFh}{{{f{CFj}}}d}0{c{{Ah{Eb}}}{{Hh{}{{Bb{{f{Ib}}}}}}}}{c{{Ah{{Hl{EbFn}}}}}{{Hh{}{{Bb{{f{Ib}}}}}}}}`{{{f{{l{c}}}}{f{{l{e}}}}}{{B`{Hj}}}CdCd}{{CFhCFh}CFh}{{{f{BlCFh}}CFh}b}10{{{f{CFh}}}Dn}021{f{{f{c}}}{}}0000{{{f{Bl}}}{{f{Blc}}}{}}0000{{{f{CFl}}}{{`{{Bf{}{{Bb{Fn}}}}}}}}{{{f{CFh}}}CFh}{{{f{CFj}}}CFj}{{{f{{CFn{ec}}}}}{{CFn{ec}}}AAb{AAb{Bf{}{{Bb{c}}}}}}{{f{f{Blc}}}b{}}00{fb}00{{{f{{l{c}}}}{f{{l{c}}}}}{{Hl{{ALd{{l{c}}}}{ALd{{l{c}}}}}}}Cd}{{{f{En}}{f{En}}}{{Hl{EnEn}}}}{CG`e{}{{CGb{c}}}}{CG`e{}{{CGd{c}}}}{CFhCFh}{c{{Ah{BDd}}}{{Hh{}{{Bb{{f{BDd}}}}}}}}{cBDd{{Hh{}{{Bb{{f{BDd}}}}}}}}{{{f{CFh}}CFh}d}{{}CFh}{{}CFj}{{{f{{CGf{c}}}}}{{f{e}}}{}{}}{Fn{{f{c}}}{}}{{{f{{AKn{c}}}}}{{f{e}}}{}{}}1111{Fn{{f{Blc}}}{}}0{{{f{Bl{AKn{c}}}}}{{f{Ble}}}{}{}}111{{CFhCFh}CFh}{Fnb}0000{cBGf{{Hh{}{{Bb{Eb}}}}}}{c{{Ah{Eb}}}{{Hh{}{{Bb{{f{Eb}}}}}}}}:{{{f{{CGf{Af}}}}{f{{CGf{Af}}}}}d}{{{f{CFh}}{f{CFh}}}d}{{{f{CFj}}{f{CFj}}}d}{{f{f{c}}}d{}}00000{{{f{BlCFh}}c}b{{Hh{}{{Bb{CFh}}}}}}``{{{f{CFh}}{f{BlH`}}}Hb}0000{{{f{CFj}}{f{BlH`}}}Hb}{cc{}}00{CFhCFj}11{Dn{{B`{CFh}}}}{DnCFh}00{c{{AKn{{l{e}}}}}{{Hh{}{{Bb{}}}}}A`}{c{{AKn{Gl}}}{{Hh{}{{Bb{d}}}}}}{cCFh{{Hh{}{{Bb{CFh}}}}}}{eCGd{}{{Hh{}{{Bb{c}}}}}}23{{{f{Dj}}}{{B`{CFh}}}}{c{{AKn{{l{e}}}}}{{Hn{}{{Bb{}}}}}A`}{c{{AKn{{l{e}}}}}{{I`{}{{Bb{}}}}}A`}{c{{AKn{Gl}}}{{I`{}{{Bb{d}}}}}}{{{f{Eb}}{f{Eb}}}{{B`{Eb}}}}{{{f{Eb}}{f{Eb}}CFj}{{B`{Eb}}}}{{{f{ANh}}{f{ANh}}}ANh}{{{f{Af}}{f{Af}}}{{Ah{b}}}}{{{f{{CGf{Af}}}}{f{Blc}}}bABj}{{{f{CFh}}{f{Blc}}}bABj}{{{f{CFj}}{f{Blc}}}bABj}{{}Fn}0000{{{f{BlCFh}}CFh}b}{{CFhCFh}CFh}{{{f{CFh}}CFh}d}{{}c{}}0000{{{AKn{c}}}c{}}{CFhc{}}2{BIl{{Gd{c}}}{}}{{}{{Gd{Bj}}}}{{{f{CFh}}}d}0{{{f{CFh}}}{{ADd{CFh}}}}{{{f{CFl}}}{{`{{Bf{}{{Bb{CFl}}}}}}}}{{{f{CFh}}}{{ADf{CFh}}}}{{{f{CFl}}}Fn}{MdIb}{e{{Ah{Eb}}}{{Kl{Eb}}}{{Hh{}{{Bb{c}}}}AAb}}2{c{{AKn{c}}}{}}{{eFn}{{CFn{ec}}}{}{{Bf{}{{Bb{c}}}}}}{{cFn}{{CFn{{CGj{{CGh{c}}}}c}}}AAb}{{{f{Bl{CFn{ec}}}}}B`{}{{Bf{}{{Bb{c}}}}}}{{{f{Bl{CFn{ec}}}}}B`{}{{Bf{}{{Bb{c}}}}Gj}}{CFhCFh}{{{f{Dj}}}Df}`{{{f{BlCFh}}CFh}b}{{{f{BlCFh}}CFhd}b}{{{f{{CFn{ec}}}}}{{Hl{Fn{B`{Fn}}}}}{}{{Bf{}{{Bb{c}}}}}}{{{f{CFl}}MbFn}CFl}{{{f{{E`{c}}}}MbFn}{{f{{E`{c}}}}}{}}{{{f{c}}Fn}{{Gd{c}}}CFl}0{{{f{CFl}}Mb}{{Hl{CFlCFl}}}}{{{f{BDd}}Fnd}{{Gd{BDd}}}}{{CFhCFh}CFh}80{fc{}}009{{CG`Fn}{{CFn{CG`c}}}{}}{c{{Of{e}}}{}{}}0000{{{f{Eb}}{f{Eb}}}{{Ah{Eb}}}}{{}{{Of{c}}}{}}0000{fOh}00006{{}c{}}0000{{{f{Eb}}e}c{}{{Ch{{f{BlCl}}}{{Cf{c}}}}}}{{{f{{E`{{Gd{c}}}}}}}{{Hl{Fn{Gd{Fn}}}}}{}}{{{f{BDd}}}{{`{{Bf{}{{Bb{BDd}}}}}}}}{{{f{{E`{c}}}}}{{AKb{Id}}}{{Kl{{E`{Oj}}}}JjJl}}{{{f{{E`{e}}}}}{{Gd{c}}}{JjJlCj}{{Kl{{E`{c}}}}}}{{{f{Af}}}{{Gd{Af}}}}","D":"KNh","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",6199],[5,"ListType",1583],[5,"ChunkedArray",40],[1,"f64"],[10,"PolarsNumericType",1583],[10,"Num",6200],[10,"ToPrimitive",6201],[5,"Series",5390],[8,"PolarsResult",4589,6202],[10,"NumOpsDispatchInner",5876,6203],[6,"GroupsProxy",4205,6204],[5,"BooleanType",1583],[6,"Option",6205],[17,"Item"],[8,"ArrayBox",5852],[10,"Iterator",6206],[5,"FixedSizeListType",1583],[5,"PlSmallStr",4589,6207],[0,"mut"],[17,"IsNested"],[5,"FalseT",1583],[17,"IsObject"],[10,"PolarsDataType",1583],[17,"Output"],[10,"Fn",6208],[10,"Copy",6209],[5,"AmortSeries",5852],[10,"FnMut",6208],[5,"Float32Type",1583],[5,"Float64Type",1583],[8,"StringChunked",1583],[5,"String",6210],[5,"StringType",1583],[1,"str"],[5,"BinaryType",1583],[1,"u8"],[1,"slice"],[6,"DataType",1583,6211],[8,"ArrayChunked",1583],[8,"ListChunked",1583],[5,"View",6212],[5,"SortOptions",1497],[8,"IdxCa",1583,6213],[6,"Column",3908],[5,"SortMultipleOptions",1497],[8,"BinaryChunked",1583],[10,"PolarsIntegerType",1583],[10,"MetadataTrait",864,6214],[5,"Box",6215],[6,"CastOptions",759],[10,"NumOpsDispatchCheckedInner",5951,6216],[1,"usize"],[8,"ChunkLenIter",40],[8,"ArrayRef",4589,6217],[5,"Vec",6218],[5,"CompactString",6219],[5,"MetadataProperties",864],[10,"DoubleEndedIterator",6220],[8,"BooleanChunked",1583],[17,"HasViews"],[5,"Formatter",6221],[8,"Result",6221],[10,"Array",6217],[17,"Array"],[10,"IntoIterator",6222],[5,"Bitmap",6223],[1,"tuple"],[10,"IntoParallelIterator",6224],[10,"TrustedLen",6225],[6,"AnyValue",1583,6226],[8,"IdxSize",4589,6227],[5,"MetadataFlags",864],[5,"ObjectType",1583],[10,"PolarsObjectSafe",1150],[10,"PolarsObject",1150],[1,"f32"],[1,"u64"],[5,"Metadata",864],[5,"RwLockWriteGuard",6228],[5,"Int128Type",1583],[8,"DecimalChunked",1583,6229],[10,"Send",6209],[10,"Sync",6209],[10,"ExactSizeIterator",6230],[10,"PolarsFloatType",1583],[6,"IsSorted",5390,6231],[10,"PolarsIterator",807],[5,"Iter",6232],[1,"fn"],[5,"Map",6233],[10,"AsRef",6234],[6,"ChunkedArrayLayout",40],[10,"NumCast",6201],[5,"Scalar",5322],[6,"MetadataReadGuard",864,6235],[5,"IMMetadata",864,6236],[5,"Arc",4589,6237],[5,"RwLockReadGuard",6228],[5,"Int32Type",1583],[1,"i32"],[5,"Int64Type",1583],[1,"i64"],[1,"i128"],[5,"Range",6238],[5,"UInt64Type",1583],[5,"UInt32Type",1583],[1,"u32"],[5,"Field",1583,6239],[10,"ParallelIterator",6224],[10,"IndexedParallelIterator",6224],[6,"QuantileMethod",4589,6240],[5,"RollingOptionsFixedWindow",4589,6241],[10,"Sized",6209],[17,"IsStruct"],[8,"PlRandomState",1583,6242],[5,"BytesHash",6243],[8,"ArrayView1",6244],[8,"Array2",6244],[6,"Either",6245],[6,"Result",6246],[5,"TypeId",6247],[5,"NullableIdxSize",4589,6227],[10,"FnOnce",6208],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",467,6248],[10,"ChunkedBuilder",495],[5,"BinViewChunkedBuilder",495,6249],[10,"ViewType",6250],[5,"BooleanChunkedBuilder",495,6251],[5,"NullChunkedBuilder",495,6252],[5,"PrimitiveChunkedBuilder",495,6253],[10,"Clone",6254],[8,"StringChunkedBuilder",495,6249],[8,"BinaryChunkedBuilder",495,6249],[10,"NewChunkedArray",495],[5,"AnonymousListBuilder",604,6255],[5,"AnonymousOwnedListBuilder",604,6255],[5,"ListBooleanChunkedBuilder",604,6256],[5,"ListPrimitiveChunkedBuilder",604,6257],[10,"ListBuilderTrait",604],[5,"ListStringChunkedBuilder",604,6258],[5,"ListBinaryChunkedBuilder",604,6258],[5,"ListNullChunkedBuilder",604,6259],[10,"Hasher",6260],[10,"ChunkedCollectInferIterExt",787],[10,"ChunkedCollectIterExt",787],[10,"Canonical",801],[10,"ChunkedCollectParIterExt",803],[10,"FromParIterWithDtype",803],[5,"BooleanArray",6261],[5,"BoolIterNoNull",807],[5,"FixedSizeListArray",6262],[5,"FixedSizeListIterNoNull",807],[5,"SomeIterator",807],[5,"MetadataEnv",864,6263],[10,"MetadataCollectable",864,6264],[5,"Iter",6265],[5,"IterNames",6265],[5,"File",6266],[5,"Mutex",6267],[6,"MetadataMerge",864],[5,"RwLock",6228],[5,"ObjectArray",1150],[6,"ArrowDataType",1583,6268],[10,"Any",6247],[10,"Debug",6221],[5,"BitmapIter",6269],[6,"ZipValidity",6270],[8,"ObjectValueIter",1150],[5,"ObjectChunkedBuilder",1227],[8,"ObjectChunked",1583],[10,"AnonymousObjectBuilder",1251],[5,"ObjectRegistry",1251],[8,"ObjectConverter",1251],[8,"BuilderConstructor",1251],[10,"ChunkAgg",1280],[17,"FuncRet"],[10,"ChunkApply",1280],[10,"ChunkApplyKernel",1280],[10,"ChunkSort",1280],[10,"ChunkUnique",1280],[10,"ChunkCast",1280],[6,"FillNullStrategy",1280],[10,"ChunkCompareEq",1280],[10,"ChunkExplode",1280],[5,"OffsetsBuffer",6271],[10,"ChunkFillNullValue",1280],[10,"ChunkFilter",1280],[10,"ChunkFull",1280],[10,"ChunkFullNull",1280],[10,"ChunkAnyValue",1280],[10,"ChunkCompareIneq",1280],[10,"IsFirstDistinct",1280],[10,"IsLastDistinct",1280],[10,"ChunkQuantile",1280],[10,"ChunkExpandAtIndex",1280],[10,"ChunkReverse",1280],[10,"ChunkRollApply",1280],[10,"ChunkSet",1280],[10,"ChunkShift",1280],[10,"ChunkShiftFill",1280],[10,"ChunkVar",1280],[10,"ChunkTake",1280],[10,"ChunkTakeUnchecked",1280],[10,"ChunkBytes",1280],[10,"ChunkZip",1280],[10,"BinaryFnMut",1410],[10,"StaticArray",1583,6272],[10,"TernaryFnMut",1410],[10,"Error",6273],[10,"UnaryFnMut",1410],[5,"PrimitiveArray",6274],[5,"RowsEncoded",6275],[5,"BinaryArray",6276],[8,"BinaryOffsetChunked",1583],[6,"SearchSortedSide",1460],[10,"SlicedArray",4589,6277],[5,"NoNull",5985],[5,"NaiveDateTime",6278],[6,"PolarsError",4589,6202],[6,"Cow",6279],[8,"Float32Chunked",1583],[8,"Float64Chunked",1583],[10,"ArrayFromIter",1583,6280],[10,"ArrayFromIterDtype",1583,6280],[10,"AsRefDataType",1583,6211],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",6281],[10,"From",6234],[5,"CategoricalChunked",3172,6282],[10,"CategoricalMergeOperation",3172,6283],[10,"LogicalType",1583,6284],[5,"Logical",1583,6284],[5,"OwnedObject",1583,6226],[6,"UnknownKind",1583,6211],[5,"CompatLevel",1583,6211],[6,"TimeUnit",1583,6285],[5,"UInt8Type",1583],[5,"UInt16Type",1583],[5,"Int8Type",1583],[5,"Int16Type",1583],[5,"DateType",1583],[5,"TimeType",1583],[5,"BinaryOffsetType",1583],[5,"DecimalType",1583],[5,"DatetimeType",1583],[5,"DurationType",1583],[5,"CategoricalType",1583],[5,"Dimension",1583,6286],[6,"ReshapeDimension",1583,6286],[6,"ArrowTimeUnit",1583],[6,"Ordering",6287],[10,"ArrayCollectIterExt",4589,6280],[8,"Utf8ViewArray",6250],[8,"UInt32Chunked",1583],[5,"Error",6221],[10,"Into",6234],[10,"NumericNative",1583],[5,"ArrowField",4589],[6,"PrimitiveType",6288],[6,"IntegerType",6289],[10,"Borrow",6290],[10,"NoOption",6291],[10,"GetAnyValue",1583,6226],[8,"Int128Chunked",1583],[10,"IntoScalar",1583,6292],[6,"PhysicalType",6289],[6,"ToCompactStringError",6219],[8,"UInt8Chunked",1583],[8,"UInt16Chunked",1583],[8,"UInt64Chunked",1583],[8,"Int8Chunked",1583],[8,"Int16Chunked",1583],[8,"Int32Chunked",1583],[8,"Int64Chunked",1583],[8,"PlIdHashMap",1583,6213],[5,"CategoricalChunkedBuilder",3172,6293],[5,"GlobalRevMapMerger",3172,6283],[6,"RevMapping",3315,6294],[6,"CategoricalOrdering",3315,6294],[5,"CatIter",3172,6282],[1,"u128"],[5,"DataFrame",3614],[5,"StringCacheHolder",3369,6295],[5,"EnumChunkedBuilder",3388,6296],[5,"ErrString",3416,6202],[6,"PolarsWarning",3416,6297],[10,"Display",6221],[5,"BinaryViewArrayGeneric",6250],[10,"Offset",6298],[5,"DictionaryArray",6299],[10,"DictionaryKey",6299],[5,"ListArray",6300],[5,"Utf8Array",6301],[10,"NativeType",6302],[10,"One",6303],[5,"CastOptionsImpl",3498,6304],[10,"Float",6305],[5,"f16",6302],[5,"FixedSizeBinaryArray",6306],[10,"AsPrimitive",6201],[10,"Eq",6287],[10,"Hash",6260],[10,"SerPrimitive",3498,6307],[10,"TimeZone",6308],[6,"FloatFmt",3584],[1,"char"],[8,"Schema",5366],[8,"ArrayRef",6309],[5,"RecordBatchT",6310],[10,"IntoColumn",3908],[6,"NullStrategy",3614],[6,"UniqueKeepStrategy",3614],[8,"PlHashSet",1583,6242],[8,"ArrowSchema",4589,6311],[5,"Row",4460],[5,"GroupBy",4205],[5,"RangeFull",6238],[5,"RangeToInclusive",6238],[5,"RangeTo",6238],[5,"RangeFrom",6238],[5,"RangeInclusive",6238],[5,"RecordBatchIter",3614],[5,"PhysRecordBatchIter",3614],[10,"IntoSeries",5390,6312],[10,"RangeBounds",6238],[10,"IntoVec",5985],[8,"SchemaRef",5366],[6,"IndexOrder",4589,6313],[8,"RecordBatch",6310],[5,"StructArray",6314],[5,"ScalarColumn",3908,6315],[6,"BitRepr",5390,6231],[8,"SeriesPhysIter",5390,6316],[5,"UnpivotArgsIR",4177],[5,"GroupsIdx",4205,6204],[8,"IdxVec",6317],[6,"GroupByMethod",4205],[5,"SlicedGroups",4205,6204],[5,"GroupsProxyParIter",4205,6204],[10,"UnindexedConsumer",6318],[6,"GroupsIndicator",4205,6204],[8,"IdxItem",4205,6204],[10,"IntoGroupsProxy",4205,6319],[5,"Copied",6320],[5,"Zip",6321],[5,"GroupsProxyIter",4205,6204],[8,"GroupsSlice",4205,6204],[1,"array"],[6,"RollingFnParams",4589,6322],[10,"IsFloat",6323],[10,"AggList",4444,6324],[10,"TakeExtremum",4444],[10,"PhysicalAggExpr",4457],[6,"AnyValueBuffer",4460,6325],[6,"AnyValueBufferTrusted",4460,6325],[5,"IdHasher",4558,6326],[10,"VecHash",4558,6327],[10,"Allocator",6328],[5,"BorrowedFd",6329],[10,"AsFd",6329],[10,"AsRawFd",6330],[5,"Path",6331],[5,"OsStr",6332],[20,"MaybeUninit",6333],[10,"NumOpsDispatchChecked",4589,6216],[5,"ChunkId",4589,6227],[5,"RollingVarParams",4589,6322],[5,"RollingQuantileParams",4589,6322],[6,"NonExistent",4589,6334],[10,"Ord",6287],[5,"CStr",6335],[10,"Default",6336],[5,"Weak",6237],[10,"PartialEq",6287],[10,"Scalar",6337],[5,"Error",6338],[5,"Utf8Error",6339],[5,"TryReserveError",6340],[6,"Error",6341],[5,"OsString",6332],[10,"ToOwned",6279],[5,"PathBuf",6331],[1,"never"],[5,"CString",6342],[10,"FromData",5224,6343],[5,"Buffer",6344],[10,"FromDataUtf8",5224,6343],[10,"FromDataBinary",5224,6343],[6,"Ambiguous",4589,6334],[10,"NamedFromOwned",4589,6345],[10,"PartialOrd",6287],[10,"SeriesTrait",5390,6231],[10,"CloneToUninit",6254],[10,"ChunkAggSeries",4589,6346],[10,"QuantileAggSeries",4589,6347],[10,"IndexToUsize",4589,6348],[10,"NamedFrom",4589,6345],[5,"Pin",6349],[5,"Request",6273],[5,"BorrowedCursor",6350],[5,"IoSliceMut",6351],[6,"SeekFrom",6351],[10,"VarAggSeries",4589,6352],[5,"AllocError",6328],[5,"BTreeMap",6353],[5,"Arguments",6221],[5,"IoSlice",6351],[5,"AnonymousBuilder",5230,6354],[5,"AnonymousBuilder",5250,6355],[5,"Offsets",6271],[5,"MutableNullArray",5273,6356],[5,"MutableBitmap",6357],[1,"i8"],[1,"i16"],[1,"u16"],[5,"Schema",6358],[10,"SchemaExt",5366],[17,"DataType"],[10,"SchemaNamesAndDtypes",5366],[8,"Metadata",6268],[5,"SeriesIter",5390,6316],[5,"Rc",6359],[10,"LhsNumOps",5876,6203],[5,"NumericListOp",5876,6360],[5,"NumericFixedSizeListOp",5876,6361],[10,"NumOpsDispatch",5876,6203],[6,"NullBehavior",5959],[5,"SuperTypeFlags",5985,6362],[5,"SuperTypeOptions",5985,6362],[10,"Container",5985],[5,"TrustMyLength",5985,6225],[10,"CustomIterTools",5985,6363],[10,"FromIteratorReversed",6364],[10,"FromTrustedLenIterator",5985,6363],[5,"Wrap",5985],[5,"Repeat",6365],[5,"Take",6366],[8,"FillNullLimit",1280],[10,"InitHashMaps",1583],[10,"InitHashMaps2",1583],[5,"TrueT",1583],[15,"IO",3483],[15,"Context",3483],[15,"Count",4441],[15,"Slice",4442],[8,"QuantileInterpolOptions",4589],[10,"ListFromIter",4589],[10,"Utf8FromIter",5317],[10,"BinaryFromIter",5317]],"r":[[0,6326],[4,6295],[13,6295],[16,6295],[32,6295],[467,6248],[495,6249],[496,6249],[497,6251],[500,6252],[501,6253],[502,6249],[604,6255],[605,6255],[606,6258],[607,6256],[609,6259],[610,6257],[611,6258],[869,6236],[875,6264],[876,6263],[880,6235],[881,6214],[1197,6367],[1489,6277],[1497,6277],[1584,6226],[1589,6280],[1590,6280],[1591,6280],[1592,6268],[1594,6211],[1610,6282],[1613,6282],[1614,6293],[1615,6283],[1616,6294],[1619,6211],[1620,6211],[1621,6211],[1622,6211],[1633,6229],[1636,6286],[1645,6239],[1646,6239],[1662,6226],[1664,6283],[1668,6213],[1669,6348],[1670,6213],[1671,6213],[1673,6242],[1674,6213],[1699,6292],[1713,6284],[1714,6284],[1732,6226],[1736,6242],[1737,6242],[1738,6213],[1739,6242],[1740,6242],[1741,6242],[1742,6207],[1748,6286],[1749,6294],[1752,6272],[1764,6285],[1765,6211],[1792,6211],[2007,6283],[2027,6284],[2142,6211],[2278,6284],[2710,6283],[2711,6283],[2726,6211],[2830,6282],[2871,6282],[3172,6282],[3173,6282],[3174,6293],[3175,6283],[3176,6294],[3178,6283],[3182,6294],[3199,6283],[3267,6283],[3268,6283],[3286,6282],[3290,6282],[3315,6294],[3320,6294],[3369,6295],[3375,6295],[3378,6295],[3386,6295],[3388,6296],[3406,6294],[3411,6294],[3412,6295],[3413,6295],[3414,6295],[3415,6295],[3422,6202],[3429,6202],[3430,6202],[3431,6297],[3445,6202],[3453,6202],[3460,6297],[3465,6202],[3467,6202],[3468,6202],[3469,6202],[3470,6202],[3471,6297],[3472,6202],[3487,6368],[3488,6368],[3489,6368],[3490,4558],[3492,6369],[3498,6304],[3499,6307],[3501,6370],[3502,6371],[3503,6370],[3504,6370],[3505,6370],[3506,6370],[3507,6372],[3508,6373],[3509,6373],[3510,6373],[3513,6304],[3514,6304],[3515,6304],[3519,6307],[3520,6307],[3521,6374],[3522,6374],[3523,6374],[3528,6307],[3529,6370],[3530,6370],[3531,6307],[3536,6307],[3537,6307],[3538,6307],[3539,6307],[3540,6307],[3543,6307],[3544,6307],[3545,6307],[3546,6307],[3547,6307],[3548,6307],[3549,6304],[3550,6307],[3551,6307],[3552,6307],[3553,6307],[3554,6307],[3555,6307],[3556,6307],[3557,6307],[3558,6307],[3564,6371],[3565,6371],[3566,6371],[3567,6371],[3568,6371],[3569,6372],[3573,6375],[3574,6375],[3575,6375],[3576,6375],[3577,6375],[3578,6375],[3579,6375],[3580,6375],[3581,6376],[3582,6376],[3583,6376],[3912,6315],[4205,6204],[4211,6204],[4212,6204],[4213,6204],[4214,6204],[4215,6204],[4216,6204],[4219,6204],[4221,6319],[4233,6204],[4444,6324],[4462,6325],[4463,6325],[4557,6377],[4558,6326],[4559,6326],[4560,6327],[4563,6327],[4564,6327],[4567,6327],[4589,6334],[4590,6237],[4591,6248],[4592,6280],[4593,6217],[4595,6311],[4596,6249],[4597,6251],[4599,6282],[4600,6282],[4601,6293],[4602,6283],[4603,6294],[4604,6346],[4605,6227],[4606,40],[4607,495],[4608,787],[4609,787],[4610,3908],[4614,3614],[4623,6343],[4624,6343],[4625,6343],[4627,6283],[4631,6348],[4632,6227],[4633,6313],[4634,6348],[4635,3908],[4636,6312],[4637,5985],[4639,6378],[4640,6378],[4641,6378],[4644,6203],[4647,6258],[4648,6256],[4649,604],[4650,6379],[4651,6257],[4652,6258],[4658,6345],[4659,6345],[4662,495],[4664,6334],[4667,6227],[4668,6203],[4669,6216],[4673,6207],[4674,6202],[4675,807],[4676,1150],[4677,6202],[4678,6253],[4680,6347],[4681,6240],[4682,6240],[4685,6294],[4686,6322],[4687,6241],[4688,6322],[4689,6322],[4692,5322],[4695,5390],[4696,6231],[4698,6277],[4699,6295],[4701,6249],[4703,3614],[4704,4177],[4706,6352],[4707,6327],[4762,6283],[4813,6379],[4814,0],[4827,6379],[4859,0],[4909,6379],[5008,6348],[5053,6379],[5055,6283],[5056,6283],[5083,6379],[5090,6202],[5091,6202],[5092,6202],[5093,6202],[5105,6282],[5107,6379],[5113,6282],[5194,6379],[5224,6343],[5225,6343],[5226,6343],[5230,6354],[5250,6355],[5273,6356],[5304,6294],[5309,6294],[5310,6277],[5313,6295],[5314,6295],[5315,6295],[5316,6295],[5317,6380],[5318,6380],[5392,6231],[5393,1280],[5396,6312],[5397,6231],[5398,6231],[5403,6316],[5404,6316],[5405,6231],[5876,6203],[5877,6203],[5878,6203],[5879,6361],[5880,6360],[5894,6203],[5951,6216],[5952,6216],[5988,6363],[5989,6363],[5990,6363],[5993,6362],[5994,6362],[5995,6225],[6010,6381],[6011,6381],[6071,6382],[6072,6362],[6112,6362],[6113,6362],[6115,6383],[6143,6362],[6144,6362],[6176,6362],[6193,6383]],"b":[[50,"impl-Add-for-%26ChunkedArray%3CT%3E"],[51,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[52,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[53,"impl-Add-for-ChunkedArray%3CT%3E"],[58,"impl-ChunkedArray%3CListType%3E"],[59,"impl-ChunkedArray%3CFixedSizeListType%3E"],[60,"impl-ChunkedArray%3CFixedSizeListType%3E"],[61,"impl-ChunkedArray%3CListType%3E"],[67,"impl-ChunkedArray%3CFixedSizeListType%3E"],[68,"impl-ChunkedArray%3CListType%3E"],[70,"impl-ChunkedArray%3CFloat32Type%3E"],[71,"impl-ChunkedArray%3CFloat64Type%3E"],[76,"impl-ChunkedArray%3CT%3E"],[77,"impl-ChunkedArray%3CStringType%3E"],[78,"impl-ChunkedArray%3CBinaryType%3E"],[80,"impl-ChunkedArray%3CFixedSizeListType%3E"],[81,"impl-ChunkedArray%3CListType%3E"],[108,"impl-Container-for-ChunkedArray%3CT%3E"],[109,"impl-ChunkedArray%3CT%3E"],[129,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[130,"impl-Div-for-%26ChunkedArray%3CT%3E"],[131,"impl-Div-for-ChunkedArray%3CT%3E"],[132,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[139,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[140,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[141,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[142,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[149,"impl-Debug-for-ChunkedArray%3CT%3E"],[150,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[152,"impl-ChunkedArray%3CFixedSizeListType%3E"],[153,"impl-ChunkedArray%3CListType%3E"],[161,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[162,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[163,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[165,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[166,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[178,"impl-ChunkedArray%3CFixedSizeListType%3E"],[179,"impl-ChunkedArray%3CListType%3E"],[183,"impl-ChunkedArray%3CListType%3E"],[184,"impl-ChunkedArray%3CFixedSizeListType%3E"],[188,"impl-ChunkedArray%3CListType%3E"],[189,"impl-ChunkedArray%3CFixedSizeListType%3E"],[198,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[199,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[200,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[201,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[207,"impl-ChunkedArray%3CFixedSizeListType%3E"],[208,"impl-ChunkedArray%3CListType%3E"],[235,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[236,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[237,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[238,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[239,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[240,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[241,"impl-Container-for-ChunkedArray%3CT%3E"],[242,"impl-ChunkedArray%3CT%3E"],[247,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[248,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[249,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[250,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[251,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[252,"impl-ChunkedArray%3CBooleanType%3E"],[255,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[256,"impl-ChunkedArray%3CBooleanType%3E"],[266,"impl-ChunkedArray%3CBooleanType%3E"],[267,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[271,"impl-ChunkedArray%3CT%3E"],[272,"impl-ChunkedArray%3CBooleanType%3E"],[273,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[274,"impl-Mul-for-ChunkedArray%3CT%3E"],[275,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[276,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[281,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[282,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[283,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[284,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[285,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[286,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[287,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[288,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[289,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[290,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[291,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[292,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[293,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[294,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[295,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[296,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[297,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[298,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[299,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[300,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[301,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[302,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[303,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[304,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[312,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[313,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[314,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[315,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[321,"impl-ChunkedArray%3CListType%3E"],[322,"impl-ChunkedArray%3CStringType%3E"],[323,"impl-ChunkedArray%3CListType%3E"],[324,"impl-ChunkedArray%3CStringType%3E"],[337,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[338,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[339,"impl-Rem-for-ChunkedArray%3CT%3E"],[340,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[359,"impl-Container-for-ChunkedArray%3CT%3E"],[360,"impl-ChunkedArray%3CT%3E"],[363,"impl-Container-for-ChunkedArray%3CT%3E"],[364,"impl-ChunkedArray%3CT%3E"],[367,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[368,"impl-Sub-for-ChunkedArray%3CT%3E"],[369,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[370,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[372,"impl-ChunkedArray%3CBooleanType%3E"],[373,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[376,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[377,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[378,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[379,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[384,"impl-ChunkedArray%3CListType%3E"],[385,"impl-ChunkedArray%3CFixedSizeListType%3E"],[386,"impl-ChunkedArray%3CT%3E"],[387,"impl-ChunkedArray%3CListType%3E"],[392,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[393,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[394,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[395,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[396,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[397,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[399,"impl-ChunkedArray%3CFixedSizeListType%3E"],[400,"impl-ChunkedArray%3CListType%3E"],[428,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[429,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[430,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[431,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[435,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[436,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[437,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[438,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[439,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[440,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[441,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[442,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[443,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[444,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[445,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[446,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[447,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[448,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[449,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[450,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[451,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[452,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[453,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[454,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[455,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[456,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[457,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[458,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[459,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[460,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[461,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[462,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[463,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[551,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[552,"impl-BinViewChunkedBuilder%3Cstr%3E"],[902,"impl-MetadataProperties"],[903,"impl-Flags-for-MetadataProperties"],[904,"impl-Flags-for-MetadataFlags"],[905,"impl-MetadataFlags"],[969,"impl-Metadata%3CT%3E"],[970,"impl-MetadataTrait-for-Metadata%3CT%3E"],[995,"impl-LowerHex-for-MetadataProperties"],[996,"impl-Octal-for-MetadataProperties"],[997,"impl-Debug-for-MetadataProperties"],[998,"impl-UpperHex-for-MetadataProperties"],[999,"impl-Binary-for-MetadataProperties"],[1000,"impl-Binary-for-MetadataFlags"],[1001,"impl-Octal-for-MetadataFlags"],[1002,"impl-Debug-for-MetadataFlags"],[1003,"impl-UpperHex-for-MetadataFlags"],[1004,"impl-LowerHex-for-MetadataFlags"],[1014,"impl-MetadataProperties"],[1015,"impl-Flags-for-MetadataProperties"],[1016,"impl-Flags-for-MetadataFlags"],[1017,"impl-MetadataFlags"],[1028,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1029,"impl-Metadata%3CT%3E"],[1072,"impl-Metadata%3CT%3E"],[1073,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1077,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1078,"impl-Metadata%3CT%3E"],[1156,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1157,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1192,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1193,"impl-ObjectArray%3CT%3E"],[1208,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1209,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1219,"impl-ObjectArray%3CT%3E"],[1220,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1221,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1222,"impl-ObjectArray%3CT%3E"],[1224,"impl-Array-for-ObjectArray%3CT%3E"],[1225,"impl-ObjectArray%3CT%3E"],[1228,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1229,"impl-ObjectChunkedBuilder%3CT%3E"],[1231,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1232,"impl-ObjectChunkedBuilder%3CT%3E"],[1833,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1834,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1835,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1836,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1837,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1838,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1839,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1840,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1924,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1925,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1926,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1927,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1928,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[1929,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[2281,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2282,"impl-PartialEq-for-DataType"],[2294,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2295,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2296,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2297,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2301,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2302,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2303,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2304,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2340,"impl-Display-for-AnyValue%3C\'_%3E"],[2341,"impl-Debug-for-AnyValue%3C\'a%3E"],[2343,"impl-Display-for-DataType"],[2344,"impl-Debug-for-DataType"],[2347,"impl-Display-for-TimeUnit"],[2348,"impl-Debug-for-TimeUnit"],[2350,"impl-Display-for-ReshapeDimension"],[2351,"impl-Debug-for-ReshapeDimension"],[2364,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2365,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2366,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2368,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2369,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2371,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2373,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2374,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2376,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2377,"impl-From%3C%26Field%3E-for-Field"],[2404,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2405,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2408,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2409,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[2410,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2411,"impl-FromIterator%3COption%3CColumn%3E%3E-for-ChunkedArray%3CListType%3E"],[2413,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2414,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2415,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2416,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2422,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2423,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2425,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2426,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2427,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2428,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2429,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2430,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2437,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[2438,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[2439,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2440,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2441,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2442,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2546,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2547,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2548,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2549,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2551,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2552,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2553,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2554,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2701,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2702,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2703,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2704,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2706,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2707,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2708,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2709,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2751,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2752,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2753,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2754,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2755,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2756,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2757,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2758,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2759,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2760,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2777,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2778,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2782,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2783,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2784,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2785,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2789,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2790,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2791,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2792,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2885,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[2886,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[2887,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CListType%3E"],[2888,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CListType%3E"],[2889,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[2890,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[2891,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2892,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[3219,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3220,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3221,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3222,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3223,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3224,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3240,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3241,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3242,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3243,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3244,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3245,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3261,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3262,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3263,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3264,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3265,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3266,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3277,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3278,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3279,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3280,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3281,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3282,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3455,"impl-Display-for-ErrString"],[3456,"impl-Debug-for-ErrString"],[3639,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[3640,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[3641,"impl-Add%3C%26Series%3E-for-DataFrame"],[3687,"impl-Div%3C%26Series%3E-for-DataFrame"],[3688,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[3689,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[3721,"impl-Debug-for-DataFrame"],[3722,"impl-Display-for-DataFrame"],[3728,"impl-FromIterator%3CSeries%3E-for-DataFrame"],[3729,"impl-FromIterator%3CColumn%3E-for-DataFrame"],[3755,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3756,"impl-Index%3Cusize%3E-for-DataFrame"],[3757,"impl-Index%3C%26str%3E-for-DataFrame"],[3758,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3759,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3760,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3761,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3762,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3780,"impl-Container-for-DataFrame"],[3781,"impl-DataFrame"],[3789,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3790,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3791,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3812,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3813,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3814,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3842,"impl-DataFrame"],[3843,"impl-Container-for-DataFrame"],[3847,"impl-DataFrame"],[3848,"impl-Container-for-DataFrame"],[3851,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3852,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3853,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3869,"impl-TryExtend%3CResult%3CRecordBatchT%3CBox%3Cdyn+Array%3E%3E,+PolarsError%3E%3E-for-DataFrame"],[3870,"impl-TryExtend%3CRecordBatchT%3CBox%3Cdyn+Array%3E%3E%3E-for-DataFrame"],[3876,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26Schema%3CField%3E)%3E-for-DataFrame"],[3877,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3916,"impl-Add-for-%26Column"],[3917,"impl-Add-for-Column"],[3918,"impl-Add%3CT%3E-for-%26Column"],[3919,"impl-Add%3CT%3E-for-Column"],[3950,"impl-Column"],[3951,"impl-BitAnd-for-Column"],[3952,"impl-BitAnd-for-%26Column"],[3953,"impl-BitOr-for-%26Column"],[3954,"impl-Column"],[3955,"impl-BitOr-for-Column"],[3956,"impl-BitXor-for-Column"],[3957,"impl-Column"],[3958,"impl-BitXor-for-%26Column"],[3984,"impl-Div%3CT%3E-for-%26Column"],[3985,"impl-Div%3CT%3E-for-Column"],[3986,"impl-Div-for-Column"],[3987,"impl-Div-for-%26Column"],[4011,"impl-From%3CScalarColumn%3E-for-Column"],[4012,"impl-From%3CSeries%3E-for-Column"],[4064,"impl-Mul%3CT%3E-for-Column"],[4065,"impl-Mul-for-%26Column"],[4066,"impl-Mul-for-Column"],[4067,"impl-Mul%3CT%3E-for-%26Column"],[4087,"impl-Rem-for-%26Column"],[4088,"impl-Rem%3CT%3E-for-%26Column"],[4089,"impl-Rem%3CT%3E-for-Column"],[4090,"impl-Rem-for-Column"],[4112,"impl-Sub-for-%26Column"],[4113,"impl-Sub%3CT%3E-for-%26Column"],[4114,"impl-Sub-for-Column"],[4115,"impl-Sub%3CT%3E-for-Column"],[4319,"impl-Display-for-GroupByMethod"],[4320,"impl-Debug-for-GroupByMethod"],[4327,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[4328,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[4361,"impl-IntoIterator-for-GroupsIdx"],[4362,"impl-IntoIterator-for-%26GroupsIdx"],[4364,"impl-IntoParallelIterator-for-GroupsIdx"],[4365,"impl-IntoParallelIterator-for-%26GroupsIdx"],[4724,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[4725,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[4726,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[4727,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[4730,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[4731,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[4819,"impl-Default-for-Arc%3CCStr%3E"],[4820,"impl-Default-for-Arc%3Cstr%3E"],[4821,"impl-Default-for-Arc%3C%5BT%5D%3E"],[4822,"impl-Default-for-Arc%3CT%3E"],[4882,"impl-PartialEq-for-Arc%3CT,+A%3E"],[4883,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[4884,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[4911,"impl-Debug-for-PolarsError"],[4912,"impl-Display-for-PolarsError"],[4913,"impl-Display-for-PlSmallStr"],[4914,"impl-Debug-for-PlSmallStr"],[4917,"impl-Pointer-for-Arc%3CT,+A%3E"],[4918,"impl-Display-for-Arc%3CT,+A%3E"],[4919,"impl-Debug-for-Arc%3CT,+A%3E"],[4929,"impl-From%3CUtf8Error%3E-for-PolarsError"],[4930,"impl-From%3CTryReserveError%3E-for-PolarsError"],[4931,"impl-From%3CError%3E-for-PolarsError"],[4932,"impl-From%3CError%3E-for-PolarsError"],[4935,"impl-From%3C%26str%3E-for-PlSmallStr"],[4936,"impl-From%3CCompactString%3E-for-PlSmallStr"],[4937,"impl-From%3C%26String%3E-for-PlSmallStr"],[4938,"impl-From%3CString%3E-for-PlSmallStr"],[4942,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[4943,"impl-From%3CCompactString%3E-for-Arc%3Cstr%3E"],[4944,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[4945,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[4946,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[4947,"impl-From%3CT%3E-for-Arc%3CT%3E"],[4948,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[4949,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[4950,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[4951,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[4952,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[4953,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[4954,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[4955,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[4958,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[4959,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[4972,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[4973,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[4974,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[4975,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[4976,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[4977,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[4978,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[4979,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[5337,"impl-From%3Cf32%3E-for-Scalar"],[5338,"impl-From%3CPlSmallStr%3E-for-Scalar"],[5340,"impl-From%3Cu32%3E-for-Scalar"],[5341,"impl-From%3Cu64%3E-for-Scalar"],[5342,"impl-From%3Cbool%3E-for-Scalar"],[5343,"impl-From%3Cu8%3E-for-Scalar"],[5344,"impl-From%3Ci8%3E-for-Scalar"],[5345,"impl-From%3Ci16%3E-for-Scalar"],[5346,"impl-From%3Cu16%3E-for-Scalar"],[5347,"impl-From%3Cf64%3E-for-Scalar"],[5348,"impl-From%3Ci64%3E-for-Scalar"],[5349,"impl-From%3Ci32%3E-for-Scalar"],[5413,"impl-Add-for-%26Series"],[5414,"impl-Add-for-Series"],[5415,"impl-Add%3CT%3E-for-%26Series"],[5416,"impl-Add%3CT%3E-for-Series"],[5440,"impl-BitAnd-for-Series"],[5441,"impl-BitAnd-for-%26Series"],[5442,"impl-BitAnd%3C%26Series%3E-for-Series"],[5443,"impl-BitAnd%3CSeries%3E-for-%26Series"],[5444,"impl-BitOr%3CSeries%3E-for-%26Series"],[5445,"impl-BitOr%3C%26Series%3E-for-Series"],[5446,"impl-BitOr-for-Series"],[5447,"impl-BitOr-for-%26Series"],[5448,"impl-BitXor%3CSeries%3E-for-%26Series"],[5449,"impl-BitXor%3C%26Series%3E-for-Series"],[5450,"impl-BitXor-for-Series"],[5451,"impl-BitXor-for-%26Series"],[5497,"impl-Div-for-%26Series"],[5498,"impl-Div%3CT%3E-for-%26Series"],[5499,"impl-Div%3CT%3E-for-Series"],[5500,"impl-Div-for-Series"],[5512,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[5513,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[5514,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[5515,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[5516,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[5517,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[5535,"impl-Debug-for-Series"],[5536,"impl-Display-for-Series"],[5548,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[5549,"impl-FromIterator%3Ci64%3E-for-Series"],[5550,"impl-FromIterator%3C%26u32%3E-for-Series"],[5551,"impl-FromIterator%3CString%3E-for-Series"],[5552,"impl-FromIterator%3COption%3CString%3E%3E-for-Series"],[5553,"impl-FromIterator%3C%26str%3E-for-Series"],[5554,"impl-FromIterator%3COption%3C%26str%3E%3E-for-Series"],[5555,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[5556,"impl-FromIterator%3Cu64%3E-for-Series"],[5557,"impl-FromIterator%3C%26bool%3E-for-Series"],[5558,"impl-FromIterator%3C%26u64%3E-for-Series"],[5559,"impl-FromIterator%3Cbool%3E-for-Series"],[5560,"impl-FromIterator%3Cu32%3E-for-Series"],[5561,"impl-FromIterator%3C%26i64%3E-for-Series"],[5562,"impl-FromIterator%3Cf64%3E-for-Series"],[5563,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[5564,"impl-FromIterator%3C%26f32%3E-for-Series"],[5565,"impl-FromIterator%3Cf32%3E-for-Series"],[5566,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[5567,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[5568,"impl-FromIterator%3Ci32%3E-for-Series"],[5569,"impl-FromIterator%3C%26i32%3E-for-Series"],[5570,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[5571,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[5572,"impl-FromIterator%3C%26f64%3E-for-Series"],[5573,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[5574,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[5575,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[5576,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[5577,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[5578,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[5579,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[5593,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[5594,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[5595,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[5596,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[5597,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[5598,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[5646,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[5647,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[5648,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[5649,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[5650,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[5651,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[5665,"impl-Mul-for-%26Series"],[5666,"impl-Mul-for-Series"],[5667,"impl-Mul%3CT%3E-for-Series"],[5668,"impl-Mul%3CT%3E-for-%26Series"],[5675,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[5676,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[5677,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[5678,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[5679,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[5680,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[5681,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[5682,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[5683,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[5684,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[5685,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[5686,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[5687,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[5688,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[5689,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[5690,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[5691,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[5692,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[5693,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[5694,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[5695,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[5696,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[5697,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[5698,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[5699,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[5700,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[5701,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[5702,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[5703,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[5704,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[5705,"impl-NamedFrom%3CT,+T%3E-for-Series"],[5706,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[5707,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[5708,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[5709,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[5710,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[5711,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[5716,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[5717,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[5718,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[5719,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[5720,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[5721,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[5734,"impl-Rem-for-%26Series"],[5735,"impl-Rem%3CT%3E-for-%26Series"],[5736,"impl-Rem%3CT%3E-for-Series"],[5769,"impl-Sub-for-Series"],[5770,"impl-Sub%3CT%3E-for-%26Series"],[5771,"impl-Sub%3CT%3E-for-Series"],[5772,"impl-Sub-for-%26Series"],[5801,"impl-TryFrom%3C(PlSmallStr,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5802,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5804,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5805,"impl-TryFrom%3C(PlSmallStr,+Box%3Cdyn+Array%3E)%3E-for-Series"],[6018,"impl-SuperTypeFlags"],[6019,"impl-Flags-for-SuperTypeFlags"],[6086,"impl-UpperHex-for-SuperTypeFlags"],[6087,"impl-Binary-for-SuperTypeFlags"],[6088,"impl-Octal-for-SuperTypeFlags"],[6089,"impl-LowerHex-for-SuperTypeFlags"],[6090,"impl-Debug-for-SuperTypeFlags"],[6099,"impl-Flags-for-SuperTypeFlags"],[6100,"impl-SuperTypeFlags"],[6102,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6103,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6106,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6107,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6110,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6111,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"]],"c":"OjAAAAEAAAAAAA0AEAAAAJIQ2xAWERkRGhEbERwRHREiESURKhErEVERShI=","e":"OzAAAAEAAEMSXAIAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAIAIgAHACsADQBCAAAARwABAEoABQBTAAEAVgAAAFgAAABaAAoAZgAAAGkABABxAAMAdgACAH0ADQCMAAMAkQACAJUABgCeAAEAogAFAKoAAwCwAAQAtgAGAMAAAQDFAAAAxwADAM0AAgDVAAUA3AADAOMAAgDnAAIA6wAHAPgADQALAQQAEgEGABoBGwA5AQMAPgECAEIBBABIAQEATgECAFIBBABYAQAAXQEFAGUBAQBoAQAAagECAG4BCQB+AQEAhQEAAIkBBgCRAQAAkwEBAJYBCACgAQAAogEGAKsBAACtASMA0wEpAAECAgAHAigANgIFAEACAABCAiYAagIZAIUCMwDAAgwA1AIkAPwCDQALAwEADgMZACkDAAAsAw4APgMCAEQDAgBJAxwAZwMJAHIDCgCIAwEAjwMNAJ4DEACzAxIAyAMAAMoDCQDWAwMA3AMBAOADDQD4AwEAAQQHAAoEBwAfBAEAIwQAACYEAwAuBAUANQQEAEEECwBUBAQAWwQNAGsEBgB1BAgAfwQBAIMEFgCbBAgApQQAAKcEAACpBAAAqwQBALAEEADCBAAAxQQEAMsEAgDPBAEA0gQHANsEAQDeBAUA5gQBAOkEAADrBAEA7gQDAPMEBAD5BAIA/QQDAAMFAAAGBQAADwUAABQFAAAXBQEAHAUBAB8FAAAiBQEALQUBADcFAgA9BQYARgUCAEsFAQBOBQAAUAUBAFYFAQBZBQIAYQUBAGcFAABqBQEAbgUAAHAFAAByBQAAdAUAAHkFBACABQEAgwUHAIwFAQCPBQAAkwUAAJUFAwCaBQEAnQUFAKkFHgDJBQEAzQUEANMFAwDdBREA8QUJAPwFAQD/BQMAEQYJACcGCwA0BgQAOwYCAD8GBQBHBgAASQYOAFsGAABdBgAAYgYBAGUGAQBoBgMAbQYAAG8GAAByBgEAdgYAAHgGAQB7BgAAfQYCAIEGDQCQBgAAkgYBAJUGAACXBgEAmgYAAJwGAQCfBgAAoQYBAKQGAwCrBgAArwYBALMGAAC2BgAAuAYAALoGAwC/BgAAwgYIAMwGAgDRBgMA1gYAANgGAgDdBgAA3wYAAOQGAgDoBgEA6wYAAO0GAQDwBgAA8gYBAPUGAAD3BgEA+gYAAPwGAQD/BgAAAQcAAAQHQABNBwQAVgcJAGIHBABoBwMAbQcEAHMHAAB1BwcAfgdaANoHAgDeB3YAVggFAF0IhADjCAAA5ghOAD0JAgBBCQEARAkAAEYJAQBJCQEATAkAAGUJAQBoCRgAhQkoALAJBwC6CSEA4QkBAOcJRQAwCgAAVwoMAGYKAABoCgIAbAoBAG8KAAB0CgcAfQoBAIEKAgCFCgAAhwoEAI0KDQCcCgAAngoKAKoKAwCvCgsAvAoNAMsKJwD0CggA/goeAB4LGAA4CxEASwsAAFALAABSCwAAVAsAAFkLHwB7CwUAggsBAIULAACHC1YA3wsxABIMUABlDAQAawwBAG4MAgBzDAMAeAwkAKUMAgCpDAkAtwwEAL0MFwDXDAEA2gwEAOAMDQDvDAUA9gwAAPgMFwARDQEAFw0CABwNAQAgDQkAKw0EADENAQA2DQAAOA0CADwNCgBIDQAASg0FAFENAABTDQEAWQ0EAF8NBABlDRAAdw0KAIMNAACFDQIAig0FAJENEwCmDQQArA0BAK8NAAC0DQAAtw0CALsNBADFDQMAyw0AAM0NAADPDQEA3g0AAOgNBADxDQIA9Q0AAAEOCwAODgUAFQ4JACIOAAAlDgsAMw4DADgOAwA9DgAAQg4LAE8OCQBcDhMAeQ4BAH0OAQCADgAAgg4AAIgOAwCaDgAAoQ4AAKQOAQCsDgwAvw4BAMUOAADIDgEAzg4DANkOAQDcDgAA5Q4CAO0OAADwDgAA9w4AAAEPAQAEDwEACQ8FABYPBAAeDwgAKQ8KADUPAAA6DwQARw8BAEoPBgBeDwYAaA8CAGwPEgCBDxsAnw8LAKwPAQCwDwUAuQ8KAMYPAwDLDwkA1g8CANsPFADyDw0AARAWABoQAAAdEAIAIRAlAEgQCQBTEA0AYhACAGYQCgByEAEAdRADAHoQAwB/EAkAihAHAJMQAQCWEBwAtBAmANwQBgDoEAEA6xAAAO4QAgDzEAAA+BAHAAgRDQAXEQEAHhEDACMRAQAnEQIALBEAAC4RIABSEQwAYREFAGgRBwBxERYAihEOAJoRDgCrEQAArREDALQRBQC+EQ4AzxEOAN8RAADhEQIA5hEIAPARAgD1EQcA/hEPAA8SAwAUEhkALxIPAEASAQBDEhcAXRITAHISAAB0EgYAfRIfAJ8SAwCkEiAAxhIHAM8SAQDTEgAA2BIkAAATAwAFEwkAERMBABQTLABCEwMASBMDAE0TAABQEwAAXhMAAGoTAABtEwcAexMAAH4TAwCGEwAAiBMGAJETEACwEwAAtBMDALkTAwC+EwAAwBMBAMcTAADcEwMA4xMEAOoTAADtEwcA9xMAAPkTAQD+EzEAOBQCADwUDQBLFAAATRQNAF8UDQBvFAcAeBQAAHoUDwCLFAAAjRQdAKwUAACuFAsAuxQAAL0UAQDGFBUA3RQKAOoUFwADFQAABRUCAAkVAAALFQAADRUAAA8VBQAWFQQAHBUFACYVBAAyFQAAORUCAEEVCwBOFQsAXRUDAGIVAABmFQIAahUDAHAVEgCHFQMAjBUBAJEVAQCfFQMApxUAAKoVAQCtFSAA0BUAANIVAQDaFQAA3BUAAN4VAQDhFQAA5xUBAOoVAwDyFQUAABYDAAUWAAAJFgAADxYAABEWAgAaFgAAIhYDACgWAAAsFh4ATBYEAFMWAwBYFgEAXRYAAGAWAABlFgQAbBYBAG8WAABzFgIAehYBAH0WAAB/FgEAghYAAIgWAACKFgMAmhYBAJ0WAQCnFgcAsxYEALkWAQC+FgEAxBYDAM8WAADUFgMA2RYAAN4WCwDrFgAA7RYAAO8WBAD1FigAIBcBACQXHQBFFwIAShcOAFoXAQBdFwQAZBcDAGoXCAB1FwAAeRcBAH0XAQCEFwAAhxcTAJwXAgCjFw4AsxcEALsXCADFFwcA0BcAANQXAADXFwEA2hcCAN4XAwDjFwkA9RcEAP0XAAD/FwQABhgBAAkYAQANGAIAEhgAABcYAgAcGAQAIhgJAC0YBAAzGAQA"}],["polars_io",{"t":"KFFKKKNNECNNNNNNNNNNCCNNNNNNNNNONNNNNNNNCMMNNNNNNCONNNNCCCOCMMMOCCCCCCONNNNNNNNONNCNNMGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFIFNNNNNNNOHNNNCNNNNNNNNNNNNNNONNNNNNNNNHNNNNNNNNNNNHCONONNNNNNNNNNNNNNNNPPFPGPFPPFKPGGPPNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNONNNNNNNNNNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCPPFGGFFFPPPGFPPNNNNNCNNNNNNNNNNNNNNNNNNNCONNNNNNNNNNNNNNNOONHHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNONNNNNOEONNNNNNNNNNNNNNNNNONOOONNNNNNOOOOOOOOOCOONNNNNOONNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPFGNNNNNHNNNNNNNNNNNHNNNNNNNNHHNNNNNNNENNPGPFPPFPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNHNNNNOOOFNNNNNNNNNNHNNNNHHNNNNNNNNNPFFFPPPGFNNNONNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNONONNNNNNNNNNOONNOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNJJFNNNNNNHNHNNNNNNNNNHFGFFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPKPGNNNNNNNNNNNNNNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFIFNNNNNNNNNOONNNNHONNNNNNNNNNNNNOOOOOOONONNNNNNNNONNPFPPGFFFPPNNCNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNONNNNNONNNNNNNNNNNNNNNNNNHNNNNNNNONNNNNNNNNNNNNNNNNNNNPPPGNNHNNNHNNNNHNHNNNNFPFPFPPGFFIPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOONNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHJHHHHHHKFNNNNNNNNHNNMNNNNNHNNHFFKKNNHNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNMNNNNNNNMNNNNNNNNNNNNNNNKKEMMMMNNNEJJJJSHCHCHHHCKPGGPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPPNNNNNNNNNHNNNNPPPGNNNNNNNNNHNNNNN","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriteDataFrameToFile","__clone_box","","async_glob","avro","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","cloud","csv","default","deref","","deref_mut","","deserialize","","drop","","enabled","eq","","equivalent","","","","","","file_cache","finish","","fmt","","from","","hash","","hive","hive_start_idx","init","","into","","ipc","json","mmap","name","ndjson","new","","next_record_batch","offset","parquet","partition","path_utils","pl_async","predicates","prelude","schema","serialize","","to_owned","","try_from","","try_into","","try_parse_dates","type_id","","utils","vzip","","write_df_to_file","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","","Snappy","","__clone_box","arrow_schema","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","deref","","","deref_mut","","","drop","","","eq","equivalent","","","finish","","fmt","from","","","hash","init","","","into","","","new","","schema","set_rechunk","to_owned","try_from","","","try_into","","","type_id","","","vzip","","","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","ObjectStorePath","PolarsObjectStore","__clone_box","borrow","","","borrow_mut","","","bucket","build_object_store","clone","clone_into","clone_to_uninit","credential_provider","default","deref","","","deref_mut","","","download","drop","","","","eq","execute","expansion","flush","fmt","","from","","","from_url","get_range","get_ranges_sort","glob","head","init","","","into","","","new","","","new_with_object_store","object_path_from_str","options","prefix","queue","scheme","sync_update","to_owned","try_from","","","try_into","","","type_id","","","vzip","","","write","write_varint","AccessKey","Aws","AwsCredential","Azure","AzureCredential","BearerToken","CredentialProviderFunction","Function","Gcp","GcpCredential","IntoCredentialProvider","None","ObjectStoreCredential","PlCredentialProvider","Python","SASToken","__clone_box","","bearer","borrow","","","","","","borrow_mut","","","","","","clone","","clone_into","","clone_to_uninit","","deref","","","","","","deref_mut","","","","","","deserialize","drop","","","","","","eq","","","","","equivalent","","","","","","","","","","","","","","","fmt","","","","","from","","","","","","","","from_func","from_python_func","from_python_func_object","hash","","init","","","","","","into","","","","","","into_aws_provider","","","into_azure_provider","","","into_gcp_provider","","","key_id","secret_key","serialize","to_owned","","token","try_from","","","","","","try_into","","","","","","type_id","","","","","","vzip","","","","","","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","","Checksum","Client","","","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","","Encryption","Endpoint","","FederatedTokenFile","File","Gcp","GoogleConfigKey","Hf","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","","Token","","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","","","","as_ref","","","borrow","","","","","borrow_mut","","","","","build_aws","build_azure","build_gcp","build_http","clone","","","","clone_into","","","","clone_to_uninit","","","","default","deref","","","","","deref_mut","","","","","deserialize","","","","drop","","","","","eq","","","","","equivalent","","","","","","","","","","","","file_cache_ttl","fmt","","","","from","","","","","from_str","","","","from_untyped_config","hash","","","","init","","","","","into","","","","","max_retries","serialize","","","","to_owned","","","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_aws","with_azure","with_credential_provider","with_gcp","with_max_retries","read","write","AllColumns","AllColumnsSingle","BatchedCsvReader","CommentPrefix","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","LossyUtf8","Multi","Named","NullValues","OwnedBatchedCsvReader","Single","Utf8","__clone_box","","","","","_csv_read_internal","_with_predicate","batched","batched_borrowed","borrow","","","","","","","","borrow_mut","","","","","","","","buffer","chunk_size","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","columns","comment_prefix","compile","count_rows","count_rows_from_slice","decimal_comma","default","","","deref","","","","","","","","deref_mut","","","","","","","","deserialize","","","","","drop","","","","","","","","dtype_overwrite","encoding","eol_char","eq","","","","","equivalent","","","","","","","","","","","","","","","fields_to_cast","finish","fmt","","","","","from","","","","","","","","","get_parse_options","has_header","hash","","","","","ignore_errors","infer_file_schema","infer_schema_length","init","","","","","","","","into","","","","","","","","into_reader_with_file_handle","low_memory","map_parse_options","missing_is_null","n_rows","n_threads","new","new_from_str","new_multi","new_single","next_batches","","null_values","parse_options","path","projection","quote_char","raise_if_empty","rechunk","row_index","schema","schema_inference","schema_overwrite","separator","serialize","","","","","skip_rows","skip_rows_after_header","to_owned","","","","","truncate_ragged_lines","try_from","","","","","","","","try_into","","","","","","","","try_into_reader_with_file_path","try_parse_dates","type_id","","","","","","","","update_with_inference_result","vzip","","","","","","","","with_chunk_size","with_columns","with_comment_prefix","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_has_header","with_ignore_errors","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_threads","with_null_values","with_parse_options","with_path","with_projection","with_quote_char","with_raise_if_empty","with_rechunk","with_row_index","with_schema","with_schema_overwrite","with_separator","with_skip_rows","with_skip_rows_after_header","with_truncate_ragged_lines","with_try_parse_dates","AllColumns","AllColumnsSingle","Columns","CountLines","NullValuesCompiled","__clone_box","borrow","","borrow_mut","","cast_columns","clone","clone_into","clone_to_uninit","count","deref","","deref_mut","","drop","","find_next","find_starting_point","fmt","from","","init","","into","","new","prepare_csv_schema","read_chunk","to_owned","try_from","","try_into","","type_id","","validate_utf8","vzip","","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","","","","borrow_mut","","","","deref","","","","deref_mut","","","","drop","","","","dtype","from","","","","init","","","","init_buffers","into","","","","into_series","try_from","","","","try_into","","","","type_id","","","","validate_utf8","vzip","","","","buf","time_unit","time_zone","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Always","BatchedWriter","CsvWriter","CsvWriterOptions","Necessary","Never","NonNumeric","QuoteStyle","SerializeOptions","__clone_box","","","batch_size","batched","borrow","","","","","borrow_mut","","","","","clone","","","clone_into","","","clone_to_uninit","","","date_format","datetime_format","default","","","deref","","","","","deref_mut","","","","","deserialize","","","drop","","","","","eq","","","equivalent","","","","","","","","","finish","","float_precision","float_scientific","fmt","","","from","","","","","hash","","","include_bom","","include_header","","init","","","","","into","","","","","line_terminator","maintain_order","n_threads","new","null","quote_char","quote_style","separator","serialize","","","serialize_options","time_format","to_owned","","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_batch_size","with_date_format","with_datetime_format","with_float_precision","with_float_scientific","with_line_terminator","with_null_value","with_quote_char","with_quote_style","with_separator","with_time_format","write_batch","FILE_CACHE","FILE_CACHE_PREFIX","FileCacheEntry","borrow","borrow_mut","deref","deref_mut","drop","from","get_env_file_cache_ttl","init","init_entries_from_uri_list","into","try_from","try_into","try_open_assume_latest","try_open_check_latest","type_id","update_ttl","uri","vzip","merge_sorted_to_schema_order","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","LZ4","ZSTD","__clone_box","","","","arrow_schema","batched","borrow","","","","","","","","","","","borrow_mut","","","","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","compression","count_rows","data","default","","","","deref","","","","","","","","","","","deref_mut","","","","","","","","","","","deserialize","","","drop","","","","","","","","","","","eq","","","equivalent","","","","","","finish","","","","","finish_with_scan_ops","fmt","","","from","","","","","","","","","","","from_uri","hash","","","init","","","","","","","","","","","into","","","","","","","","","","","maintain_order","memory_mapped","metadata","new","","","","","schema","","serialize","","","set_rechunk","","to_owned","","","","to_writer","try_from","","","","","","","","","","","try_into","","","","","","","","","","","type_id","","","","","","","","","","","vzip","","","","","","","","","","","with_columns","","with_compat_level","","with_compression","","","with_extension","with_hive_partition_columns","with_include_file_path","with_n_rows","","with_parallel","with_predicate","with_projection","","","with_row_index","","","with_row_limit","write_batch","write_df_to_file","write_encoded","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","__clone_box","borrow","","","","","borrow_mut","","","","","clone","clone_into","clone_to_uninit","default","deref","","","","","deref_mut","","","","","deserialize","drop","","","","","eq","equivalent","","","finish","","fmt","from","","","","","hash","infer_schema_len","init","","","","","into","","","","","maintain_order","new","","","remove_bom","serialize","set_rechunk","to_owned","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_batch_size","with_ignore_errors","with_json_format","","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","","deref_mut","drop","from","","init","into","to_bytes","to_file","to_memslice","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","_split_at_unchecked","arced","arr_from_iter","","arr_from_iter_with_dtype","","as_any","as_any_mut","borrow","","borrow_mut","","boxed","check_bound","clone","clone_into","clone_to_uninit","count","deref","","deref_mut","","drop","","dtype","eq","","fields","finish","fmt","from","","","from_path","full_null","get_fields","infer_schema_len","init","","into","","into_data","into_iter","iter","len","low_memory","new","","new_empty","new_null","propagate_nulls","set_validity","slice","","slice_typed","slice_typed_unchecked","slice_unchecked","","sliced","sliced_unchecked","split_at_boxed","split_at_boxed_unchecked","take_validity","to_boxed","to_owned","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","try_arr_from_iter","","try_arr_from_iter_with_dtype","","try_from","","try_into","","try_new","type_id","","validity","","values","values_iter","vzip","","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_predicate","with_projection","with_rechunk","with_row_index","with_schema","with_schema_overwrite","with_validity","","with_validity_typed","metadata","read","write","FileMetadata","FileMetadataRef","ParquetStatistics","__clone_box","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","column_order","column_orders","created_by","deref","","deref_mut","","deserialize","distinct_count","drop","","eq","fmt","","from","","","init","","into","","key_value_metadata","","max_row_group_height","max_value","min_value","null_count","num_rows","row_groups","schema","schema_descr","to_owned","try_from","","try_from_thrift","try_into","","type_id","","version","vzip","","Auto","BatchedParquetReader","Columns","None","ParallelStrategy","ParquetAsyncReader","ParquetOptions","ParquetReader","Prefiltered","RowGroups","__clone_box","","_internal","batched","","borrow","","","","","borrow_mut","","","","","clone","","clone_into","","clone_to_uninit","","create_sorting_map","default","deref","","","","","deref_mut","","","","","deserialize","","drop","","","","","eq","","equivalent","","","","","","finish","","finishes_this_batch","fmt","","from","","","","","from_uri","get_metadata","","hash","","init","","","","","into","","","","","is_finished","iter","low_memory","materialize_empty_df","new","","next_batches","num_rows","","parallel","read_parallel","","schema","","","","serialize","","set_low_memory","set_metadata","set_rechunk","","to_owned","","try_from","","","","","try_into","","","","","try_set_sorted_flag","type_id","","","","","use_statistics","","","vzip","","","","","with_arrow_schema_projection","","with_columns","with_hive_partition_columns","","with_include_file_path","","with_predicate","","with_projection","","with_row_index","","with_slice","","Auto","Post","Pre","PrefilterMaskSetting","borrow","borrow_mut","calc_prefilter_cost","deref","deref_mut","drop","ensure_matching_dtypes_if_found","from","init","init_from_env","into","read_this_row_group","should_prefilter","to_deserializer","try_from","try_into","type_id","vzip","BatchedWriter","Brotli","BrotliLevel","Gzip","GzipLevel","Lz4Raw","Lzo","ParquetCompression","ParquetWriteOptions","ParquetWriter","RowGroupIterColumns","Snappy","StatisticsOptions","Uncompressed","Zstd","ZstdLevel","__clone_box","","","","","","batched","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","compression","data_page_size","default","","","deref","","","","","","","","deref_mut","","","","","","","","deserialize","","","","","","distinct_count","drop","","","","","","","","empty","encode_and_compress","eq","","","","","","equivalent","","","","","","","","","","","","","","","","","","finish","","fmt","","","","","","from","","","","","","","","full","get_writer","hash","","","","","","init","","","","","","","","into","","","","","","","","is_empty","is_full","maintain_order","max_value","min_value","new","null_count","row_group_size","serialize","","","","","","set_parallel","statistics","to_owned","","","","","","to_writer","try_from","","","","","","","","try_into","","","","","","","","try_new","","","type_id","","","","","","","","vzip","","","","","","","","with_compression","with_data_page_size","with_row_group_size","with_statistics","write_batch","write_df_to_file","write_row_groups","write_partitioned_dataset","POLARS_TEMP_DIR_BASE_PATH","expand_paths","expand_paths_hive","expanded_from_single_directory","get_glob_start_idx","is_cloud_url","resolve_homedir","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","spawn_blocking","spawn_rayon","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","__clone_box","","apply_predicate","as_stats_evaluator","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","column_stats","deref","","deref_mut","","deserialize","","drop","","dtype","evaluate_io","field_name","fmt","","from","","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","","into","","live_variables","new","","null_count","num_rows","schema","serialize","","should_read","take_indices","to_max","to_min","to_min_max","to_owned","","try_from","","try_into","","type_id","","vzip","","with_schema","SerReader","SerWriter","cloud","finish","","new","","set_rechunk","","","write_partitioned_dataset","BOOLEAN_RE","FLOAT_RE","FLOAT_RE_DECIMAL","INTEGER_RE","URL_ENCODE_CHAR_SET","apply_projection","byte_source","columns_to_projection","compression","get_reader_bytes","materialize_projection","overwrite_schema","slice","ByteSource","Cloud","DynByteSource","DynByteSourceBuilder","MemSlice","MemSliceByteSource","Mmap","ObjectStore","ObjectStoreByteSource","__clone_box","borrow","","","","borrow_mut","","","","clone","clone_into","clone_to_uninit","default","deref","","","","deref_mut","","","","drop","","","","fmt","from","","","","","","","get_range","","","","get_ranges","","","","get_size","","","","init","","","","into","","","","to_owned","try_build_from_path","try_from","","","","try_into","","","","type_id","","","","variant_name","vzip","","","","GZIP","SupportedCompression","ZLIB","ZSTD","borrow","borrow_mut","check","deref","deref_mut","drop","from","init","into","maybe_decompress_bytes","try_from","try_into","type_id","vzip","After","Before","Overlapping","SplitSlicePosition","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","init","into","split_slice_at_file","","try_from","try_into","type_id","vzip"],"q":[[0,"polars_io"],[86,"polars_io::avro"],[153,"polars_io::cloud"],[227,"polars_io::cloud::credential_provider"],[372,"polars_io::cloud::options"],[560,"polars_io::csv"],[562,"polars_io::csv::read"],[823,"polars_io::csv::read::_csv_read_internal"],[866,"polars_io::csv::read::buffer"],[941,"polars_io::csv::read::buffer::Buffer"],[944,"polars_io::csv::read::schema_inference"],[971,"polars_io::csv::write"],[1116,"polars_io::file_cache"],[1137,"polars_io::hive"],[1138,"polars_io::ipc"],[1377,"polars_io::json"],[1475,"polars_io::mmap"],[1496,"polars_io::ndjson"],[1498,"polars_io::ndjson::core"],[1601,"polars_io::parquet"],[1604,"polars_io::parquet::metadata"],[1657,"polars_io::parquet::read"],[1803,"polars_io::parquet::read::_internal"],[1825,"polars_io::parquet::write"],[2049,"polars_io::partition"],[2050,"polars_io::path_utils"],[2057,"polars_io::pl_async"],[2080,"polars_io::predicates"],[2148,"polars_io::prelude"],[2159,"polars_io::utils"],[2172,"polars_io::utils::byte_source"],[2253,"polars_io::utils::compression"],[2271,"polars_io::utils::slice"],[2290,"dyn_clone::sealed"],[2291,"polars_io::options"],[2292,"core::result"],[2293,"serde::de"],[2294,"polars_io::shared"],[2295,"polars_core::frame"],[2296,"polars_error"],[2297,"core::fmt"],[2298,"core::hash"],[2299,"std::io"],[2300,"polars_arrow::record_batch"],[2301,"core::option"],[2302,"serde::ser"],[2303,"core::any"],[2304,"polars_io::avro::read"],[2305,"polars_arrow::datatypes::schema"],[2306,"polars_io::avro::write"],[2307,"polars_core::schema"],[2308,"alloc::string"],[2309,"alloc::vec"],[2310,"polars_io::cloud::glob"],[2311,"object_store"],[2312,"alloc::sync"],[2313,"polars_io::cloud::polars_object_store"],[2314,"object_store::path"],[2315,"tokio::fs::file"],[2316,"polars_io::cloud::adaptors"],[2317,"std::io::error"],[2318,"crossterm::command"],[2319,"url"],[2320,"core::ops::range"],[2321,"bytes::bytes"],[2322,"polars_utils::aliases"],[2323,"core::convert"],[2324,"core::cmp"],[2325,"core::ops::function"],[2326,"polars_parquet_format::thrift::varint::decode"],[2327,"object_store::aws::credential"],[2328,"object_store::azure::credential"],[2329,"object_store::gcp::credential"],[2330,"core::future::future"],[2331,"alloc::boxed"],[2332,"core::pin"],[2333,"core::marker"],[2334,"polars_utils::python_function"],[2335,"pyo3::instance"],[2336,"object_store::aws"],[2337,"object_store::azure"],[2338,"object_store::gcp"],[2339,"object_store::aws::builder"],[2340,"object_store::azure::builder"],[2341,"object_store::gcp::builder"],[2342,"core::iter::traits::collect"],[2343,"polars_io::csv::read::reader"],[2344,"polars_io::csv::read::read_impl::batched"],[2345,"polars_io::csv::read::options"],[2346,"std::path"],[2347,"polars_utils::pl_str"],[2348,"std::fs"],[2349,"polars_core::datatypes::dtype"],[2350,"polars_core::datatypes::field"],[2351,"polars_io::csv::read::parser"],[2352,"polars_core::series"],[2353,"polars_io::csv::write::writer"],[2354,"polars_io::csv::write::options"],[2355,"core::num::nonzero"],[2356,"polars_io::file_cache::entry"],[2357,"core::iter::traits::exact_size"],[2358,"polars_schema::schema"],[2359,"polars_core::frame::column"],[2360,"polars_io::ipc::ipc_stream"],[2361,"polars_io::ipc::write"],[2362,"polars_io::ipc::ipc_file"],[2363,"polars_io::ipc::ipc_reader_async"],[2364,"polars_arrow::io::ipc::read::file"],[2365,"polars_arrow::io::ipc::write::common"],[2366,"polars_utils::mmap::private"],[2367,"polars_arrow::array::struct_"],[2368,"polars_arrow::array"],[2369,"polars_arrow::datatypes"],[2370,"polars_arrow::datatypes::field"],[2371,"polars_arrow::array::growable::structure"],[2372,"polars_arrow::bitmap::immutable"],[2373,"polars_arrow::scalar"],[2374,"polars_arrow::array::struct_::iterator"],[2375,"polars_arrow::bitmap::utils::iterator"],[2376,"polars_arrow::bitmap::utils::zip_validity"],[2377,"polars_parquet::parquet::metadata::file_metadata"],[2378,"polars_parquet::parquet::metadata::column_order"],[2379,"polars_parquet::parquet::metadata::column_chunk_metadata"],[2380,"polars_parquet::arrow::read::statistics"],[2381,"polars_parquet_format::parquet_format"],[2382,"polars_parquet::parquet::metadata::schema_descriptor"],[2383,"polars_parquet::parquet::error"],[2384,"polars_io::parquet::read::reader"],[2385,"polars_io::parquet::read::read_impl"],[2386,"polars_io::parquet::read::options"],[2387,"polars_parquet::parquet::metadata::row_metadata"],[2388,"polars_core::series::series_trait"],[2389,"polars_parquet::arrow::read::deserialize::utils::filter"],[2390,"polars_io::parquet::write::writer"],[2391,"polars_io::parquet::write::batched_writer"],[2392,"polars_parquet::arrow::write"],[2393,"polars_io::parquet::write::options"],[2394,"polars_parquet::parquet::write"],[2395,"core::iter::traits::iterator"],[2396,"polars_parquet::arrow::write::file"],[2397,"std::sync::mutex"],[2398,"tokio::runtime::task::join"],[2399,"avro_schema::file"],[2400,"polars_io::cloud::object_store_setup"],[2401,"polars_io::csv::read::read_impl"],[2402,"polars_io::file_cache::cache"],[2403,"polars_io::file_cache::utils"],[2404,"polars_io::parquet::read::utils"],[2405,"polars_io::parquet::read::predicates"],[2406,"polars_io::parquet::read::mmap"],[2407,"polars_io::utils::other"]],"i":"``````jl``1010101010``010101010010111000`AfAl323232`23232```3`10Bh4``````343434343343`43Cb````Cj0000Cd0Cl2102222102102102222210210221021021011210210210210210101````EbEhDj21020`222`010210221102010102102022`21021021021``0101210210210210211HfAJd`0`1`H`1``1``020HbHh3Hd3251403251323232403251403251340325103251000333222555111032514000325133332403251403251In43043043114431514362514362514362514362JhJf1`Jj2Jl0`21223133``2232223223300`00223332232112323233322Dh42342301423014200003042304230420301423014230423014230142333000444222030423014231420304230142301420304230423014230142301423014200000``Lj0``````LfLh2``01LbLd324`Kf00L`Kn24365710243657`4436574365743657437``34361024365710243657436571024365743343657444333666555777424365710243655744436574`41024365710243657444344255510344434444`4343657444365731024365710243657431024365741024365744334334444344344434444434433Ll00``0Ml101`11100101010`10101010``1010101`01Mn`0`00`0000000000000`00AJfAJhAJj32103210321032103321032103`21033210321032103`2103AJl00`Mf000000000`0000``000000000Nn```000``NjNl21Nf0Nh324103243243243242232410324103243241032432433322244410223241032432413131032410324231122223243232410324103241032410324111111111110```Od00000`0`000000000````````````A@h0A@bA@dA@f3OlOnAAbA@j3AAdAA`4A@`987:4362150987:987:987:987:733187:4362150987:4362150987:97:4362150987:97:777:::46250497:4362150987:397:4362150987:4362150987:743462154697:46987:74362150987:4362150987:4362150987:4362150987:462521514446584684688070`ABd`0```AAl1AAnABbAB`342103333342103421033421033333203421033042103421033210`3034210342103421034210300200001Nd`0`0000000000Kj011111````ABj00000000ACb1011111100101011111010110110010111110011111111111111111111111111010110111110100000000000111``````ADdADh1011111110101`0010010010101111000111110110101101AEn`00````00AEl1`AEfAEjAEh213402134343434`402134021343402134343334442103402134121340213402134003`020213210213342221340213402134`0213421302134212212121212121AFh00`00`000`0000`0`0000`AGd`0`00````0`00`AG`AGb2AGfAGhAGjAFlAFn16574320165743265743265743265743255657016574320165743265743260165743260657432666555777444333222016574320165743260657432016574320165743266566165657432156574325016574320165743243201657432016574321111050``````````AHh0000000`00AHj11111`11`````AI`AIb`Kh21212121211212121212022121222221212102121121AHn233332323232322```AfAl10111```````````````AIh``0`AIf0`0AIjAIl321032222310321032103221033332AIn21402140214214321433321432143214342143AJ``00000000000`0000AJb00`000000000`00000","f":"``````{{bd}f}0``{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{j}}}j}{{{b{l}}}l}{{b{b{hc}}}f{}}0{bf}0``{{}l}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{j}}}Ab}{c{{A`{l}}}Ab}{nf}0`{{{b{j}}{b{j}}}Ad}{{{b{l}}{b{l}}}Ad}{{b{b{c}}}Ad{}}00000`{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{{{b{j}}{b{hAn}}}B`}{{{b{l}}{b{hAn}}}B`}{cc{}}0{{{b{j}}{b{hc}}}fBb}{{{b{l}}{b{hc}}}fBb}``{{}n}0{{}c{}}0`````{cAfBd}{cAlBf}{{{b{hBh}}}{{Aj{{Bl{Bj}}}}}}````````{{{b{j}}c}A`Bn}{{{b{l}}c}A`Bn}{bc{}}0{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0`{bC`}0`99{{{b{Cb}}Ahc}{{Aj{f}}}Bf}````````{{bd}f}{{{b{h{Cd{c}}}}}{{Aj{Cf}}}{BdCh}}{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00{{{b{Cj}}}Cj}{{b{b{hc}}}f{}}{bf}{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{nf}00{{{b{Cj}}{b{Cj}}}Ad}{{b{b{c}}}Ad{}}00{{{Cd{c}}}{{Aj{Ah}}}{BdCh}}{{{b{h{Cl{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{Cj}}{b{hAn}}}{{A`{fCn}}}}{cc{}}00{{{b{Cj}}{b{hc}}}fBb}{{}n}00{{}c{}}00{c{{Cd{c}}}{BdCh}}{c{{Cl{c}}}Bf}{{{b{h{Cd{c}}}}}{{Aj{D`}}}{BdCh}}{{{Cd{c}}Ad}{{Cd{c}}}{BdCh}}{bc{}}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{bC`}00888{{{Cd{c}}{Bl{{Dd{Db}}}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}{Bl{Cj}}}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{n}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}Db}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{{Dd{n}}}}}{{Cd{c}}}{BdCh}}````{{bd}f}{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00`{{{b{Df}}{Bl{{b{Dh}}}}Ad}{{Aj{{E`{Dj{Dn{Dl}}}}}}}}{{{b{Eb}}}Eb}{{b{b{hc}}}f{}}{bf}`{{}Dj}{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{{{b{Eb}}{b{Ed}}{b{hEf}}}{{Aj{f}}}}{nf}{{{b{hEh}}}f}11{{{b{Dj}}{b{Dj}}}Ad}{{{b{h}}c}{{A`{{b{he}}Ej}}}El{}}`{{{b{hEh}}}{{En{f}}}}{{{b{Dj}}{b{hAn}}}B`}{{{b{Eb}}{b{hAn}}}B`}{cc{}}00{{{b{F`}}Ad}{{Aj{Dj}}}}{{{b{Eb}}{b{Ed}}{Fb{n}}}{{Aj{Fd}}}}{{{b{Eb}}{b{Ed}}{b{h{Ff{{Fb{n}}}}}}}{{Aj{{Fh{ce}}}}}{{Fn{n}{{Fj{{`{Fl}}}}}}G`Gb}{{Gd{Fd}}}}{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{{Dd{Db}}}}}}{{{b{Eb}}{b{Ed}}}{{Aj{Gf}}}}{{}n}00{{}c{}}00{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{Eh}}}}{{{b{Df}}Ad}{{Aj{Dj}}}}{{{Dn{Dl}}}Eb}{{{Dn{Dl}}Ed}{{Aj{Eh}}}}{{{b{Df}}}{{Aj{Ed}}}}``{{{b{h}}c}{{A`{{b{he}}Ej}}}El{}}`{{{b{h}}g}{{A`{eEj}}}{}{}{{Gj{{b{hc}}}{{Gh{e}}}}}}{bc{}}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{bC`}00;;;{{{b{hEh}}{b{{Ff{Gl}}}}}{{En{n}}}}{{{b{h}}c}{{A`{nEj}}}Gn}````````````````{{bd}f}0`{b{{b{c}}}{}}00000{{{b{h}}}{{b{hc}}}{}}00000{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{b{b{hc}}}f{}}0{bf}0{n{{b{c}}}{}}00000{n{{b{hc}}}{}}00000{c{{A`{H`}}}Ab}{nf}00000{{{b{Hd}}{b{Hd}}}Ad}{{{b{H`}}{b{H`}}}Ad}{{{b{Hb}}{b{Hb}}}Ad}{{{b{Hf}}{b{Hf}}}Ad}{{{b{Hh}}{b{Hh}}}Ad}{{b{b{c}}}Ad{}}00000000000000{{{b{Hd}}{b{hAn}}}{{A`{fCn}}}}{{{b{H`}}{b{hAn}}}B`}{{{b{Hb}}{b{hAn}}}B`}{{{b{Hf}}{b{hAn}}}{{A`{fCn}}}}{{{b{Hh}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0{HjHd}{HlHd}2222{cH`{{Id{}{{Gh{{Ib{{I`{Hn}}}}}}}}IfIh}}{IjH`}{IlH`}{{{b{H`}}{b{hc}}}fBb}{{{b{Hb}}{b{hc}}}fBb}{{}n}00000{{}c{}}00000{InJ`}{H`J`}{HbJ`}{InJb}{H`Jb}{HbJb}{InJd}{H`Jd}{HbJd}``{{{b{H`}}c}A`Bn}{bc{}}0`{c{{A`{e}}}{}{}}00000{{}{{A`{c}}}{}}00000{bC`}00000>>>>>>```````````````````````````````````````````````````````{{bd}f}000{{{b{Jf}}}{{b{Df}}}}{{{b{Jh}}}{{b{Df}}}}{{{b{Jj}}}{{b{Df}}}}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{Dh}}{b{Df}}}{{Aj{{`{Dl}}}}}}000{{{b{Jf}}}Jf}{{{b{Dh}}}Dh}{{{b{Jh}}}Jh}{{{b{Jj}}}Jj}{{b{b{hc}}}f{}}000{bf}000{{}Dh}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Jf}}}Ab}{c{{A`{Dh}}}Ab}{c{{A`{Jh}}}Ab}{c{{A`{Jj}}}Ab}{nf}0000{{{b{Jf}}{b{Jf}}}Ad}{{{b{Dh}}{b{Dh}}}Ad}{{{b{Jl}}{b{Jl}}}Ad}{{{b{Jh}}{b{Jh}}}Ad}{{{b{Jj}}{b{Jj}}}Ad}{{b{b{c}}}Ad{}}00000000000`{{{b{Jf}}{b{hAn}}}{{A`{fCn}}}}{{{b{Dh}}{b{hAn}}}B`}{{{b{Jh}}{b{hAn}}}{{A`{fCn}}}}{{{b{Jj}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0000{{{b{Df}}}{{A`{Jf}}}}{{{b{Df}}}{{A`{Jlc}}}{}}{{{b{Df}}}{{A`{Jh}}}}{{{b{Df}}}{{A`{Jj}}}}{{{b{Df}}g}{{Aj{Dh}}}{{Jn{Df}}}{{K`{Db}}}{{Kd{}{{Kb{{E`{ce}}}}}}}}{{{b{Jf}}{b{hc}}}fBb}{{{b{Dh}}{b{hc}}}fBb}{{{b{Jh}}{b{hc}}}fBb}{{{b{Jj}}{b{hc}}}fBb}{{}n}0000{{}c{}}0000`{{{b{Jf}}c}A`Bn}{{{b{Dh}}c}A`Bn}{{{b{Jh}}c}A`Bn}{{{b{Jj}}c}A`Bn}{bc{}}000{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}000088888{{Dhe}Dh{{K`{Db}}}{{Kd{}{{Kb{{E`{Jfc}}}}}}}}{{Dhe}Dh{{K`{Db}}}{{Kd{}{{Kb{{E`{Jhc}}}}}}}}{{Dh{Bl{H`}}}Dh}{{Dhe}Dh{{K`{Db}}}{{Kd{}{{Kb{{E`{Jjc}}}}}}}}{{Dhn}Dh}`````````````````{{bd}f}0000`{{{Kf{c}}{Bl{{Dn{Kh}}}}}{{Kf{c}}}Kj}{{{Kf{{I`{Kj}}}}{Bl{Kl}}}{{Aj{Kn}}}}{{{b{h{Kf{c}}}}}{{Aj{L`}}}Kj}{b{{b{c}}}{}}0000000{{{b{h}}}{{b{hc}}}{}}0000000``{{{b{Lb}}}Lb}{{{b{Ld}}}Ld}{{{b{Lf}}}Lf}{{{b{Lh}}}Lh}{{{b{Lj}}}Lj}{{b{b{hc}}}f{}}0000{bf}0000``{{Lj{b{D`}}}{{Aj{Ll}}}}{{{b{Ln}}Gl{Bl{Gl}}{Bl{{b{Lh}}}}GlAd}{{Aj{n}}}}{{{b{{Ff{Gl}}}}Gl{Bl{Gl}}{Bl{{b{Lh}}}}GlAd}{{Aj{n}}}}`{{}Lb}{{}Ld}{{}Lf}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{Lb}}}Ab}{c{{A`{Ld}}}Ab}{c{{A`{Lf}}}Ab}{c{{A`{Lh}}}Ab}{c{{A`{Lj}}}Ab}{nf}0000000```{{{b{Lb}}{b{Lb}}}Ad}{{{b{Ld}}{b{Ld}}}Ad}{{{b{Lf}}{b{Lf}}}Ad}{{{b{Lh}}{b{Lh}}}Ad}{{{b{Lj}}{b{Lj}}}Ad}{{b{b{c}}}Ad{}}00000000000000`{{{Kf{c}}}{{Aj{Ah}}}Kj}{{{b{Lb}}{b{hAn}}}B`}{{{b{Ld}}{b{hAn}}}B`}{{{b{Lf}}{b{hAn}}}B`}{{{b{Lh}}{b{hAn}}}B`}{{{b{Lj}}{b{hAn}}}B`}{cc{}}00000{{{b{Df}}}Lh}11{{{b{Lb}}}{{Dn{Ld}}}}`{{{b{Lb}}{b{hc}}}fBb}{{{b{Ld}}{b{hc}}}fBb}{{{b{Lf}}{b{hc}}}fBb}{{{b{Lh}}{b{hc}}}fBb}{{{b{Lj}}{b{hc}}}fBb}```{{}n}0000000{{}c{}}0000000{{Lbc}{{Kf{c}}}Kj}`{{Lbc}Lb{{Id{Ld}{{Gh{Ld}}}}}}```{c{{Kf{c}}}Kj};{M`Lh}{GlLh}{{{b{hL`}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{hKn}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}````````````{{{b{Lb}}c}A`Bn}{{{b{Ld}}c}A`Bn}{{{b{Lf}}c}A`Bn}{{{b{Lh}}c}A`Bn}{{{b{Lj}}c}A`Bn}``{bc{}}0000`{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{{Lb{Bl{Mb}}}{{Aj{{Kf{Md}}}}}}`{bC`}0000000{{{b{hLb}}{b{Mf}}}f}{{}c{}}0000000{{Lbn}Lb}{{Lb{Bl{{Dn{{Ff{M`}}}}}}}Lb}{{Ld{Bl{c}}}Ld{{K`{Lh}}}}{{LdAd}Ld}{{Lb{Bl{{Dn{{Dd{Mh}}}}}}}Lb}{{LdLf}Ld}{{LdGl}Ld}{{LbAd}Lb}0{{Lb{Bl{n}}}Lb}1500{{Ld{Bl{Lj}}}Ld}{{LbLd}Lb}{{Lb{Bl{c}}}Lb{{K`{Mb}}}}{{Lb{Bl{{Dn{{Dd{n}}}}}}}Lb}{{Ld{Bl{Gl}}}Ld}66{{Lb{Bl{j}}}Lb}{{Lb{Bl{Kl}}}Lb}09??<<`````{{bd}f}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{hAh}}{b{{Ff{Mj}}}}AdAd}{{Aj{f}}}}{{{b{Ll}}}Ll}{{b{b{hc}}}f{}}{bf}{{{b{Ml}}{b{{Ff{Gl}}}}}{{E`{nn}}}}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{nf}0{{{b{Ml}}{b{{Ff{Gl}}}}{b{hn}}}{{E`{nn}}}}{{{b{{Ff{Gl}}}}{Bl{Gl}}Glnnn{Bl{{b{Lh}}}}Ad}{{Aj{n}}}}{{{b{Ll}}{b{hAn}}}B`}{cc{}}0{{}n}0{{}c{}}0{{{Bl{Gl}}Gl}Ml}{{{b{hKl}}{b{h{Dd{Mj}}}}}{{Aj{Ad}}}}{{{b{{Ff{Gl}}}}Gl{b{D`}}Ad{b{{Ff{n}}}}n{Bl{Gl}}Gl{Bl{{b{Lh}}}}nLf{Bl{{b{Ll}}}}AdAdnn{Bl{n}}Ad}{{Aj{Ah}}}}{bc{}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{bC`}0`77`````````````````````{{{b{hMn}}{b{{Ff{Gl}}}}AdAdAd}{{Aj{f}}}}{{{b{hMn}}Ad}f}{b{{b{c}}}{}}000{{{b{h}}}{{b{hc}}}{}}000{n{{b{c}}}{}}000{n{{b{hc}}}{}}000{nf}000{{{b{Mn}}}Mh}{cc{}}000{{}n}000{{{b{{Ff{n}}}}n{b{D`}}{Bl{Gl}}LfAd}{{Aj{{Dd{Mn}}}}}}{{}c{}}000{Mn{{Aj{N`}}}}????>>>>===={{{b{{Ff{Gl}}}}}Ad}2222````{{bd}f}<;{{{b{Mf}}}Mf}{{b{b{hc}}}f{}}{bf}{{}Mf}>=<{{{b{{Nb{Mh}}}}}Mh}{{{b{Mf}}{b{hAn}}}B`}<{{{b{Mf}}}n}{{{b{Mf}}}Kl}{{{b{Df}}AdAd}Mh}{{{b{Nd}}Gl{Bl{n}}Ad{Bl{{b{D`}}}}nn{Bl{{b{Lh}}}}{Bl{Gl}}Gl{Bl{{b{Lj}}}}AdAd{b{h{Bl{n}}}}Ad}{{Aj{{E`{D`nn}}}}}}?={bc{}}{c{{A`{e}}}{}{}}{{{b{Nd}}{b{Lb}}}{{Aj{Mf}}}}{{}{{A`{c}}}{}}{bC`}{{}c{}}{{MfKl}Mf}`````````{{bd}f}00`{{{Nf{c}}{b{D`}}}{{Aj{{Nh{c}}}}}Bf}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{Nj}}}Nj}{{{b{Nl}}}Nl}{{{b{Nn}}}Nn}{{b{b{hc}}}f{}}00{bf}00``{{}Nj}{{}Nl}{{}Nn}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Nj}}}Ab}{c{{A`{Nl}}}Ab}{c{{A`{Nn}}}Ab}{nf}0000{{{b{Nj}}{b{Nj}}}Ad}{{{b{Nl}}{b{Nl}}}Ad}{{{b{Nn}}{b{Nn}}}Ad}{{b{b{c}}}Ad{}}00000000{{{b{h{Nf{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Nh{c}}}}}{{Aj{f}}}Bf}``{{{b{Nj}}{b{hAn}}}B`}{{{b{Nl}}{b{hAn}}}B`}{{{b{Nn}}{b{hAn}}}B`}{cc{}}0000{{{b{Nj}}{b{hc}}}fBb}{{{b{Nl}}{b{hc}}}fBb}{{{b{Nn}}{b{hc}}}fBb}{{{Nf{c}}Ad}{{Nf{c}}}Bf}`0`{{}n}0000{{}c{}}0000``{{{Nf{c}}n}{{Nf{c}}}Bf}{c{{Nf{c}}}Bf}````{{{b{Nj}}c}A`Bn}{{{b{Nl}}c}A`Bn}{{{b{Nn}}c}A`Bn}``{bc{}}00{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}000099999{{{Nf{c}}O`}{{Nf{c}}}Bf}{{{Nf{c}}{Bl{Db}}}{{Nf{c}}}Bf}0{{{Nf{c}}{Bl{n}}}{{Nf{c}}}Bf}{{{Nf{c}}{Bl{Ad}}}{{Nf{c}}}Bf}{{{Nf{c}}Db}{{Nf{c}}}Bf}0{{{Nf{c}}Gl}{{Nf{c}}}Bf}{{{Nf{c}}Nn}{{Nf{c}}}Bf}15{{{b{h{Nh{c}}}}{b{Ah}}}{{Aj{f}}}Bf}```{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}Ob}{{}n}{{{b{{Ff{{Dn{Df}}}}}}{Bl{{b{Dh}}}}}{{Aj{{Dd{{Dn{Od}}}}}}}}{{}c{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{{{b{Od}}}{{Aj{Md}}}}0{bC`}{{{b{Od}}Ob}f}{{{b{Od}}}{{b{{Dn{Df}}}}}}6{{{b{hOf}}{b{hOf}}{b{{Oh{c}}}}{b{h{Dd{Oj}}}}}f{}}`````````````{{bd}f}000{{{b{h{Ol{c}}}}}{{Aj{Cf}}}Bd}{{{On{c}}{b{D`}}}{{Aj{{A@`{c}}}}}Bf}{b{{b{c}}}{}}0000000000{{{b{h}}}{{b{hc}}}{}}0000000000{{{b{A@b}}}A@b}{{{b{A@d}}}A@d}{{{b{A@f}}}A@f}{{{b{A@h}}}A@h}{{b{b{hc}}}f{}}000{bf}000`{{{b{A@j}}{Bl{{b{A@l}}}}}{{Aj{A@n}}}}{{{b{A@j}}{Bl{{b{A@l}}}}A@dAd}{{Aj{Ah}}}}{{}AA`}{{}A@d}{{}A@f}{{}A@h}{n{{b{c}}}{}}0000000000{n{{b{hc}}}{}}0000000000{c{{A`{A@b}}}Ab}{c{{A`{A@f}}}Ab}{c{{A`{A@h}}}Ab}{nf}0000000000{{{b{A@b}}{b{A@b}}}Ad}{{{b{A@f}}{b{A@f}}}Ad}{{{b{A@h}}{b{A@h}}}Ad}{{b{b{c}}}Ad{}}00000{{{AAb{c}}}{{Aj{Ah}}}Kj}{{{Ol{c}}}{{Aj{Ah}}}Bd}{{{b{h{AAd{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{On{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{A@`{c}}}}}{{Aj{f}}}Bf}{{{AAb{c}}{Bl{{Dn{Kh}}}}Ad}{{Aj{Ah}}}Kj}{{{b{A@b}}{b{hAn}}}B`}{{{b{A@f}}{b{hAn}}}B`}{{{b{A@h}}{b{hAn}}}B`}{cc{}}0000000000{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{A@j}}}}{{{b{A@b}}{b{hc}}}fBb}{{{b{A@f}}{b{hc}}}fBb}{{{b{A@h}}{b{hc}}}fBb}{{}n}0000000000{{}c{}}0000000000`{{{AAb{c}}{Bl{Mb}}}{{AAb{c}}}Kj}{{{b{A@j}}}{{Aj{A@l}}}}{c{{AAb{c}}}Kj}{c{{Ol{c}}}Bd}{c{{AAd{c}}}Bf}{{}AA`}{c{{On{c}}}Bf}{{{b{h{AAb{c}}}}}{{Aj{AAf}}}Kj}{{{b{h{Ol{c}}}}}{{Aj{D`}}}Bd}{{{b{A@b}}c}A`Bn}{{{b{A@f}}c}A`Bn}{{{b{A@h}}c}A`Bn}{{{AAb{c}}Ad}{{AAb{c}}}Kj}{{{Ol{c}}Ad}{{Ol{c}}}Bd}{bc{}}000{{{b{A@f}}c}{{On{c}}}Bf}{c{{A`{e}}}{}{}}0000000000{{}{{A`{c}}}{}}0000000000{bC`}0000000000{{}c{}}0000000000{{{AAb{c}}{Bl{{Dd{Db}}}}}{{AAb{c}}}Kj}{{{Ol{c}}{Bl{{Dd{Db}}}}}{{Ol{c}}}Bd}{{{AAd{c}}AAh}{{AAd{c}}}{}}{{{On{c}}AAh}{{On{c}}}Bf}{{{AAd{c}}{Bl{A@h}}}{{AAd{c}}}{}}{{AA`{Bl{A@h}}}AA`}{{{On{c}}{Bl{A@h}}}{{On{c}}}Bf}{{AA`Mb}AA`}{{{AAb{c}}{Bl{{Dd{N`}}}}}{{AAb{c}}}Kj}{{{AAb{c}}{Bl{{E`{M`{Dn{Df}}}}}}}{{AAb{c}}}Kj}{{{AAb{c}}{Bl{n}}}{{AAb{c}}}Kj}{{{Ol{c}}{Bl{n}}}{{Ol{c}}}Bd}{{{On{c}}Ad}{{On{c}}}Bf}{{A@dc}A@d{{K`{{Bl{{Dn{Kh}}}}}}}}{{{AAb{c}}{Bl{{Dd{n}}}}}{{AAb{c}}}Kj}{{{Ol{c}}{Bl{{Dd{n}}}}}{{Ol{c}}}Bd}{{A@d{Bl{{Dn{{Ff{M`}}}}}}}A@d}{{{AAb{c}}{Bl{j}}}{{AAb{c}}}Kj}{{{Ol{c}}{Bl{j}}}{{Ol{c}}}Bd}{{A@dc}A@d{{K`{{Bl{j}}}}}}{{A@dc}A@d{{K`{{Bl{n}}}}}}{{{b{h{A@`{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{A@f}}Ahc}{{Aj{f}}}Bf}{{{b{h{A@`{c}}}}{b{{Ff{AAj}}}}{b{AAj}}}{{Aj{f}}}Bf}```````{{bd}f}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{AAl}}}AAl}{{b{b{hc}}}f{}}{bf}{{}AAl}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{AAl}}}Ab}{nf}0000{{{b{AAl}}{b{AAl}}}Ad}{{b{b{c}}}Ad{}}00{{{b{h{AAn{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{AB`{c}}}{{Aj{Ah}}}Kj}{{{b{AAl}}{b{hAn}}}B`}{cc{}}0000{{{b{AAl}}{b{hc}}}fBb}{{{AB`{c}}{Bl{O`}}}{{AB`{c}}}Kj}{{}n}0000{{}c{}}0000`{c{{AAn{c}}}Bf}{c{{ABb{c}}}Bf}{c{{AB`{c}}}Kj}{{{b{{Ff{Gl}}}}}{{Aj{{b{{Ff{Gl}}}}}}}}{{{b{AAl}}c}A`Bn}{{{AB`{c}}Ad}{{AB`{c}}}Kj}{bc{}}{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}0000:::::{{{AB`{c}}O`}{{AB`{c}}}Kj}5{{{AAn{c}}ABd}{{AAn{c}}}Bf}{{{AB`{c}}ABd}{{AB`{c}}}Kj}{{{AB`{c}}{Bl{{Dd{M`}}}}}{{AB`{c}}}Kj}{{{AB`{c}}Kl}{{AB`{c}}}Kj}{{{AB`{c}}{b{D`}}}{{AB`{c}}}Kj}{{{b{h{ABb{c}}}}{b{Ah}}}{{Aj{f}}}Bf}````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{Nd}}}{{b{{Ff{Gl}}}}}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{{b{hc}}}NdKj}{{}n}{{}c{}}{{{b{Kj}}}{{Bl{{b{{Ff{Gl}}}}}}}}{{{b{Kj}}}{{Bl{{b{Md}}}}}}{{{b{Nd}}}ABf}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}6`{{{b{hc}}{Bl{O`}}}{{Aj{D`}}}ABh}``{{bd}f}{{{b{ABj}}n}{{E`{ABjABj}}}}{ABj{{Dn{ABl}}}}{cABj{{Kd{}{{Kb{f}}}}}}{cABj{{Kd{}{{Kb{{Bl{f}}}}}}}}{{ABnc}ABj{{Kd{}{{Kb{{Bl{f}}}}}}}}{{ABnc}ABj{{Kd{}{{Kb{f}}}}}}{{{b{ABj}}}{{b{AC`}}}}{{{b{hABj}}}{{b{hAC`}}}}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{ABj{{I`{ABl}}}}{{{b{ABj}}n}Ad}{{{b{ABj}}}ABj}{{b{b{hc}}}f{}}{bf}{{{ACb{c}}}{{Aj{n}}}Kj}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{nf}0{{{b{ABj}}}{{b{ABn}}}}{{{b{ABj}}{b{ABj}}}Ad}{{{b{ABj}}{b{{b{ABl}}}}}Ad}{{{b{ABj}}}{{b{{Ff{ACd}}}}}}{{{ACb{c}}}{{Aj{Ah}}}Kj}{{{b{ABj}}{b{hAn}}}{{A`{fCn}}}}{cc{}}{ACfABj}1{c{{Aj{{ACb{Md}}}}}{{K`{Mb}}}}{{nABn}ABj}{{{b{ABn}}}{{b{{Ff{ACd}}}}}}{{{ACb{c}}{Bl{O`}}}{{ACb{c}}}Kj}{{}n}0{{}c{}}0{ABj{{E`{{Dd{ACd}}n{Dd{{I`{ABl}}}}{Bl{ACh}}}}}}{{{b{ABj}}}}{{{b{ABj}}}{{AD`{{Dd{{I`{ACj}}}}AClACn}}}}{{{b{ABj}}}n}{{{ACb{c}}Ad}{{ACb{c}}}Kj}{c{{ACb{c}}}Kj}{{ABnn{Dd{{I`{ABl}}}}{Bl{ACh}}}ABj}{ABnABj}{{ABnn}ABj}{{{b{ABj}}}ABj}{{{b{hABj}}{Bl{ACh}}}f}{{{b{hABj}}nn}f}0{{bnn}c{}}011{{ABjnn}ABj}0{{{b{ABj}}n}{{E`{{I`{ABl}}{I`{ABl}}}}}}0{{{b{hABj}}}{{Bl{ACh}}}}{{{b{ABj}}}{{I`{ABl}}}}{bc{}}{{{b{ABj}}{b{ABj}}}ACh}{{{b{ABj}}b}ACh}10{e{{A`{ABjc}}}{}{{Kd{}{{Kb{{A`{fc}}}}}}}}{e{{A`{ABjc}}}{}{{Kd{}{{Kb{{A`{{Bl{f}}c}}}}}}}}{{ABne}{{A`{ABjc}}}{}{{Kd{}{{Kb{{A`{{Bl{f}}c}}}}}}}}{{ABne}{{A`{ABjc}}}{}{{Kd{}{{Kb{{A`{fc}}}}}}}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{{ABnn{Dd{{I`{ABl}}}}{Bl{ACh}}}{{A`{ABjADb}}}}{bC`}0{{{b{ABj}}}{{Bl{{b{ACh}}}}}}0{{{b{ABj}}}{{b{{Ff{{I`{ABl}}}}}}}}{{{b{ABj}}}ACl}{{}c{}}0{{{ACb{c}}{Bl{O`}}}{{ACb{c}}}Kj}{{{ACb{c}}Ad}{{ACb{c}}}Kj}{{{ACb{c}}{Bl{n}}}{{ACb{c}}}Kj}0{{{ACb{c}}{Bl{e}}}{{ACb{c}}}Kj{{K`{Mb}}}}{{{ACb{c}}{Bl{{Dn{Kh}}}}}{{ACb{c}}}Kj}{{{ACb{c}}{Bl{{Dn{{Ff{M`}}}}}}}{{ACb{c}}}Kj}4{{{ACb{c}}{Bl{{b{hj}}}}}{{ACb{c}}}Kj}{{{ACb{c}}Kl}{{ACb{c}}}Kj}{{{ACb{c}}{b{D`}}}{{ACb{c}}}Kj}{{ABj{Bl{ACh}}}ABj}{{{b{ABj}}{Bl{ACh}}}{{I`{ABl}}}}1``````{{bd}f}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{ADd}}}ADd}{{b{b{hc}}}f{}}{bf}{{{b{ADd}}n}ADf}``{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{{{b{ACd}}c}{{A`{ADhADb}}}{{Of{}{{Kb{{b{ADj}}}}}}}}`{nf}0{{{b{ADh}}{b{ADh}}}Ad}{{{b{ADh}}{b{hAn}}}{{A`{fCn}}}}{{{b{ADd}}{b{hAn}}}{{A`{fCn}}}}{ADlADh}{cc{}}0{{}n}0{{}c{}}0{{{b{ADd}}}{{b{{Bl{{Dd{ADn}}}}}}}}```````{{{b{ADd}}}{{b{AE`}}}}`{bc{}}{c{{A`{e}}}{}{}}0{AEb{{A`{ADdAEd}}}}{{}{{A`{c}}}{}}0{bC`}0`77``````````{{bd}f}0`{{{AEf{c}}n}{{Aj{AEh}}}Kj}{{AEjn}{{Aj{AEh}}}}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{AEl}}}AEl}{{{b{AEn}}}AEn}{{b{b{hc}}}f{}}0{bf}0{{{b{AF`}}}{{Fh{nAFb}}}}{{}AEn}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{AEl}}}Ab}{c{{A`{AEn}}}Ab}{nf}0000{{{b{AEl}}{b{AEl}}}Ad}{{{b{AEn}}{b{AEn}}}Ad}{{b{b{c}}}Ad{}}00000{{{AEf{c}}}{{Aj{Ah}}}Kj}{AEj{{Aj{Ah}}}}{{{b{AEh}}n}Ad}{{{b{AEl}}{b{hAn}}}B`}{{{b{AEn}}{b{hAn}}}B`}{cc{}}0000{{{b{Df}}{Bl{{b{Dh}}}}{Bl{AFd}}}{{Aj{AEj}}}}{{{b{h{AEf{c}}}}}{{Aj{{b{AFd}}}}}Kj}{{{b{hAEj}}}{{Aj{{b{AFd}}}}}}{{{b{AEl}}{b{hc}}}fBb}{{{b{AEn}}{b{hc}}}fBb}{{}n}0000{{}c{}}0000{{{b{AEh}}}Ad}``{{{Bl{{b{{Ff{n}}}}}}{b{Cf}}{Bl{{b{{Ff{N`}}}}}}{Bl{{b{j}}}}}Ah}`{c{{AEf{c}}}Kj}{{{b{hAEh}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{h{AEf{c}}}}}{{Aj{n}}}Kj}{{{b{hAEj}}}{{Aj{n}}}}`{{{AEf{c}}AEn}{{AEf{c}}}Kj}{{AEjAEn}AEj}{{{b{AEh}}}{{b{AAf}}}}{{{b{h{AEf{c}}}}}{{Aj{AAf}}}Kj}{{{b{hAEj}}}{{Aj{AAf}}}}`{{{b{AEl}}c}A`Bn}{{{b{AEn}}c}A`Bn}{{{AEf{c}}Ad}{{AEf{c}}}Kj}{{{b{h{AEf{c}}}}AFd}fKj}1{{AEjAd}AEj}{bc{}}0{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{{{b{hN`}}n{b{{Fh{nAFb}}}}}f}{bC`}000075`{{}c{}}0000{{{AEf{c}}{b{{Dn{Cf}}}}{Bl{{b{Cf}}}}Ad}{{Aj{{AEf{c}}}}}Kj}{{AEj{b{{Dn{Cf}}}}{Bl{{b{Cf}}}}Ad}{{Aj{AEj}}}}{{{AEf{c}}{Bl{{Dd{Db}}}}}{{AEf{c}}}Kj}{{{AEf{c}}{Bl{{Dd{N`}}}}}{{AEf{c}}}Kj}{{AEj{Bl{{Dd{N`}}}}}AEj}{{{AEf{c}}{Bl{{E`{M`{Dn{Df}}}}}}}{{AEf{c}}}Kj}{{AEj{Bl{{E`{M`{Dn{Df}}}}}}}AEj}{{{AEf{c}}{Bl{{Dn{Kh}}}}}{{AEf{c}}}Kj}{{AEj{Bl{{Dn{Kh}}}}}AEj}{{{AEf{c}}{Bl{{Dd{n}}}}}{{AEf{c}}}Kj}{{AEj{Bl{{Dd{n}}}}}AEj}{{{AEf{c}}{Bl{j}}}{{AEf{c}}}Kj}{{AEj{Bl{j}}}AEj}{{{AEf{c}}{Bl{{E`{nn}}}}}{{AEf{c}}}Kj}{{AEj{Bl{{E`{nn}}}}}AEj}````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{ACh}}}AFf}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{{{b{Cf}}{b{Cf}}}{{Aj{f}}}}{cc{}}{{}n}{{}AFh}{{}c{}}{{{Bl{{b{Kh}}}}{b{AF`}}{b{Cf}}}{{Aj{Ad}}}}{{{b{AFh}}AFf{b{ABn}}}Ad}{{{Dd{{E`{{b{ADj}}ABf}}}}ACd{Bl{AFj}}}{{Aj{{I`{ABl}}}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}6````````````````{{bd}f}00000{{{AFl{c}}{b{D`}}}{{Aj{{AFn{c}}}}}Bf}{b{{b{c}}}{}}0000000{{{b{h}}}{{b{hc}}}{}}0000000{{{b{AG`}}}AG`}{{{b{AGb}}}AGb}{{{b{AGd}}}AGd}{{{b{AGf}}}AGf}{{{b{AGh}}}AGh}{{{b{AGj}}}AGj}{{b{b{hc}}}f{}}00000{bf}00000``{{}AG`}{{}AGb}{{}AGd}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{AG`}}}Ab}{c{{A`{AGb}}}Ab}{c{{A`{AGd}}}Ab}{c{{A`{AGf}}}Ab}{c{{A`{AGh}}}Ab}{c{{A`{AGj}}}Ab}`{nf}0000000;{{{b{{AFn{c}}}}{b{Ah}}}{{`{{AGn{}{{Kb{{Aj{{AGl{ADb}}}}}}}}}}}Bf}{{{b{AG`}}{b{AG`}}}Ad}{{{b{AGb}}{b{AGb}}}Ad}{{{b{AGd}}{b{AGd}}}Ad}{{{b{AGf}}{b{AGf}}}Ad}{{{b{AGh}}{b{AGh}}}Ad}{{{b{AGj}}{b{AGj}}}Ad}{{b{b{c}}}Ad{}}00000000000000000{{{b{{AFn{c}}}}}{{Aj{Ob}}}Bf}{{{AFl{c}}{b{hAh}}}{{Aj{Ob}}}Bf}{{{b{AG`}}{b{hAn}}}{{A`{fCn}}}}{{{b{AGb}}{b{hAn}}}B`}{{{b{AGd}}{b{hAn}}}B`}{{{b{AGf}}{b{hAn}}}B`}{{{b{AGh}}{b{hAn}}}B`}{{{b{AGj}}{b{hAn}}}B`}{cc{}}0000000{{}AG`}{{{b{{AFn{c}}}}}{{b{{AHb{{AH`{c}}}}}}}Bf}{{{b{AG`}}{b{hc}}}fBb}{{{b{AGb}}{b{hc}}}fBb}{{{b{AGd}}{b{hc}}}fBb}{{{b{AGf}}{b{hc}}}fBb}{{{b{AGh}}{b{hc}}}fBb}{{{b{AGj}}{b{hc}}}fBb}{{}n}0000000{{}c{}}0000000{{{b{AG`}}}Ad}0```{c{{AFl{c}}}{BfBf}}``{{{b{AG`}}c}A`Bn}{{{b{AGb}}c}A`Bn}{{{b{AGd}}c}A`Bn}{{{b{AGf}}c}A`Bn}{{{b{AGh}}c}A`Bn}{{{b{AGj}}c}A`Bn}{{{AFl{c}}Ad}{{AFl{c}}}Bf}`{bc{}}00000{{{b{AGb}}c}{{AFl{c}}}Bf}{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{Gl{{Aj{AGf}}}}{AHd{{Aj{AGh}}}}{AHf{{Aj{AGj}}}}{bC`}0000000{{}c{}}0000000{{{AFl{c}}AGd}{{AFl{c}}}Bf}{{{AFl{c}}{Bl{n}}}{{AFl{c}}}Bf}0{{{AFl{c}}AG`}{{AFl{c}}}Bf}{{{b{h{AFn{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{AGb}}Ahc}{{Aj{f}}}Bf}{{{b{{AFn{c}}}}{Dd{{AGl{ADb}}}}}{{Aj{f}}}Bf}{{{b{hAh}}{b{Ln}}e{b{g}}n}{{Aj{f}}}{{K`{M`}}}{{Kd{}{{Kb{c}}}}}{CbIfIh}}`{{{b{{Ff{Mb}}}}Ad{Bl{{b{Dh}}}}}{{Aj{{Dn{{Ff{Mb}}}}}}}}{{{b{{Ff{Mb}}}}Ad{Bl{{b{Dh}}}}Ad}{{Aj{{E`{{Dn{{Ff{Mb}}}}n}}}}}}{{{b{{Ff{c}}}}{b{{Ff{c}}}}}Ad{{Jn{Ln}}}}{{{b{{Ff{Gl}}}}}{{Bl{n}}}}{cAd{{Jn{Ln}}}}{{{b{Ln}}}Mb}``{{{b{AHh}}c}{}Hn}{{{b{AHh}}c}{}{HnIf}}{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}{{b{AHh}}}}{{}n}{{}c{}}{{{b{AHj}}}Ob}{{{b{AHh}}c}AHl{HnIf}}{{{b{AHh}}e}{{AHl{c}}}If{{Gj{}{{Gh{c}}}}If}}{{{b{AHh}}e}c{IfIh}{{Gj{}{{Gh{c}}}}IfIh}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{{AHde}{}Hn{{Gj{}{{Gh{c}}}}}}{bC`}81````{{bd}f}0{{{b{hAh}}{Bl{{b{Kh}}}}Ad}{{Aj{f}}}}{{{b{Kh}}}{{Bl{{b{AHn}}}}}}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{AI`}}}AI`}{{{b{AIb}}}AIb}{{b{b{hc}}}f{}}0{bf}0{{{b{AIb}}}{{b{{Ff{AI`}}}}}}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{AI`}}}Ab}{c{{A`{AIb}}}Ab}{nf}0{{{b{AI`}}}{{b{Mh}}}}{{{b{Kh}}{b{Ah}}}{{Aj{N`}}}}{{{b{AI`}}}{{b{M`}}}}{{{b{AI`}}{b{hAn}}}B`}{{{b{AIb}}{b{hAn}}}B`}{cc{}}0{N`AI`}{MjAI`}{{{b{AI`}}}{{Bl{{b{N`}}}}}}00{{{b{AIb}}{b{Df}}}{{Aj{{b{AI`}}}}}}{{}n}0{{}c{}}0{{{b{Kh}}}{{Bl{{Dd{M`}}}}}}{{Mj{Bl{N`}}{Bl{N`}}{Bl{N`}}}AI`}{{Kl{Dd{AI`}}{Bl{n}}}AIb}{{{b{AI`}}}{{Bl{n}}}}{{{b{AIb}}}{{Bl{n}}}}{{{b{AIb}}}{{b{Kl}}}}{{{b{AI`}}c}A`Bn}{{{b{AIb}}c}A`Bn}{{{b{AHn}}{b{AIb}}}{{Aj{Ad}}}}{{{b{hAIb}}{b{{Ff{n}}}}}f}=={{{b{AI`}}}{{Bl{N`}}}}{bc{}}0{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{bC`}0??{{{b{hAIb}}Kl}f}```{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{cAfBd}{cAlBf}{{AfAd}Af}00``````{{{b{Cf}}{b{{Ff{n}}}}}Cf}`{{{b{{Ff{c}}}}{b{Cf}}}{{Aj{{Dd{n}}}}}{{Jn{Df}}}}`{{{b{hc}}}{{Aj{Nd}}}{BdKjAId}}{{{Bl{{b{{Ff{M`}}}}}}{b{D`}}{Bl{{b{{Ff{N`}}}}}}Ad}{{Bl{{Dd{n}}}}}}{{{b{hD`}}{b{D`}}}{{Aj{f}}}}``````````{{bd}f}{b{{b{c}}}{}}000{{{b{h}}}{{b{hc}}}{}}000{{{b{AIf}}}AIf}{{b{b{hc}}}f{}}{bf}{{}AIh}{n{{b{c}}}{}}000{n{{b{hc}}}{}}000{nf}000{{{b{AIf}}{b{hAn}}}B`}{cc{}}0{AIjAIh}{AIlAIh}2{ABfAIh}3{{{b{AIn}}{Fb{n}}}{{Aj{ABf}}}}{{{b{AIj}}{Fb{n}}}{{Aj{ABf}}}}{{{b{AIl}}{Fb{n}}}{{Aj{ABf}}}}{{{b{AIh}}{Fb{n}}}{{Aj{ABf}}}}{{{b{AIn}}{b{h{Ff{{Fb{n}}}}}}}{{Aj{{Fh{nABf}}}}}}{{{b{AIj}}{b{h{Ff{{Fb{n}}}}}}}{{Aj{{Fh{nABf}}}}}}{{{b{AIl}}{b{h{Ff{{Fb{n}}}}}}}{{Aj{{Fh{nABf}}}}}}{{{b{AIh}}{b{h{Ff{{Fb{n}}}}}}}{{Aj{{Fh{nABf}}}}}}{{{b{AIn}}}{{Aj{n}}}}{{{b{AIj}}}{{Aj{n}}}}{{{b{AIl}}}{{Aj{n}}}}{{{b{AIh}}}{{Aj{n}}}}{{}n}000{{}c{}}000{bc{}}{{{b{AIf}}{b{Df}}{Bl{{b{Dh}}}}}{{Aj{AIh}}}}{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{bC`}000{{{b{AIh}}}{{b{Df}}}}6666````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{{Ff{Gl}}}}}{{Bl{AJ`}}}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}>={{{b{{Ff{Gl}}}}{b{h{Dd{Gl}}}}}{{Aj{{b{{Ff{Gl}}}}}}}};:9>````76432{{{b{AJb}}{b{hAn}}}B`}2{{}n}{{}c{}}{{{b{hn}}nnn}{{E`{nn}}}}{{nn{Fb{n}}}AJb}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}5","D":"DDl","p":[[1,"reference"],[5,"Private",2290],[1,"unit"],[0,"mut"],[5,"RowIndex",0,2291],[5,"HiveOptions",0,2291],[1,"usize"],[6,"Result",2292],[10,"Deserializer",2293],[1,"bool"],[10,"SerReader",2148,2294],[5,"DataFrame",2295],[8,"PolarsResult",2296],[10,"SerWriter",2148,2294],[5,"Formatter",2297],[8,"Result",2297],[10,"Hasher",2298],[10,"Read",2299],[10,"Write",2299],[10,"ArrowReader",0,2294],[8,"RecordBatch",2300],[6,"Option",2301],[10,"Serializer",2302],[5,"TypeId",2303],[10,"WriteDataFrameToFile",0,2294],[5,"AvroReader",86,2304],[8,"ArrowSchema",2305],[10,"Seek",2299],[6,"AvroCompression",86],[5,"AvroWriter",86,2306],[5,"Error",2297],[8,"Schema",2307],[5,"String",2308],[5,"Vec",2309],[1,"str"],[5,"CloudOptions",372],[5,"CloudLocation",153,2310],[10,"ObjectStore",2311],[5,"Arc",2312],[1,"tuple"],[5,"PolarsObjectStore",153,2313],[5,"Path",2314],[5,"File",2315],[5,"CloudWriter",153,2316],[5,"Error",2317],[10,"Command",2318],[8,"Result",2317],[5,"Url",2319],[5,"Range",2320],[5,"Bytes",2321],[1,"slice"],[8,"PlHashMap",2322],[17,"Error"],[10,"Debug",2297],[10,"TryFrom",2323],[10,"Hash",2298],[10,"Eq",2324],[10,"From",2323],[5,"ObjectMeta",2311],[17,"Output"],[10,"FnOnce",2325],[1,"u8"],[10,"VarInt",2326],[6,"PlCredentialProvider",227],[5,"CredentialProviderFunction",227],[5,"AwsCredential",227,2327],[6,"AzureCredential",227,2328],[5,"GcpCredential",227,2329],[5,"InstanceCredentials",2327],[5,"SessionCredentials",2327],[10,"Future",2330],[5,"Box",2331],[5,"Pin",2332],[10,"Fn",2325],[10,"Send",2333],[10,"Sync",2333],[5,"PythonFunction",2334],[8,"PyObject",2335],[10,"IntoCredentialProvider",227],[8,"AwsCredentialProvider",2336],[8,"AzureCredentialProvider",2337],[8,"GcpCredentialProvider",2338],[6,"AmazonS3ConfigKey",372,2339],[6,"AzureConfigKey",372,2340],[6,"GoogleConfigKey",372,2341],[6,"CloudType",372],[10,"AsRef",2323],[10,"Into",2323],[17,"Item"],[10,"IntoIterator",2342],[5,"CsvReader",562,2343],[10,"PhysicalIoExpr",2080],[10,"MmapBytesReader",1475],[8,"SchemaRef",2307],[5,"OwnedBatchedCsvReader",562,2344],[5,"BatchedCsvReader",562,2344],[5,"CsvReadOptions",562,2345],[5,"CsvParseOptions",562,2345],[6,"CsvEncoding",562,2345],[6,"CommentPrefix",562,2345],[6,"NullValues",562,2345],[6,"NullValuesCompiled",823,2345],[5,"Path",2346],[5,"PlSmallStr",2347],[5,"PathBuf",2346],[5,"File",2348],[5,"SchemaInferenceResult",944],[6,"DataType",2349],[5,"Field",2350],[5,"CountLines",823,2351],[6,"Buffer",866],[5,"Series",2352],[8,"PlHashSet",2322],[6,"ReaderBytes",1475],[5,"CsvWriter",971,2353],[5,"BatchedWriter",971,2353],[5,"CsvWriterOptions",971,2354],[5,"SerializeOptions",971,2354],[6,"QuoteStyle",971,2354],[8,"NonZeroUsize",2355],[1,"u64"],[5,"FileCacheEntry",1116,2356],[10,"ExactSizeIterator",2357],[5,"Schema",2358],[6,"Column",2359],[5,"IpcStreamReader",1138,2360],[5,"IpcWriter",1138,2361],[5,"BatchedWriter",1138,2361],[5,"IpcScanOptions",1138,2362],[5,"IpcReadOptions",1138,2363],[5,"IpcWriterOptions",1138,2361],[6,"IpcCompression",1138,2361],[5,"IpcReaderAsync",1138,2363],[5,"FileMetadata",2364],[1,"i64"],[5,"IpcStreamWriterOption",1138,2360],[5,"IpcReader",1138,2362],[5,"IpcStreamWriter",1138,2360],[8,"ArrowSchemaRef",2305],[5,"CompatLevel",2349],[5,"EncodedData",2365],[5,"JsonWriterOptions",1377],[5,"JsonWriter",1377],[5,"JsonReader",1377],[5,"BatchedWriter",1377],[6,"JsonFormat",1377],[5,"MemSlice",2366],[10,"BufRead",2299],[5,"StructArray",1498,2367],[10,"Array",2368],[6,"ArrowDataType",2369],[10,"Any",2303],[5,"JsonLineReader",1498],[5,"Field",2370],[5,"GrowableStruct",2371],[5,"Bitmap",2372],[10,"Scalar",2373],[5,"StructValueIter",2374],[5,"BitmapIter",2375],[6,"ZipValidity",2376],[6,"PolarsError",2296],[5,"FileMetadata",1604,2377],[6,"ColumnOrder",2378],[5,"ParquetStatistics",1604],[5,"ColumnChunkMetadata",2379],[5,"MutableStatistics",2380],[5,"KeyValue",2381],[5,"SchemaDescriptor",2382],[5,"FileMetaData",2381],[6,"ParquetError",2383],[5,"ParquetReader",1657,2384],[5,"BatchedParquetReader",1657,2385],[5,"ParquetAsyncReader",1657,2384],[5,"ParquetOptions",1657,2386],[6,"ParallelStrategy",1657,2386],[5,"RowGroupMetadata",2387],[6,"IsSorted",2388],[8,"FileMetadataRef",1604],[1,"f64"],[6,"PrefilterMaskSetting",1803,2385],[6,"Filter",2389],[5,"ParquetWriter",1825,2390],[5,"BatchedWriter",1825,2391],[5,"StatisticsOptions",1825,2392],[5,"ParquetWriteOptions",1825,2393],[6,"ParquetCompression",1825,2393],[5,"GzipLevel",1825,2393],[5,"BrotliLevel",1825,2393],[5,"ZstdLevel",1825,2393],[8,"RowGroupIterColumns",1825,2394],[10,"Iterator",2395],[5,"FileWriter",2396],[5,"Mutex",2397],[1,"u32"],[1,"i32"],[5,"RuntimeManager",2057],[10,"GetSize",2057],[5,"JoinHandle",2398],[10,"StatsEvaluator",2080],[5,"ColumnStats",2080],[5,"BatchStats",2080],[10,"Sized",2333],[6,"DynByteSourceBuilder",2172],[6,"DynByteSource",2172],[5,"MemSliceByteSource",2172],[5,"ObjectStoreByteSource",2172],[10,"ByteSource",2172],[6,"SupportedCompression",2253],[6,"SplitSlicePosition",2271],[6,"ObjectStoreCredential",227],[5,"Utf8Field",866],[5,"CategoricalField",866],[5,"DatetimeField",866],[15,"Datetime",941]],"r":[[0,2294],[1,2291],[2,2291],[3,2294],[4,2294],[5,2294],[87,2304],[88,2306],[89,2399],[153,2310],[154,2316],[155,2313],[156,2313],[165,2400],[194,2310],[206,2400],[229,2327],[231,2328],[236,2329],[375,2339],[380,2340],[404,2341],[564,2344],[565,2345],[566,2345],[567,2345],[568,2345],[569,2343],[573,2345],[574,2344],[622,2351],[623,2351],[704,944],[826,2351],[827,2345],[833,2401],[845,2401],[854,2343],[855,2401],[863,866],[972,2353],[973,2353],[974,2354],[978,2354],[979,2354],[1116,2402],[1117,2403],[1118,2356],[1125,2402],[1127,2403],[1138,2361],[1139,2361],[1140,2363],[1141,2362],[1142,2363],[1143,2362],[1144,2360],[1145,2360],[1146,2360],[1147,2361],[1148,2361],[1499,2367],[1604,2377],[1622,2380],[1658,2385],[1661,2386],[1662,2384],[1663,2386],[1664,2384],[1688,2385],[1743,2404],[1774,2385],[1806,2385],[1809,2385],[1813,2404],[1818,2405],[1820,2406],[1825,2391],[1827,2393],[1829,2393],[1832,2393],[1833,2393],[1834,2390],[1835,2394],[1837,2392],[1840,2393],[2148,2294],[2149,2294],[2150,0],[2158,2049],[2159,2407],[2160,2407],[2161,2407],[2162,2407],[2164,2407],[2166,2407],[2168,2407],[2169,2407],[2170,2407]],"b":[[310,"impl-From%3CInstanceCredentials%3E-for-AwsCredential"],[311,"impl-From%3CSessionCredentials%3E-for-AwsCredential"],[1503,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1504,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1505,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1506,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1526,"impl-PartialEq-for-StructArray"],[1527,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1553,"impl-StructArray"],[1554,"impl-Array-for-StructArray"],[1557,"impl-Array-for-StructArray"],[1558,"impl-StructArray"],[1570,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1571,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1572,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1573,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1581,"impl-Array-for-StructArray"],[1582,"impl-StructArray"],[1598,"impl-StructArray"],[1599,"impl-Array-for-StructArray"],[2209,"impl-From%3CMemSliceByteSource%3E-for-DynByteSource"],[2210,"impl-From%3CObjectStoreByteSource%3E-for-DynByteSource"],[2212,"impl-From%3CMemSlice%3E-for-DynByteSource"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAMwGzgAAAAEAAwARABcACAAhAAgAKwACADAABQA4AAAAOgACAD4AAgBDABMAXwAAAGEAGAB9AAMAhAABAIcADQCYAAAAnAAAAJ4ABgCnABAAugACAMAAAQDFAAIAzQAAANAAAADVAA4A5QAAAOcAAADsAAAA7gAAAPAAAgD0AAEA9wA9ADcBAQA+AQkATgEIAFkBAgBdARcAewEBAIcBAACTAQEAlgEBAKwBEADAATYA/AEDAAECCAAPAhwALgIAADUCBAA+AgEAQgIsAHECOACrAgQAtgIAALkCEQDUAgAA1gICAN0CKgAJAwgAEwMHACsDAAA4AwAAOwMUAFIDAQBWAwAAWAMdAHcDFwCTAwQAnAMhAL8DAQDDAwAAxQMGAM0DAADVAxcA7wMhABIEAAAUBAIAHAQCACAEAAAiBAUALgQCADUEAwA6BBYAXQQHAGYEAgBqBAEAbgQDAHMEAAB1BAAAeAQAAHsEAAB9BAAAgAQDAIUEIgCpBDYA4QQDAPAEDgAMBQUAFAU1AEwFAQBSBQEAVgUBAFoFAABdBQEAYAUAAGIFAABoBSQAjgUAAJQFAACWBQQAogUZAL4FAQDEBQAAxgUHAM8FAQDSBQEA1QUGAN0FAQDgBQkA6wUNAPoFAQD9BQAAAAYAAAIGAgAIBgAACgYAABMGAwAaBgEAHQYNACwGAgAyBgEANgYIAEAGAQBGBgAASAYHAFMGAwBZBgUAYQYBAG8GAgBzBgMAeAYBAHsGAAB+BgAAgAYAAIQGNAC+BgkAzQYAAM8GAgDTBgAA1QYBANgGAQDbBgMA4AYUAPcGBQD+BgAAAAcFAAcHAAAJBwEADAcJABgHAQAbBwgAJQcAACcHAQAqBwAALAcBAC8HAQAyBygAXQc7AJsHBQCpBw8AwQcBAMQHAQDHBwAAyQcFANEHKQAACAEAAwgAAAoIAgAOCAQAFAgBABcIAAAZCAAAGwgFACMIBAApCAkANAgHAD4IAgBJCAEAUwgDAFoIDQBpCAAAawgAAG8IDwCACAEAgwgAAIUIGgCiCAEApQgAAKgIAgCsCAoAuwgTANAIAwDVCAIA2QgAANwIDQDrCAAA7ggEAA=="}],["polars_lazy",{"t":"CQCCCPPPGPPPPPPPPPPPPPPFPPPPPPPPKPPGGPGPPPPPPGFPPPFFPPPKPKPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPPPFPPPPPPPPPPGPPPPGKFPPPPPPPFIPPPPPPPPPGKPPPPPIPPPPPPPPPPPPPPKPPPPPPPPPPPPPPPFPPPPPPGPPPPPPFKPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPGPPPPPPIGPPPPPPPPPPPGPPPPPPPPPPPKPPPPPPPPPPPFPPPPPPPPGPPPPPPPPPPPFPPPPPPPGPPPPPPFPGFPPPPPPPGPFPPPPPPPPPPPPPPPPPPPPPKPPFPPFPPPPFPPGGPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHNONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNCNNNNNNNNMMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNNHNHNOONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNNONNNNNNHHNNNNNNNNNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNNHNNNHNNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPPGGPGPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPGPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPCCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPPGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNOOOPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFHHOHHHHHHHHHHHHHHHHHHHHHHHHHHHOOHHHHHOOHHHHHHHHHOOOHOOOOHHHHHHHOOHHHHOOOOOJJJSFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOITTTTTTTFKFFKFFFTFTTTTTTFFFTNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNOONOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONONNNNNNNMNNOOOONNNNNNNNNNNOCNNMNNOONNNNNMNNOOONNNNNNNOONNNNNNNNNNNNNNNONNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNMNNNMNNNNNNNNNNNNNNMNNNNNNNHHKFFPPPPPPPFPPPPPPGFPFPPPPPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPPFKPPGFPFPPPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNNOOOONONNNONNNNNNNOOOONONOOOHOMOMNONNNNNNNNNNNNNNNNONOOOONONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNONNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","Abs","Add","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","Array","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","","BinaryUdfOutputField","Bitwise","","BitwiseAggFunction","BitwiseFunction","Boolean","BooleanFunction","Business","Bytes","","Cast","CastTimeUnit","Categorical","CategoricalFunction","CategoricalNameSpace","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","Clip","Coalesce","Column","ColumnBinaryUdf","Columns","ColumnsUdf","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","Count","CountMatches","CountOnes","CountZeros","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeArgs","DatetimeFunction","Day","Deserialized","","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","Duration","DurationArgs","EndsWith","Entropy","Eq","EqValidity","EscapeRegex","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","ExclusiveOr","Exp","Explode","","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","Extract","ExtractAll","ExtractGroups","Field","FieldByIndex","FieldByName","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","Find","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","Generic","GetCategories","GetOutput","GroupsToRows","Gt","GtEq","Hash","Head","HexDecode","HexEncode","Hist","Hour","Implode","IndexColumn","Interpolate","InterpolateBy","Intersect","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","Join","JoinOptions","JsonDecode","JsonEncode","JsonPathMatch","KeepName","Kurtosis","Last","LazySerde","LeadingOnes","LeadingZeros","Len","LenBytes","LenChars","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lowercase","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Microsecond","Millennium","Millisecond","Min","MinHorizontal","Minus","Minute","Mode","Modulus","Month","MonthEnd","MonthStart","MultipleFields","Multiply","NUnique","Name","Nanosecond","Negate","NestedType","Not","NotEq","NotEqValidity","Nth","NullCount","OffsetBy","OpaqueColumnUdf","Operator","Or","","OrdinalDay","Over","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Plus","Pow","PowFunction","PrefixFields","QCut","Quantile","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","Repeat","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","Root","Round","","RoundSF","SearchSorted","Second","Selector","","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","","Sort","SortBy","SpecialEq","Split","SplitExact","SplitN","Sqrt","StartsWith","Std","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","StructExpr","StructFunction","StructNameSpace","Sub","SubPlan","SuffixFields","Sum","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Ternary","Then","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrailingOnes","TrailingZeros","Trigonometry","TrueDivide","Truncate","UdfSchema","Unique","UniqueCounts","UnpivotArgsDSL","UpperBound","Uppercase","UserDefinedFunction","ValueCounts","Var","Week","WeekDay","When","Wildcard","Window","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","","Year","ZFill","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_into_selector","_rename_fields_impl","_selector_add","_selector_and","_selector_sub","_selector_xor","abs","add","","agg_groups","alias","all","","","","all_horizontal","allow_parallel","ambiguous","and","any","","","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","","","arg_min","","","arg_sort","arg_sort_by","arg_unique","arg_where","args","","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","","binary_expr","bitand","bitwise_and","bitwise_count_ones","bitwise_count_zeros","bitwise_leading_ones","bitwise_leading_zeros","bitwise_or","bitwise_trailing_ones","bitwise_trailing_zeros","bitwise_xor","bitxor","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bottom_k","bottom_k_by","business_day_count","cache","call","","call_udf","","call_unchecked","cast","","cast_with_options","cat","","cbrt","ceil","clip","clip_max","clip_min","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","coalesce","col","cols","concat_arr","concat_expr","concat_list","concat_str","contains","","cos","cosh","cot","count","count_matches","","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","","","","","","","","","","","degrees","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deserialize","","","","","","","","","","","","","","","","","","","","","","","","","","","diff","","div","dot","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","drop_nans","drop_nulls","","dt","","dtype_col","dtype_cols","duration","entropy","eq","","","","","","","","","","","","","","","","","","","","","","","","","eq_missing","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eval","","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","","extend_constant","field_by_index","field_by_name","field_by_names","fill_nan","fill_null","fill_null_with_strategy","filter","first","","","flatten","float_type","floor","floor_div","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fold_exprs","force_parallel","format","format_str","forward_fill","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_type","fun","function_expr","function_with_options","functions","gather","","gather_every","","get","","","get_categories","get_field","","get_fields_lens","get_schema","gt","gt_eq","has_multiple_outputs","hash","","","","","","","","","","","","","","","","","","","","","","head","","hist","hour","hours","implode","index","index_cols","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","input_fields","int_range","int_ranges","interpolate","interpolate_by","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_iter","into_list_name_space","","into_tree_formatter","is_arithmetic","is_between","is_column","is_column_selection","is_comparison","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_literal","is_nan","is_not_nan","is_not_null","","is_null","","is_regex_projection","is_simple_projection","is_unique","join","","json_encode","keep","kurtosis","last","","","len","","","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","","map_dtypes","map_expr","map_field","map_fields","","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","max","","","","max_horizontal","mean","","","mean_horizontal","median","","","","meta","microsecond","microseconds","milliseconds","min","","","","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","","","name","","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","","","","","","nodes","nodes_owned","not","","nth","null_count","on","options","or","otherwise","","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","replace_strict","reshape","return_type","reverse","","","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_skew","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","","search_sorted","second","seconds","serialize","","","","","","","","","","","","","","","","","","","","","","","","","","","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","","","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","","sort","","","sort_by","spearman_rank_corr","sqrt","std","","","str","strict","strict_cast","string","struct_","sub","","suffix","suffix_fields","sum","","","","sum_horizontal","super_type","swap_operands","tail","","tan","tanh","ternary_expr","then","","time_ranges","time_unit","","time_zone","to_array","to_field","to_list","to_lowercase","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_string","","","","","","","","","","to_struct","","to_uppercase","top_k","top_k_by","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_map_to_array_inner_dtype","try_serialize","","","try_to_compact_string","","","","","","","","","","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","udf","undo_aliases","union","unique","","","unique_counts","unique_stable","","","upper_bound","value_counts","value_name","var","","","variable_name","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weeks","when","","","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fields","with_fractional_seconds","with_hms","","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","","method","propagate_nans","","quantile","closed","ignore_nulls","","by","","dtype","expr","","","","","falsy","function","","","","idx","input","","","","left","length","offset","op","options","","","","","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","allow_duplicates","base","","bin_count","breaks","ddof","decimals","descending","","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","","include_category","labels","","left_closed","","limit","","method","","n","name","normalize","","offset","options","","","","parallel","probs","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","","fill_char","","ignore_nulls","","inclusive","infer_schema_len","length","","literal","","","n","","pat","strict","","time_unit","time_zone","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","size_bytes","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","Abs","All","AllHorizontal","And","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","Bitwise","BitwiseAggFunction","BitwiseFunction","Boolean","BooleanFunction","Business","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","CountMatches","CountOnes","CountZeros","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","Entropy","EscapeRegex","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exp","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","Fused","GatherEvery","Generic","GetCategories","Hash","Head","HexDecode","HexEncode","Hist","Hour","Interpolate","InterpolateBy","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","JsonDecode","JsonEncode","JsonPathMatch","Kurtosis","LeadingOnes","LeadingZeros","LenBytes","LenChars","ListExpr","Log","Log1p","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MonthEnd","MonthStart","MultipleFields","Nanosecond","Negate","Not","NullCount","OffsetBy","Or","OrdinalDay","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Pow","PowFunction","PrefixFields","QCut","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameFields","Repeat","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","RollingExpr","RollingExprBy","Round","","RoundSF","SearchSorted","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrailingOnes","TrailingZeros","Trigonometry","Truncate","Unique","UniqueCounts","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Xor","Year","ZFill","cat","pow","rolling","rolling_by","trigonometry","closed","ignore_nulls","","allow_duplicates","base","","bin_count","breaks","ddof","decimals","descending","","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","","include_category","labels","","left_closed","","limit","","method","","n","name","normalize","","offset","options","","","","parallel","probs","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","","fill_char","","ignore_nulls","","inclusive","infer_schema_len","length","","literal","","","n","","pat","strict","","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","CorrCov","Max","Mean","Min","Quantile","RollingFunction","Skew","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","corr_cov_options","is_corr","rolling_options","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","ArcCos","ArcCosh","ArcSin","ArcSinh","ArcTan","ArcTanh","Cos","Cosh","Cot","Degrees","Radians","Sin","Sinh","Tan","Tanh","TrigonometricFunction","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","equivalent","","","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","DatetimeArgs","DurationArgs","all","all_horizontal","ambiguous","any_horizontal","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","cast","coalesce","col","collect_all","cols","concat","concat_arr","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","dtype_col","dtype_cols","duration","fold_exprs","format_str","hour","hours","index_cols","int_range","int_ranges","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","pearson_corr","quantile","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","","time_zone","weeks","year","CALL_COLUMNS_UDF_PYTHON","CALL_DF_UDF_PYTHON","PYTHON3_VERSION","PYTHON_SERDE_MAGIC_BYTE_MARK","PythonFunction","PythonGetOutput","PythonUdfExpression","__clone_box","borrow","","","borrow_mut","","","call_udf","","clone","clone_into","clone_to_uninit","deref","","","deref_mut","","","deserialize","drop","","","eq","equivalent","","","fmt","from","","","","get_field","init","","","into","","","new","","serialize","to_owned","try_deserialize_bytes","try_from","","","try_into","","","try_serialize","","try_serialize_to_bytes","type_id","","","vzip","","","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","escape_regex","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","join","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","CLUSTER_WITH_COLUMNS","COLLAPSE_JOINS","COMM_SUBEXPR_ELIM","COMM_SUBPLAN_ELIM","EAGER","FAST_PROJECTION","FILE_CACHING","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","NEW_STREAMING","OptFlags","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ROW_ESTIMATE","SIMPLIFY_EXPR","SLICE_PUSHDOWN","STREAMING","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","TYPE_COERCION","__clone_box","","","","","","","","","_collect_post_opt","_with_eager","agg","all","allow_missing_columns","allow_parallel","anonymous_scan","anti_join","apply","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","","","","","","borrow_mut","","","","","","","","","","bottom_k","cache","","","cancel","cast","cast_all","clone","","","","","","","","","clone_into","","","","","","","","","clone_to_uninit","","","","","","","","","cloud_options","","","","","","coalesce","collect","collect_concurrently","collect_schema","complement","concat_impl","","","contains","count","cross_join","default","","","","","deref","","","","","","","","","","deref_mut","","","","","","","","","","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","difference","drop","","","","","","","","","","","","drop_no_validate","drop_nulls","empty","explain","explode","extend","fetch","","fetch_blocking","fill_nan","fill_null","filter","finish","","","","","finish_no_glob","","","first","fmt","","","","","force_parallel","from","","","","","","","","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","full_join","get_current_optimizations","glob","","","","group_by","group_by_dynamic","group_by_stable","head","hive_options","","how","include_file_paths","","infer_schema_length","init","","","","","","","","","","inner_join","insert","intersection","intersects","into","","","","","","","","","","into_iter","is_all","is_empty","iter","iter_names","join","join_builder","join_nulls","join_where","last","lazy","","left_join","left_on","limit","logical_plan","","low_memory","","map","map_python","max","mean","median","merge_sorted","min","n_rows","","","","","","name","new","","","new_paths","","new_with_sources","","not","null_count","on","optimize","parallel","pivot","profile","quantile","rechunk","","","","","remove","rename","reverse","right_on","rolling","row_index","","","","","","scan_from_python_function","scan_ipc","scan_ipc_files","scan_ipc_sources","scan_parquet","scan_parquet_files","scan_parquet_sources","schema","","schema_only","schema_with_arenas","select","select_seq","semi_join","set","set_cached_arena","shift","shift_and_fill","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","sort","sort_by_exprs","sources","","","std","sub","sub_assign","suffix","sum","symmetric_difference","tail","","to_alp","to_alp_optimized","to_dot","to_owned","","","","","","","","","toggle","top_k","try_from","","","","","","","","","","try_into","","","","","","","","","","try_new_streaming_if_requested","type_id","","","","","","","","","","union","unique","unique_generic","unique_stable","unique_stable_generic","unnest","unpivot","use_statistics","validate","var","vzip","","","","","","","","","","with","with_batch_size","with_cache","with_chunk_size","with_cloud_options","","with_cluster_with_columns","with_collapse_joins","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_glob","with_has_header","with_ignore_errors","","with_include_file_paths","","with_infer_schema_length","","with_low_memory","with_missing_is_null","with_n_rows","","","","","with_new_streaming","with_null_values","with_optimizations","with_paths","","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_raise_if_empty","with_rechunk","","","with_row_estimate","with_row_index","","","","","","with_schema","","with_schema_modify","with_schema_overwrite","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_sources","","","with_streaming","with_truncate_ragged_lines","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Decimal","Dense","Distinct","DslPlan","Duration","","DynamicGroupOptions","ExtContext","Filter","Float","Float32","Float64","Full","GroupBy","HConcat","HStack","IEJoin","IR","Inner","Int","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","","OneToMany","OneToOne","Ordinal","OtherScalar","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","Right","RollingGroupOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","StrCat","String","Time","UInt16","UInt32","UInt64","UInt8","Union","UnionArgs","__clone_box","","","","","","","","","","","","","","","","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","batch_size","borrow","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","clone","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","closed_window","","cmp","coalesce","compare","compression","","compute_schema","data_page_size","days","days_only","default","","","","","","","","","","","","deref","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","descending","describe","describe_tree_format","deserialize","","","","","","","","","","","","","","","","diagonal","display","drop","","","","","","","","","","","","","","","","","","eq","","","","","","","","","","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","every","fmt","","","","","","","","","","","","","","","","","","","fmt_str","from","","","","","","","","","","","","","","","","","","","","from_partitioned_ds","get_datatype","group_by_dynamic","hash","","","","","","","","","","","","","","","how","include_bom","include_boundaries","include_header","index_column","","init","","","","","","","","","","","","","","","","","","into","","","","","","","","","","","","","","","","","","into_iter","is_asof","is_constant_duration","is_cross","is_full_days","is_ie","is_scalar","is_valid_join","is_zero","join_nulls","label","lit","","","","maintain_order","","","","materialize","method","months","months_only","mul","n_rows","nanoseconds","needs_checks","neg","negative","new","","next_batch","offset","","output_schema","parallel","parse","parsed_int","partial_cmp","period","","predicate","prepare_cloud_plan","rechunk","rolling","row_group_size","scan","schema","","serialize","","","","","","","","","","","","","","","","serialize_options","should_coalesce","skip_rows","slice","start_by","statistics","suffix","","to_alp","to_any_value","to_owned","","","","","","","","","","","","","","","","to_string","","","to_supertypes","to_writer","","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","try_parse","try_parse_interval","try_to_compact_string","","","type_id","","","","","","","","","","","","","","","","","","validation","vzip","","","","","","","","","","","","","","","","","","weeks","weeks_only","with_coalesce","with_columns","with_suffix","write_df_to_file","","aggs","apply","args","by_column","cached_ir","contexts","df","dsl","expr","exprs","file_info","file_options","function","id","input","","","","","","","","","","","input_left","input_right","inputs","","keys","left_on","len","maintain_order","node","offset","options","","","","","","","payload","predicate","predicates","right_on","scan_type","schema","slice","sort_options","sources","version","dtype","high","low"],"q":[[0,"polars_lazy"],[5,"polars_lazy::dsl"],[1729,"polars_lazy::dsl::AggExpr"],[1736,"polars_lazy::dsl::BooleanFunction"],[1739,"polars_lazy::dsl::Expr"],[1774,"polars_lazy::dsl::FunctionExpr"],[1819,"polars_lazy::dsl::StringFunction"],[1839,"polars_lazy::dsl::TemporalFunction"],[1841,"polars_lazy::dsl::binary"],[1862,"polars_lazy::dsl::cat"],[1863,"polars_lazy::dsl::dt"],[1919,"polars_lazy::dsl::function_expr"],[2150,"polars_lazy::dsl::function_expr::BooleanFunction"],[2153,"polars_lazy::dsl::function_expr::FunctionExpr"],[2198,"polars_lazy::dsl::function_expr::StringFunction"],[2218,"polars_lazy::dsl::function_expr::TemporalFunction"],[2220,"polars_lazy::dsl::function_expr::cat"],[2222,"polars_lazy::dsl::function_expr::pow"],[2226,"polars_lazy::dsl::function_expr::rolling"],[2261,"polars_lazy::dsl::function_expr::rolling::RollingFunction"],[2264,"polars_lazy::dsl::function_expr::rolling_by"],[2297,"polars_lazy::dsl::function_expr::trigonometry"],[2341,"polars_lazy::dsl::functions"],[2417,"polars_lazy::dsl::python_udf"],[2482,"polars_lazy::dsl::string"],[2544,"polars_lazy::dsl::udf"],[2550,"polars_lazy::frame"],[3040,"polars_lazy::frame::pivot"],[3042,"polars_lazy::prelude"],[3669,"polars_lazy::prelude::DslPlan"],[3721,"polars_lazy::prelude::LiteralValue"],[3724,"dyn_clone::sealed"],[3725,"polars_plan::dsl::meta"],[3726,"polars_plan::dsl::expr"],[3727,"polars_plan::dsl::struct_"],[3728,"polars_utils::pl_str"],[3729,"alloc::sync"],[3730,"polars_error"],[3731,"core::result"],[3732,"polars_plan::dsl::selector"],[3733,"core::convert"],[3734,"polars_plan::dsl::array"],[3735,"polars_plan::dsl::list"],[3736,"polars_plan::dsl::expr_dyn_fn"],[3737,"polars_core::frame::column"],[3738,"core::option"],[3739,"core::ops::function"],[3740,"core::marker"],[3741,"polars_plan::plans::visitor"],[3742,"polars_plan::dsl::function_expr"],[3743,"polars_core::datatypes::dtype"],[3744,"polars_core::chunked_array::ops::sort::options"],[3745,"polars_plan::dsl::function_expr::schema"],[3746,"polars_core::datatypes::field"],[3747,"core::any"],[3748,"alloc::vec"],[3749,"polars_plan::dsl::binary"],[3750,"core::clone"],[3751,"polars_plan::dsl::udf"],[3752,"polars_core::chunked_array::cast"],[3753,"polars_plan::dsl::cat"],[3754,"polars_plan::dsl::arity"],[3755,"polars_plan::dsl::function_expr::bitwise"],[3756,"polars_plan::dsl::function_expr::boolean"],[3757,"polars_plan::dsl::function_expr::cat"],[3758,"polars_plan::dsl::function_expr::datetime"],[3759,"polars_plan::dsl::function_expr::pow"],[3760,"polars_plan::dsl::function_expr::strings"],[3761,"polars_plan::dsl::function_expr::struct_"],[3762,"polars_plan::dsl::functions::temporal"],[3763,"polars_plan::dsl::options"],[3764,"core::iter::traits::collect"],[3765,"polars_lazy::dsl::eval"],[3766,"polars_core::utils"],[3767,"polars_time::windows::duration"],[3768,"polars_time::windows::group_by"],[3769,"polars_core::datatypes::time_unit"],[3770,"serde::de"],[3771,"polars_core::series"],[3772,"polars_plan::plans"],[3773,"polars_core::series::ops"],[3774,"polars_plan::dsl::dt"],[3775,"core::cmp"],[3776,"polars_lazy::dsl::list"],[3777,"polars_arrow::legacy::kernels::ewm"],[3778,"polars_core::chunked_array::ops"],[3779,"core::fmt"],[3780,"polars_plan::plans::apply"],[3781,"polars_ops::frame::join::iejoin"],[3782,"polars_plan::dsl::function_expr::range"],[3783,"polars_plan::dsl::function_expr::array"],[3784,"polars_plan::dsl::function_expr::list"],[3785,"polars_plan::dsl::function_expr::business"],[3786,"polars_plan::dsl::function_expr::binary"],[3787,"alloc::string"],[3788,"polars_plan::plans::options"],[3789,"polars_schema::schema"],[3790,"core::hash"],[3791,"polars_ops::series::ops::interpolation::interpolate"],[3792,"polars_ops::series::ops::is_between"],[3793,"polars_plan::dsl::name"],[3794,"polars_plan::plans::lit"],[3795,"polars_core::utils::supertype"],[3796,"polars_plan::dsl::python_udf"],[3797,"polars_utils::idx_vec"],[3798,"polars_arrow::legacy::kernels::rolling::no_nulls"],[3799,"polars_ops::series::ops::rank"],[3800,"polars_time::group_by::dynamic"],[3801,"polars_core::chunked_array::ops::rolling_window"],[3802,"polars_core::datatypes"],[3803,"polars_core::chunked_array"],[3804,"polars_time::chunkedarray::rolling_window"],[3805,"polars_core::chunked_array::ops::search_sorted"],[3806,"serde::ser"],[3807,"polars_core::series::series_trait"],[3808,"polars_plan::dsl::string"],[3809,"polars_ops::chunked_array::list::to_struct"],[3810,"compact_str"],[3811,"polars_ops::series::ops::business"],[3812,"polars_arrow::legacy::kernels::time"],[3813,"polars_plan::dsl::function_expr::rolling"],[3814,"polars_plan::dsl::function_expr::rolling_by"],[3815,"polars_plan::dsl::function_expr::trigonometry"],[3816,"polars_core::frame"],[3817,"rayon::iter"],[3818,"polars_utils::python_function"],[3819,"pyo3::types::any"],[3820,"pyo3::instance"],[3821,"polars_utils::arena"],[3822,"polars_plan::plans::ir"],[3823,"polars_plan::plans::aexpr"],[3824,"polars_plan::frame::opt_state"],[3825,"polars_plan::plans::anonymous_scan"],[3826,"polars_lazy::scan::anonymous_scan"],[3827,"polars_core::schema"],[3828,"polars_utils::index"],[3829,"polars_lazy::frame::exitable"],[3830,"polars_utils::aliases"],[3831,"polars_lazy::scan::csv"],[3832,"polars_lazy::scan::ipc"],[3833,"polars_lazy::scan::ndjson"],[3834,"polars_lazy::scan::parquet"],[3835,"polars_lazy::scan::file_list_reader"],[3836,"polars_io::cloud::options"],[3837,"polars_ops::frame::join::args"],[3838,"bitflags::iter"],[3839,"std::path"],[3840,"polars_plan::plans::ir::scan_sources"],[3841,"polars_io::options"],[3842,"polars_io::csv::write::options"],[3843,"polars_io::ipc::write"],[3844,"polars_io::json"],[3845,"polars_io::parquet::write::options"],[3846,"core::num::nonzero"],[3847,"polars_io::csv::read::options"],[3848,"chrono_tz::timezones"],[3849,"polars_core::datatypes::any_value"],[3850,"polars_core::frame::group_by::proxy"],[3851,"std::io"],[3852,"polars_io::parquet::write::writer"],[3853,"chrono::naive::datetime"],[3854,"polars_plan::dsl::functions::selectors"],[3855,"polars_plan::dsl::functions::horizontal"],[3856,"polars_plan::dsl::functions::arity"],[3857,"polars_plan::dsl"],[3858,"polars_plan::dsl::functions::range"],[3859,"polars_plan::dsl::functions::index"],[3860,"polars_plan::dsl::functions::coerce"],[3861,"polars_plan::dsl::functions::syntactic_sugar"],[3862,"polars_plan::dsl::functions::business"],[3863,"polars_plan::dsl::functions::concat"],[3864,"polars_plan::dsl::functions::correlation"],[3865,"polars_plan::dsl::functions::repeat"],[3866,"polars_utils::python_function::serde_wrap"],[3867,"polars_plan::client"]],"i":"`````CjAhj`Dl1Gh0EfGf422666Ib7`777H`0Gl79`69``9`9AKbG`92;``Gn<3``<<:`:`3<4443<94Gd0======444`4432=8==Gb<5`6>996>>>><`=><I````?777=Hb0``Cj0?9>0<0?``0?05Gj`3==1:::19?j22Ah`Gh000000<00000<6`=5=24Dl`993>>5``355Ef06?0016161`>>>160>60>>>7019>6`20046>``0Gf?HnH`099939`:94Gl::::::8`;::1::0:1:2`::70:::0`8::::::8188`111?15:`111111`:``78;5:1:`8`00111:0::0000000>>:40`::`:1`:500`88``;04301FhFjFlFn9<G`Gb:BfGd;>Gj9Gn;HbCjHdHfHhHjHlHnI`IbIdAhF`hl1111j0400`AlAn2`;?2102`22`222`2`22222221021022`2`Dd<3DhDl``5`5`95555555559Ff5348O`8FhFjFlFn6;G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FfAlDdAnhO`lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`j0`8En2DhFb4`33`333333FhFjFlFnDl8G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF````````AlAnj00021`0`000`0Il01````>=<1Bf00?><;:972Ff5Dd5hO`lFhFjFlFnDl<G`GbEf==GdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FfAlDdAnhO`lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`DljG`GbEfBf0000GdGfGhGjGlGnH`HbCjHhHjHlHnI`IbIdAhAnj00FfAlDd4hO`lFhFjFlFnDl;G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`jAn1`1```1Dl22G`GbEfBf0GdGfGhGjGlGnH`HbCjHhHjHlHnI`IbIdAhj000Gb00Ef00Gd00Gf00Gh00Gj00Gl00Gn00H`00Hb00Hh00Hj00Hl00Hn00I`00Ib00Id00Ah00Kl0j0008000Al11l002222`An33Bf44DhFbEnLf88G`GbEf07Gd0GfGh0Gj0Gl0Gn0H`0Hb0Cj0HdHfHhHjHlHnI`IbIdAhF``67`jFfAlDdAnhO`lFhFjFlFnDl<<<<<<<<<<<<<<G`GbEf0Bf000000000000GdGfGhGjGlGnH`HbCj0000HdHfHhHjHlHn0I`IbIdAh0000F`Bf1`j`An101Al12FfJjBdDdLf77hDl99GbEfGdGfGhGjGlGnH`HbCjHhHjHlHnI`IbIdAhAnj0HdHf25`FfAlDd6hO`lFhFjFlFnDl=G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`0``j0FfAlDdAnhO`lFhFjFlFnDl<G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`jNjAnhEf4110444444144`4`4114Al3lO`7`57`577`777777707`7Dd0Bf090209`99`191111G``58:``8:``58::HdHf0`7:<`Hh21=2=8;==>==1===55421?>==`=`=Id?>FjFn=j0000`0>0::0`00`000`00;`00900F`=An2222``2222222222222222222h33Hl0<42244:9Dl5<GbEf?????GdGfGhGjGlGnH`HbCjHhHj>HnI`IbIdAhAn0j1Al211111111210211`1021181`113O`0`132`BfEf5444`FhFl`HdHf198763Fj3FnDl;G`Gb9:GdGfGhGjGlGnH`HbCj?>HhHjHlHnI`IbIdAhF`jDd1EfGdGhGjGlGnH`HbCjAlAnO`==Ff3=2h2lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FfAlDdAnhO`lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`Dd0j11DhEnBd3EfGdGhGjGlGnH`HbCjFfAl?AnhO`lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF``hAnAl1j01200061206Ff2Dd45O`lFhFjFlFnDl9G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`9`FjFn:<<;Ddl=>=>=>==>=>=11>=>>=>j?AKdAKfAKh2102AKjAKlAKnAL`ALbALd0ALfALh4ALjALlALnAM`3AMb528AMd1AMf11098432323570;5AMhAMjAMlAMnAN`ANbANdANfANhANjANlANn087;87;7;AO`AOb8AOdAOfAOh0?1AOjAOlAOnB@`4AMhB@bB@dB@fB@hB@jB@l:=;B@nBA`BAbBAdBAfBAh54BAj321BAlBAnBB`03721BBb0`Ed0000000000000000000``Kf000000000000000000000000000000000000000000000000000000CjGh0Gf112222222H`0Gl44``4`404`Gn515515222152Gd0666666222226662363666666333Hb077477`772Gj855584887777777477777451582255888858844484844414878464558888`184888888188588485888488848888885555358`5555558`1858`44555848844444442284888584414645`````AKjAKlAKnAMhAMjAMlAMnAN`ANbANdANfANhANjANlANn087;87;7;AO`AOb8AOdAOfAOh0?1AOjAOlAOnB@`4AMhB@bB@dB@fB@hB@jB@l:=;B@nBA`BAbBAdBAfBAh54BAj321BAlBAnBB`03721BBb0`GjGn0`0ABd0000`00000000000000000000000000000BBd00ABf000`0000000000000000000000000000ABh00000000000000`0000000000000000000000000000````Hd```````````````````````````0Hf`````10`````````100`1010```````10````10101```````ACdOhACj2102122221021022102222221022010210210222102102102102102`AAf000000000000000000000000000000000000000000000000000000000000`F`0000`ADh000000````````0`000000```0AEdABnADfADnAEhAEjAElAEn866580ADj77699999999087654321908765432197731877876543219876543219876543219AF`053421888:005:888642:198765432:198765432:8888:19988765432:88:88:989888100530538:::::119888765432:::::::8800528887421426198765432:8:::198765432::::::88118AG`99299843999999916475372646464;9293`9916453;9929164753999999973;9999;99999999979991649;;29;98999:9876543;;92:9876543;2:9876543;92:9876543;;9999993292:9876543;2466649999999696666666464646616644969119966164919664464646966916496699`````AFh0AIhAIj0Kb3`011120``1`00111300030311111`0````3``AHn0133``20032``12``4`114211122222221`AFfA@bJdAFn84AH`AHbAHd:A@`AHf;AIlACb<888ADl0007;:9AJh9AFh>AJf:98AIh87AIj76KbAFfA@bJd8AFn8AHn8AH`AHbAHd:A@`AHf;AIlACb<;:98AFh8765?43>21=<;:908765?43>21=<;:908765?43>21=<;:9:63=3::<;987654321=<;:AJh:19AJf987AIh76AIj65KbAFfA@bJd7AFn9AHn8AH`AHbAHd:A@`AHf;AIlACb<3<<;:98AFh8765?43>21=1=<;:AJh:19AJf987AIh76AIj65KbAFfA@bJdAFn9AHnAH`AHbAHd:A@`AHf;AIlACb;;;:::999888AFh00888777666555333222111<<;::ADl:1199876AIh65AIj545?>=AJh==4<AJf<;:3982276Kb73AJbAFfA@bJdAFn;AHnAH`AHbAHd=A@`AHf>AIlACb86;6;:;:9?8AFh8?765AIh54AIj43Kb?>=AJh=4<AJf<;:498376225?5?53=?>AFfObJd36?>=;6<00040AHn111AFnADl5A@b8=444608`=AJbAHf33:8264>5AH`AHbAHdAIhA@`5AIjAIlACbKb8=2=AFf:>>140<Jd?AFhAHn<;:98=76542105;=22223?2AJhAFn32AJf?>=<;AHf;:987A@b743652AH`AHbAHdAIhA@`6AIjAIlACbKbJd00AFhAHnAFf=3AJhAFn43AJf?>=<;AHf;:9824A@b843762AH`AHbAHdAIhA@`6AIjAIlACbKbJd0=>=8;BBf0BBhBBjBBlBBnBC`BCbBCdBCf55BChBCjBCl14;3BCn:BD`49BDbBDd0>BDfBBf240;4BDh;13:624733?=BBj0BBl>BDj00","f":"```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{bd}f}00000000000000000000000000000{hj}{{l{Ab{{A`{n}}}}}j}{{hj}{{Af{jAd}}}}000{jj}{{jj}}{{AhAh}}2{{jc}j{{Aj{n}}}}{{}j}{Alj}{Anj}{{jB`}j}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}``{{jc}j{{Aj{j}}}}4321{{jcB`}j{{Aj{j}}}}{{jc{Bf{{Ab{Bd}}}}}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{{b{j}}{b{Cdc}}b}{{Af{CfAd}}}{{Ch{{b{j}}b}{{Bj{{Af{CfAd}}}}}}}}{{jc{b{{A`{j}}}}{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jCj{b{{A`{j}}}}B`B`}j}{{ce{Bf{{Ab{Bd}}}}B`}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{jj}{{jjClCn}j}11111{{jj}j}2>=2>=2{{jD`}j}{{cDb}j{{Bb{{A`{j}}}}}}4{cj{{Aj{j}}}}{{{b{Dd}}}{{b{{A`{Df}}}}}}`{jAl}{{{b{Dh}}}{{b{Dj}}}}{{{b{Dl}}}{{b{j}}}}{{{Dn{j}}}j}{{{b{E`}}}j}{{j{Bl{Eb}}}j}`{jEd}{{jEfj}j}{{AhAh}}?????????0{b{{b{c}}}{}}000000000000000000000000000000000000{{{b{Cd}}}{{b{Cdc}}}{}}000000000000000000000000000000000000?{{jcg{Dn{B`}}}j{{Aj{j}}}{{Aj{j}}Eh}{{Bb{{A`{e}}}}}}{{jj{Ej{B`}}{Dn{El}}}j}`{{{b{En}}{b{n}}}{{Af{nAd}}}}{{F`{Dn{j}}}{{Af{jAd}}}}{{{b{Dh}}{b{Cd{A`{Bh}}}}}{{Af{{Bl{Bh}}Ad}}}}{{{b{Fb}}BhBh}{{Af{BhAd}}}}{{F`{Dn{j}}}j}{{jCn}j}0{{jCnFd}j}`{jFf}{jj}0{{jjj}j}{{jj}j}0{{{b{Fh}}}Fh}{{{b{Fj}}}Fj}{{{b{Fl}}}Fl}{{{b{Fn}}}Fn}{{{b{Dl}}}Dl}{{{b{j}}}j}{{{b{{G`{c}}}}}{{G`{c}}}{EhEh}}{{{b{Gb}}}Gb}{{{b{Ef}}}Ef}{{{b{{Bf{c}}}}}{{Bf{c}}}Eh}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{Gn}}}Gn}{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{{b{Cj}}}Cj}{{{b{Hd}}}Hd}{{{b{Hf}}}Hf}{{{b{Hh}}}Hh}{{{b{Hj}}}Hj}{{{b{Hl}}}Hl}{{{b{Hn}}}Hn}{{{b{I`}}}I`}{{{b{Ib}}}Ib}{{{b{Id}}}Id}{{{b{Ah}}}Ah}{{{b{F`}}}F`}{{b{b{Cdc}}}f{}}00000000000000000000000000000{bf}00000000000000000000000000000{{{b{{A`{j}}}}}j}{cj{{Aj{n}}}}{ej{{Aj{n}}}{{Ih{}{{If{c}}}}}}{{{Dn{j}}}{{Af{jAd}}}}{{eB`}{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{e{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{c{b{E`}}B`}j{{Bb{{A`{j}}}}}}{{Alc}j{{Aj{j}}}}{{Anc}j{{Aj{j}}}}{jj}00021{{jjIj}j}{{jB`}j}{{jceB`}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}111{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}2{{IljInB`}j}0{{j{Dn{J`}}{Bl{c}}B`B`}j{{Jb{n}}}}{{jjJdJf}j}{Hdj}{{jjJdJf{Bl{Jh}}{Bl{n}}}j}0```{{}j}{{}{{Bf{{Ab{Jj}}}}}}{{}{{Bf{{Ab{Fb}}}}}}{{}{{Bf{{Ab{Bd}}}}}}{{}Hd}{{}Hf}{{}Hj}{{}Hl}{{}Hn}{{}I`}{{}Id}{jj}{In{{b{c}}}{}}0000000000000000{{{b{{Bf{c}}}}}b{}}11111111111111111111{In{{b{Cdc}}}{}}000000000000000000000000000000000000{c{{Af{Dl}}}Jl}{c{{Af{j}}}Jl}{c{{Af{{G`{e}}}}}Jl{JnEh}}{c{{Af{Gb}}}Jl}{c{{Af{Ef}}}Jl}{c{{Af{{Bf{{Ab{Dh}}}}}}}Jl}{c{{Af{{Bf{K`}}}}}Jl}{c{{Af{{Bf{{Ab{Kb}}}}}}}Jl}{c{{Af{{Bf{{Ab{Bd}}}}}}}Jl}{c{{Af{{Bf{{Ab{En}}}}}}}Jl}{c{{Af{Gd}}}Jl}{c{{Af{Gf}}}Jl}{c{{Af{Gh}}}Jl}{c{{Af{Gj}}}Jl}{c{{Af{Gl}}}Jl}{c{{Af{Gn}}}Jl}{c{{Af{H`}}}Jl}{c{{Af{Hb}}}Jl}{c{{Af{Cj}}}Jl}{c{{Af{Hh}}}Jl}{c{{Af{Hj}}}Jl}{c{{Af{Hl}}}Jl}{c{{Af{Hn}}}Jl}{c{{Af{I`}}}Jl}{c{{Af{Ib}}}Jl}{c{{Af{Id}}}Jl}{c{{Af{Ah}}}Jl}{{AnClKd}j}{{jClKd}j}{{jj}}{{jc}j{{Aj{j}}}}{Inf}000000000000000000000000000000000000{jj}{Anj}1`{jKf}{{{b{Cn}}}j}{cj{{Bb{{A`{Cn}}}}}}{Hfj}{{jJ`B`}j}{{{b{Dl}}{b{Dl}}}B`}9{{{b{j}}{b{j}}}B`}{{{b{{G`{c}}}}{b{{G`{c}}}}}B`{KhEh}}{{{b{Gb}}{b{Gb}}}B`}{{{b{Ef}}{b{Ef}}}B`}{{{b{{Bf{K`}}}}{b{{Bf{K`}}}}}B`}{{{b{{Bf{{Ab{c}}}}}}{b{{Bf{{Ab{c}}}}}}}B`Kj}{{{b{Gd}}{b{Gd}}}B`}{{{b{Gf}}{b{Gf}}}B`}{{{b{Gh}}{b{Gh}}}B`}{{{b{Gj}}{b{Gj}}}B`}{{{b{Gl}}{b{Gl}}}B`}{{{b{Gn}}{b{Gn}}}B`}{{{b{H`}}{b{H`}}}B`}{{{b{Hb}}{b{Hb}}}B`}{{{b{Cj}}{b{Cj}}}B`}{{{b{Hh}}{b{Hh}}}B`}{{{b{Hj}}{b{Hj}}}B`}{{{b{Hl}}{b{Hl}}}B`}{{{b{Hn}}{b{Hn}}}B`}{{{b{I`}}{b{I`}}}B`}{{{b{Ib}}{b{Ib}}}B`}{{{b{Id}}{b{Id}}}B`}{{{b{Ah}}{b{Ah}}}B`}{{jc}j{{Aj{j}}}}{{b{b{c}}}B`{}}00000000000000000000000000000000000000000000000000000000{{KljB`}j}0{{jKn}j}{{jjJd}j}11`{{jc}j{{Jb{n}}}}{{jc}j{{Bb{{A`{Cn}}}}}}{jj}{Alj}1{{jjj}j}{{lCl}j}{{l{b{E`}}}j}{{le}j{{Aj{n}}}{{Ih{}{{If{c}}}}}}<<{{jL`}j}={{}j}{Anj}88{{}{{Bf{{Ab{Bd}}}}}}9{{jj}j}{{{b{Dh}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Fb}}{b{CdLb}}}{{Af{fLd}}}}{{{b{En}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Lf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{j}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{{G`{c}}}}{b{CdLb}}}{{Af{fLd}}}Eh}{{{b{Gb}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Ef}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{{Bf{c}}}}{b{CdLb}}}{{Af{fLd}}}{}}{{{b{Gd}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Gf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Gh}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Gj}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Gl}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Gn}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{H`}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Hb}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Cj}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Hd}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hh}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hj}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hl}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hn}}{b{CdLb}}}{{Af{fLd}}}}{{{b{I`}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Ib}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Id}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Ah}}{b{CdLb}}}{{Af{fLd}}}}{{{b{F`}}{b{CdLb}}}{{Af{fLd}}}}{{jce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}``{{{b{E`}}c}{{Af{jAd}}}{{Bb{{A`{j}}}}}}{{j{Bl{Eb}}}j}{cc{}}00000000000{Dlj}{Ijj}{B`j}{Lhj}{J`j}{Ljj}{{{b{E`}}}j}7{Llj}{Ebj}{Elj}{Clj}{Lnj}{M`j}==={MbEf}{Md{{Bf{{Ab{Dh}}}}}}{Mf{{Bf{{Ab{Dh}}}}}}{Cj{{Bf{{Ab{Dh}}}}}}{Mh{{Bf{{Ab{Dh}}}}}}{Gj{{Bf{{Ab{Dh}}}}}}{Gd{{Bf{{Ab{Dh}}}}}}{Gl{{Bf{{Ab{Dh}}}}}}{H`{{Bf{{Ab{Dh}}}}}}{Mj{{Bf{{Ab{Dh}}}}}}{Ml{{Bf{{Ab{Dh}}}}}}{Hb{{Bf{{Ab{Dh}}}}}}{Gh{{Bf{{Ab{Dh}}}}}}{cc{}}00000000{GjCj}{H`Cj}2{GhCj}{MlCj}44444{I`Hn}5555{nAh}6{{{b{E`}}}Ah}{jAh}{MnAh}9{Cn{{Bf{{Ab{Bd}}}}}}``{{jc{Bf{{Ab{Bd}}}}N`}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}`{{AnjB`}j}{{jc}j{{Aj{j}}}}{{Anjj}j}{{jInIn}j}{{AljB`}j}43{Ffj}{{{b{Jj}}{b{{Nb{Cn}}}}Nd{b{Df}}{b{Df}}}{{Bl{Df}}}}{{{b{Bd}}{b{{Nb{Cn}}}}Nd{b{{A`{Df}}}}}{{Af{DfAd}}}}{{{b{Dd}}}In}{{{b{Lf}}{b{{Nb{Cn}}}}}{{Af{{Ab{{Nb{Cn}}}}Ad}}}}88{{{b{h}}}B`}{{{b{Dl}}{b{Cdc}}}fNf}{{jEbEbEbEb}j}{{{b{j}}{b{Cdc}}}fNf}{{{b{Gb}}{b{Cdc}}}fNf}{{{b{Ef}}{b{Cdc}}}fNf}{{{b{Gd}}{b{Cdc}}}fNf}{{{b{Gf}}{b{Cdc}}}fNf}{{{b{Gh}}{b{Cdc}}}fNf}{{{b{Gj}}{b{Cdc}}}fNf}{{{b{Gl}}{b{Cdc}}}fNf}{{{b{Gn}}{b{Cdc}}}fNf}{{{b{H`}}{b{Cdc}}}fNf}{{{b{Hb}}{b{Cdc}}}fNf}{{{b{Cj}}{b{Cdc}}}fNf}{{{b{Hh}}{b{Cdc}}}fNf}{{{b{Hj}}{b{Cdc}}}fNf}{{{b{Hl}}{b{Cdc}}}fNf}{{{b{Hn}}{b{Cdc}}}fNf}{{{b{I`}}{b{Cdc}}}fNf}{{{b{Ib}}{b{Cdc}}}fNf}{{{b{Id}}{b{Cdc}}}fNf}{{{b{Ah}}{b{Cdc}}}fNf}{{Anj}j}{{j{Bl{In}}}j}{{j{Bl{j}}{Bl{In}}B`B`}j}``{jj}`{cj{{Bb{{A`{Cl}}}}}}{{}In}000000000000000000000000000000000000`{{jjClCn}j}{{jjj}j}{{jNh}j}{{jj}j}{{}c{}}000000000000000000000000000000000000{{{b{j}}}}{NjAn}{AnAn}{{hB`}{{Af{{`{Nl}}Ad}}}}{{{b{Ef}}}B`}{{jccNn}j{{Aj{j}}}}{{{b{h}}}B`}{{{b{h}}B`}B`}3???{{jc}j{{Aj{j}}}}{jj}02000000330{{AljB`}j}{{AnjB`}j}{lj}{O`j}{{jB`B`}j}{{}j}{Anj}7107{jAn}{cjOb}{{jJ`}j}:;;:;;{{O`c}j{{Bn{{b{n}}}{{Bj{{Af{nAd}}}}}}C`Cb}}{{jc{Bf{{Ab{Bd}}}}}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{j{b{Cdc}}{b{Cd}}}{{Af{jAd}}}{{Ch{j{b{Cd}}}{{Bj{{Af{jAd}}}}}}}}{{{b{Dd}}{Bl{{b{n}}}}}{{Af{DfAd}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Od{{b{Cn}}}{{Bj{Cn}}}}}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{Cn}}}{{Bj{{Af{CnAd}}}}}}C`Cb}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{{A`{{b{Cn}}}}}}}{{Bj{{Af{CnAd}}}}}}C`Cb}}{{jc}j{{Ch{j}{{Bj{j}}}}}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{Df}}}{{Bj{{Af{DfAd}}}}}}C`Cb}}{{O`{Ab{Bn}}}j}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{{A`{Df}}}}}{{Bj{{Af{DfAd}}}}}}C`Cb}}:{{ce{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{jc{b{{A`{j}}}}{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jCj{b{{A`{j}}}}B`{Bl{Of}}}j}2{{{b{Dd}}}{{Af{DfAd}}}}{{jOhB`}j}1111{{{G`{{Bf{{Ab{Dh}}}}}}}{{Af{{Bf{{Ab{Dh}}}}Ad}}}}{{{b{E`}}}j}{Alj}{Anj}{jj}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}42104321{jh}```54321```2`{{jj}}543{jO`}`44`{j}{{jc}j{{Aj{j}}}}0<{{{b{{A`{Df}}}}}Dd}{c{{Bf{c}}}{}}{{jjj}Hd}{{}Hf}{jAh}{{n{Dn{Df}}{Bf{{Ab{Bd}}}}c}F`Dh}{{{b{j}}{b{Cd{Oj{{b{j}}}}}}}f}{{j{b{Cd{Oj{j}}}}}f}>>{Clj}?``9{{Fjc}j{{Aj{j}}}}{{Fnc}j{{Aj{j}}}}{{{b{h}}}{{Af{nAd}}}}{{je}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{je{Bl{{Ol{eD`}}}}I`}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{jj}j}{jj}0{{jjIj}j}{{}j}{h{{Af{{Dn{j}}Ad}}}}{{jc}j{{Aj{j}}}}{{O`{b{E`}}}j}05`{{j{Dn{J`}}{Bl{c}}B`B`B`}j{{Jb{n}}}}{{jIn{Bl{c}}B`B`B`}j{{Jb{n}}}}{{{b{E`}}jOn}j}{{jjOn}j}9{{jA@`{Bl{Eb}}}j}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{jB`}j}{{jj}}{{le}j{{Aj{n}}}{{Ih{}{{If{c}}}}}}{{cj}j{{Aj{j}}}};{{jcc}j{{Aj{j}}}}{{{b{Dd}}{Bl{Cn}}}{{Af{DfAd}}}}{{jcc{Bl{c}}{Bl{Cn}}}j{{Aj{j}}}}{{j{b{{A`{Cl}}}}}j}`{Alj}{Anj}{jj}00{{jA@b}j}{{jjHh}j}0{{j{Ab{Bn}}{Bf{{Ab{Bd}}}}A@d}j}{{jInc}j{{Ch{{b{Cd{A@h{A@f}}}}}{{Bj{{Bl{J`}}}}}}C`CbA@j}}{{jA@d}j}{{jjA@l}j}101010{{jOnJ`A@d}j}{{jjOnJ`A@l}j}{{jInB`}j}434343{{{b{h}}}{{Dn{n}}}}{{jLh}j}{{jEl}j}``{{}{{Bf{{Ab{Bd}}}}}}{{jjB`B`{Bl{Eb}}}j}{{AnjB`B`{Bl{Eb}}}j}01{{jcA@n}j{{Aj{j}}}}``{{{b{Dl}}c}AfAA`}{{{b{j}}c}AfAA`}{{{b{{G`{c}}}}e}Af{AAbEh}AA`}{{{b{Gb}}c}AfAA`}{{{b{Ef}}c}AfAA`}{{{b{{Bf{{Ab{En}}}}}}c}AfAA`}{{{b{{Bf{{Ab{Bd}}}}}}c}AfAA`}{{{b{{Bf{{Ab{Kb}}}}}}c}AfAA`}{{{b{{Bf{K`}}}}c}AfAA`}{{{b{{Bf{{Ab{Dh}}}}}}c}AfAA`}{{{b{Gd}}c}AfAA`}{{{b{Gf}}c}AfAA`}{{{b{Gh}}c}AfAA`}{{{b{Gj}}c}AfAA`}{{{b{Gl}}c}AfAA`}{{{b{Gn}}c}AfAA`}{{{b{H`}}c}AfAA`}{{{b{Hb}}c}AfAA`}{{{b{Cj}}c}AfAA`}{{{b{Hh}}c}AfAA`}{{{b{Hj}}c}AfAA`}{{{b{Hl}}c}AfAA`}{{{b{Hn}}c}AfAA`}{{{b{I`}}c}AfAA`}{{{b{Ib}}c}AfAA`}{{{b{Id}}c}AfAA`}{{{b{Ah}}c}AfAA`}{{Anc}j{{Aj{j}}}}0{{jAAd}j}1{{Alj}j}{{Anj}j}{{jj}j}{{jce}j{{Aj{j}}}{{Aj{j}}}}{jj}{{j{Bl{Eb}}}j}111{{jB`}j}{{Anjj}j}4{{AlD`}j}{{AnD`}j}{{jD`}j}{{jeDb}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{jjIjB`}j}8{{AlIj}j}{{AnIj}j}{{jIj}j}{jAAf}`{{jCn}j}`{jl}{{jj}}{{AhAh}}{{O`{b{E`}}}j}0{{{b{E`}}}j}{Alj}{Anj}{jj}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}{{}{{Bf{{Ab{Bd}}}}}}{EfEf}{{Anj}j}{{j{Bl{In}}}j}55{{jjj}j}{{Fhc}Fj{{Aj{j}}}}{{Flc}Fn{{Aj{j}}}}{{jjJdJf}j}```{{AnIn}j}{{{b{j}}{b{{Nb{Cn}}}}Nd}{{Af{DfAd}}}}={O`j}{bc{}}00000000000000000000000000000={{{b{Dd}}}{{Af{DfAd}}}}{bMn}000000000{{Al{Bl{{Ab{Bn}}}}}{{Af{jAd}}}}{{AnAAh}j}5{{jj}j}{{jcg{Dn{B`}}}j{{Aj{j}}}{{Aj{j}}Eh}{{Bb{{A`{e}}}}}}{c{{Af{e}}}{}{}}000000000000000000000000000000000000{{}{{Af{c}}}{}}000000000000000000000000000000000000{{{b{Dd}}c}{{Af{DfAd}}}{{Od{{b{Cn}}}{{Bj{{Af{CnAd}}}}}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Od{{b{{A`{{b{Cn}}}}}}}{{Bj{{Af{CnAd}}}}}}}}{{jc}{{Af{jAd}}}{{Ch{j}{{Bj{{Af{jAd}}}}}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Od{{b{Df}}}{{Bj{{Af{DfAd}}}}}}}};{{{b{Dh}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{{{b{En}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{{{b{Bd}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{b{{Af{AAjAAl}}}}000000000{bAAn}000000000000000000000000000000000000`{hj}{{Anc}j{{Aj{j}}}}{Alj}{Anj}{jj}02100{{jB`B`{b{E`}}B`}j}`{{AlIj}j}{{AnIj}j}{{jIj}j}`{{}c{}}000000000000000000000000000000000000`{cFh{{Aj{j}}}}{{Fjc}Fl{{Aj{j}}}}{{Fnc}Fl{{Aj{j}}}}`{{Hdj}Hd}0{{Hfj}Hf}{{{b{Dd}}Cn}{{Af{DfAd}}}}{{l{Dn{j}}}{{Af{jAd}}}}{{Hfjjj}Hf}{{Hdjjj}Hd}1545445454{{{b{Dd}}{Bl{Cn}}}{{Af{DfAd}}}}{{{b{Dd}}}{{Af{DfAd}}}}76{{HdJh}Hd}{{Hd{Bl{n}}}Hd}89{{jc}j{{Aj{j}}}}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{EdB`}j}{Edj}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{Edj}j}{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{Inf}3{cc{}}87{{}In}{{}c{}}96{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bAAn}3``{{Kfj{Ej{B`}}{Dn{El}}AB`}j}{Kfj}=<{{KfJh}j}1{{KfjJh}j}{{Kfn}j}333=<;3:3983333333333{{Kfj}j}44{{Kf{Bl{n}}jABb}j}15{{Kf{b{E`}}}j}65066666662:98;6656`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{ABd}}}ABd}{{b{b{Cdc}}}f{}}{bf}{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{c{{Af{ABd}}}Jl}{Inf}{{{b{ABd}}{b{ABd}}}B`}{{{b{ABd}}{b{CdLb}}}{{Af{fLd}}}}0{cc{}}{{{b{ABd}}{b{Cdc}}}fNf}{{}In}{{}c{}}{{{b{ABd}}c}AfAA`}{bc{}}{bMn}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{AAjAAl}}}}{bAAn}7```````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{ABf}}}ABf}{{b{b{Cdc}}}f{}}{bf}{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{c{{Af{ABf}}}Jl}{Inf}{{{b{ABf}}{b{ABf}}}B`}{{{b{ABf}}{b{CdLb}}}{{Af{fLd}}}}0{cc{}}{{{b{ABf}}{b{Cdc}}}fNf}{{}In}{{}c{}}{{{b{ABf}}c}AfAA`}{bc{}}{bMn}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{AAjAAl}}}}{bAAn}7````````````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{ABh}}}ABh}{{b{b{Cdc}}}f{}}{bf}{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{c{{Af{ABh}}}Jl}{Inf}{{{b{ABh}}{b{ABh}}}B`}{{b{b{c}}}B`{}}00{{{b{ABh}}{b{CdLb}}}{{Af{fLd}}}}0{cc{}}{{{b{ABh}}{b{Cdc}}}fNf}{{}In}{{}c{}}{{{b{ABh}}c}AfAA`}{bc{}}{bMn}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{AAjAAl}}}}{bAAn}7``{{}j}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}`0{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjClCn}j}{{cDb}j{{Bb{{A`{j}}}}}}{cj{{Aj{j}}}}{{{Dn{j}}}j}{{{b{E`}}}j}{{jCn}j}{{{b{{A`{j}}}}}j}{cj{{Aj{n}}}}{c{{ABl{{Dn{ABj}}}}}{{AC`{}{{If{ABn}}}}}}{ej{{Aj{n}}}{{Ih{}{{If{c}}}}}}{{cACb}{{ABl{ABn}}}{{Bb{{A`{ABn}}}}}}{{{Dn{j}}}{{Af{jAd}}}}{{eB`}{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}22{e{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{c{b{E`}}B`}j{{Bb{{A`{j}}}}}}{{jjIj}j}{{jceB`}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{jjJdJf}j}0{Hdj}{{jjJdJf{Bl{Jh}}{Bl{n}}}j}0``{{{b{Cn}}}j}{cj{{Bb{{A`{Cn}}}}}}{Hfj}{{jce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{{b{E`}}c}{{Af{jAd}}}{{Bb{{A`{j}}}}}}``{cj{{Bb{{A`{Cl}}}}}}{{jjClCn}j}{{jjj}j}{jj}0{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{{b{E`}}}j}00```0````2{{jjIj}j}{{{b{E`}}jOn}j}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{cj}j{{Aj{j}}}}{{jjHh}j}0``{{jjIjB`}j}6{{jjJdJf}j}0````````````{{bd}f}{b{{b{c}}}{}}00{{{b{Cd}}}{{b{Cdc}}}{}}00{{{b{Oh}}{b{Cd{A`{Bh}}}}}{{Af{{Bl{Bh}}Ad}}}}{{{b{ACd}}ABj}{{Af{ABjAd}}}}{{{b{ACd}}}ACd}{{b{b{Cdc}}}f{}}{bf}{In{{b{c}}}{}}00{In{{b{Cdc}}}{}}00{c{{Af{ACd}}}Jl}{Inf}00{{{b{ACd}}{b{ACd}}}B`}{{b{b{c}}}B`{}}00{{{b{ACd}}{b{CdLb}}}{{Af{fLd}}}}{cc{}}00{{{ACh{ACf}}}ACd}{{{b{ACj}}{b{{Nb{Cn}}}}Nd{b{{A`{Df}}}}}{{Af{DfAd}}}}{{}In}00{{}c{}}00{{{ACh{ACf}}{Bl{Cn}}B`B`}Oh}{{{Bl{Cn}}}ACj}{{{b{ACd}}c}AfAA`}{bc{}}{{{b{{A`{Ij}}}}}{{Af{ACdAd}}}}{c{{Af{e}}}{}{}}00{{}{{Af{c}}}{}}00{{{b{Oh}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{{{b{ACj}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{{{b{ACd}}}{{Af{{Dn{Ij}}Ad}}}}{bAAn}00;;;`{{AAfB`}j}{AAfj}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{AAfjB`}j}{{AAfj}j}1{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{Inf}37{{AAfjIn}j}4{{AAf{b{E`}}}{{Af{jAd}}}}65{cc{}}6;:{{}In}{{}c{}}{{AAf{b{E`}}B`}j}{{AAf{Bl{Cn}}{Bl{In}}}j}:>>{{AAfInACl}j}0{{AAfjjB`}j}0{{AAfjjB`Cl}j}{AAfj}{{AAfjj}j}?;;?;??????{{AAfCnHjj}j}{{AAfj}j}{{AAfHj}j}{{AAf{Bl{Jh}}{Bl{n}}Hjj}j}{{AAfIn}j}{{AAfjB`}j}7377{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bAAn}{{}c{}}8``````````````````````````````````{{bd}f}00000000{{ABnc}{{ABl{ABj}}}{{Bn{ACn{b{Cd{ADb{AD`}}}}{b{Cd{ADb{ADd}}}}}{{Bj{{ABl{f}}}}}}}}{{ABnB`}ABn}{{ADfc}ABn{{Bb{{A`{j}}}}}}{{}ADh}`{{ADjB`}ADj}{{{Ab{ADl}}ADn}{{ABl{ABn}}}}{{ABnABncc}ABn{{Aj{j}}}}{{ADfcAE`}ABn{{Bn{ABj}{{Bj{{ABl{ABj}}}}}}C`Cb}}{{ADhADh}ADh}{{{b{CdADh}}ADh}f}10{{{b{ADh}}}Lh}021{b{{b{c}}}{}}000000000{{{b{Cd}}}{{b{Cdc}}}{}}000000000{{ABnAEbcDb}ABn{{Bb{{A`{j}}}}}}{ABnABn}``{{{b{AEd}}}f}{{ABn{AEf{{b{E`}}Cn}}B`}ABn}{{ABnCnB`}ABn}{{{b{AEd}}}AEd}{{{b{ABn}}}ABn}{{{b{ADf}}}ADf}{{{b{ADn}}}ADn}{{{b{AEh}}}AEh}{{{b{AEj}}}AEj}{{{b{AEl}}}AEl}{{{b{AEn}}}AEn}{{{b{ADh}}}ADh}{{b{b{Cdc}}}f{}}00000000{bf}00000000{{{b{AF`}}}{{Bl{{b{AFb}}}}}}0{{{b{AEh}}}{{Bl{{b{AFb}}}}}}{{{b{AEl}}}{{Bl{{b{AFb}}}}}}``{{ADjAFd}ADj}{ABn{{ABl{ABj}}}}{ABn{{ABl{AEd}}}}{{{b{CdABn}}}{{ABl{AE`}}}}{ADhADh}{{{b{AF`}}{Dn{ABn}}}{{ABl{ABn}}}}0{{{b{AEh}}{Dn{ABn}}}{{ABl{ABn}}}}{{{b{ADh}}ADh}B`}{ABnABn}{{ABnABn{Bl{n}}}ABn}{{}ABn}{{}ADn}{{}AEj}{{}AEn}{{}ADh}{In{{b{c}}}{}}000000000{In{{b{Cdc}}}{}}000000000{{{b{ABn}}}{{ABl{Mn}}}}000{{ADhADh}ADh}{Inf}{{{b{CdAEd}}}f}11{{ABne}ABn{{Aj{Ah}}}{{Ih{}{{If{c}}}}}}22222220{{ABn{Bl{{Dn{j}}}}}ABn}8{{{b{ABn}}B`}{{ABl{Mn}}}}{{ABne}ABn{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{{b{CdADh}}c}f{{Ih{}{{If{ADh}}}}}}{{{b{AEd}}}{{Bl{{ABl{ABj}}}}}}{{ABnIn}{{ABl{ABj}}}}{{{b{AEd}}}{{ABl{ABj}}}}{{ABnc}ABn{{Aj{j}}}}0{{ABnj}ABn}{ADjABn}{AF`{{ABl{ABn}}}}0{AEh{{ABl{ABn}}}}{AEl{{ABl{ABn}}}}210{ABnABn}{{{b{ADh}}{b{CdLb}}}{{Af{fLd}}}}0000{{ADjB`}ADj}{cc{}}0{ADfABn}{KbABn}22222222{Lh{{Bl{ADh}}}}{LhADh}00{cADh{{Ih{}{{If{ADh}}}}}}{{{b{E`}}}{{Bl{ADh}}}}{{ABnABncc}ABn{{Aj{j}}}}{{{b{ABn}}}ADh}{{{b{AF`}}}B`}0{{{b{AEh}}}B`}`{{ABne}ADf{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{ABnjcAFf}ADf{{Bb{{A`{j}}}}}}1{{ADf{Bl{In}}}ABn}``{{ADjAFh}ADj}```{{}In}0000000008{{{b{CdADh}}ADh}f}{{ADhADh}ADh}{{{b{ADh}}ADh}B`}{{}c{}}000000000{ADh}{{{b{ADh}}}B`}0{{{b{ADh}}}{{AFj{ADh}}}}{{{b{ADh}}}{{AFl{ADh}}}}{{ABnABnccAFn}ABn{{Bb{{A`{j}}}}}}{ABnADj}{{ADjB`}ADj}{{ADj{Dn{j}}}ABn}{ABnABn}{AG`ABn}1{{ABnABncc}ABn{{Aj{j}}}}{{ADjc}ADj{{Bb{{A`{j}}}}}}{{ABnAEb}ABn}``{{AElB`}AEl}`{{ABncAGb{Bl{{Ab{Lf}}}}{Bl{{b{E`}}}}}ABn{{Bn{ABj}{{Bj{{ABl{ABj}}}}}}C`Cb}}{{ABnACdAGb{Bl{AE`}}B`}ABn}777{{ABnABnc}{{ABl{ABn}}}{{Aj{n}}}}8{{{b{AF`}}}{{Bl{In}}}}{{{b{AEh}}}{{Bl{In}}}}{{{b{AEl}}}{{Bl{In}}}}````>{cAEh{{Bb{AGd}}}}{cAEl{{Bb{AGd}}}}{{{Ab{{A`{AGf}}}}}AEh}{{{Ab{{A`{AGf}}}}}AEl}{AGhAEh}{AGhAEl}{ADhADh}{ABnABn}{{ADjc}ADj{{Bb{{A`{j}}}}}}{{ABn{b{Cd{ADb{AD`}}}}{b{Cd{ADb{ADd}}}}}{{ABl{ACn}}}}``{ABn{{ABl{{Ol{ABjABj}}}}}}{{ABnjOn}ABn}{{{b{AF`}}}B`}{{{b{AEh}}}B`}{{{b{AEl}}}B`}``{{{b{CdADh}}ADh}f}{{ABneiB`}ABn{{Bb{E`}}}{{Ih{}{{If{c}}}}}{{Bb{E`}}}{{Ih{}{{If{g}}}}}}98{{ABnjcA@b}ADf{{Bb{{A`{j}}}}}}{{{b{AF`}}}{{Bl{{b{AGj}}}}}}{{{b{AEh}}}{{Bl{{b{AGj}}}}}}{{{b{AEl}}}{{Bl{{b{AGj}}}}}}```{{AGlAGnB`}ABn}{{cAEj}{{ABl{ABn}}}{{Bb{AGd}}}}{{{Ab{{A`{AGf}}}}AEj}{{ABl{ABn}}}}{{AGhAEj}{{ABl{ABn}}}}{{cAEn}{{ABl{ABn}}}{{Bb{AGd}}}}{{{Ab{{A`{AGf}}}}AEn}{{ABl{ABn}}}}{{AGhAEn}{{ABl{ABn}}}}``{{}ADh}{{{b{CdABn}}{b{Cd{ADb{AD`}}}}{b{Cd{ADb{ADd}}}}}{{ABl{AE`}}}}{{ABnc}ABn{{Bb{{A`{j}}}}}}0{{ABnABncc}ABn{{Aj{j}}}}{{{b{CdADh}}ADhB`}f}{{{b{ABn}}{ADb{AD`}}{ADb{ADd}}}f}{{ABnc}ABn{{Aj{j}}}}{{ABnce}ABn{{Aj{j}}}{{Aj{j}}}}{{ABncAH`}{{ABl{f}}}{{Bb{AGd}}}}{{ABncAHb}{{ABl{f}}}{{Bb{AGd}}}}{{ABnMn{Bl{AFb}}AHb}{{ABl{f}}}}{{ABncAHd}{{ABl{f}}}{{Bb{AGd}}}}{{ABncAHf}{{ABl{f}}}{{Bb{AGd}}}}{{ABnMn{Bl{AFb}}AHf}{{ABl{f}}}}`{{ABnClAEb}ABn}{{ABncDb}ABn{{Jb{n}}}}{{ABncDb}ABn{{Bb{{A`{j}}}}}}{{{b{AF`}}}{{b{AGh}}}}{{{b{AEh}}}{{b{AGh}}}}{{{b{AEl}}}{{b{AGh}}}}{{ABnIj}ABn}{{ADhADh}ADh}{{{b{CdADh}}ADh}f}{{ADjc}ADj{{Aj{n}}}}{ABnABn}3{{ABnAEb}ABn}{{ADf{Bl{In}}}ABn}{ABn{{ABl{AHh}}}}0{{{b{ABn}}B`}{{ABl{Mn}}}}{bc{}}000000007{{ABnAEbcDb}ABn{{Bb{{A`{j}}}}}}{c{{Af{e}}}{}{}}000000000{{}{{Af{c}}}{}}000000000{{{b{CdABn}}AHj}{{Bl{{ABl{{Bl{ABj}}}}}}}}{bAAn}000000000={{ABn{Bl{{Dn{Mn}}}}AHl}ABn}{{ABn{Bl{e}}AHl}ABn{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{ABn{Bl{{Dn{n}}}}AHl}ABn}1{{ABne}ABn{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{ABnId}ABn}`{{ADjAHn}ADj}{{ABnIj}ABn}{{}c{}}000000000{{ADjABn}ADj}{{AEl{Bl{AI`}}}AEl}{{AEhB`}AEh}{{AEhIn}AEh}{{AEh{Bl{AFb}}}AEh}{{AEl{Bl{AFb}}}AEl}{{ABnB`}ABn}0{{ABnj}ABn}{{ABnc}ABn{{Bb{{A`{j}}}}}}022{{AEh{Bl{n}}}AEh}{{ABnc}ABn{{Bb{{A`{ABn}}}}}}8{{AEh{Bl{AE`}}}AEh}{{AEhAIb}AEh}{{AEhIj}AEh};;;{{AElB`}AEl}5{{AEl{Bl{n}}}AEl}{{AEh{Bl{In}}}AEh}?>>{{AF`c}AF`{{Aj{{Bl{In}}}}}}1{{AEhc}AEh{{Aj{{Bl{In}}}}}}{{AElc}AEl{{Aj{{Bl{In}}}}}}{{AEl{Bl{In}}}AEl}>{{AEh{Bl{AId}}}AEh}{{ABnADh}ABn}{{AF`{Ab{{A`{AGf}}}}}AF`}0{{ABnB`}ABn}0{{AEh{Bl{Ij}}}AEh}{{AEhB`}AEh}{{AF`B`}AF`}1=3{{AF`c}AF`{{Aj{{Bl{AGj}}}}}}{{ABnc{Bl{AEb}}}ABn{{Aj{n}}}}{{AEhc}AEh{{Aj{{Bl{AGj}}}}}}{{AEh{Bl{AGj}}}AEh}{{AEl{Bl{AGj}}}AEl}{{AElc}AEl{{Aj{{Bl{AGj}}}}}}{{AEh{Bl{AE`}}}AEh}{{AEl{Bl{AE`}}}AEl}{{AEhc}{{ABl{AEh}}}{{Bn{AGl}{{Bj{{ABl{AGl}}}}}}}}1{{AEhIj}AEh}={{AEhIn}AEh}0>{{AF`AGh}AF`}{{AEhAGh}AEh}{{AElAGh}AEl}{{ABnB`}ABn}{{AEhB`}AEh}01{ABnABn}{{{b{ABj}}e{Bl{i}}{Bl{m}}B`{Bl{j}}{Bl{{b{E`}}}}}{{ABl{ABj}}}{{Aj{n}}}{{Ih{}{{If{c}}}}}{{Aj{n}}}{{Ih{}{{If{g}}}}}{{Aj{n}}}{{Ih{}{{If{k}}}}}}0```````````````````````````````````````````````````````````````````````````````````{{bd}f}000000000000000{{{b{Jd}}Cl{Bl{{b{AIf}}}}}{{Af{ClAd}}}}00{{{b{ADl}}}B`}00{{{b{ADl}}}{{b{Dj}}}}`{b{{b{c}}}{}}00000000000000000{{{b{Cd}}}{{b{Cdc}}}{}}00000000000000000{{{b{AFf}}}AFf}{{{b{A@b}}}A@b}{{{b{Jd}}}Jd}{{{b{AFn}}}AFn}{{{b{AFh}}}AFh}{{{b{AHn}}}AHn}{{{b{AH`}}}AH`}{{{b{AHb}}}AHb}{{{b{AHd}}}AHd}{{{b{AIh}}}AIh}{{{b{A@`}}}A@`}{{{b{AHf}}}AHf}{{{b{AIj}}}AIj}{{{b{AIl}}}AIl}{{{b{ACb}}}ACb}{{{b{Kb}}}Kb}{{b{b{Cdc}}}f{}}000000000000000{bf}000000000000000``{{{b{Jd}}{b{Jd}}}AIn}`{{b{b{c}}}AIn{}}``{{{b{Kb}}}{{Af{{Ab{{Nb{Cn}}}}Ad}}}}`{{{b{Jd}}}Cl}{{{b{Jd}}}B`}{{}AFf}{{}A@b}{{}AFn}{{}AHn}{{}AH`}{{}AHb}{{}AHd}{{}A@`}{{}AHf}{{}AIl}{{}ACb}{{}Kb}{In{{b{c}}}{}}00000000000000000{In{{b{Cdc}}}{}}00000000000000000`{{{b{Kb}}}{{Af{MnAd}}}}0{c{{Af{AFf}}}Jl}{c{{Af{A@b}}}Jl}{c{{Af{Jd}}}Jl}{c{{Af{AFn}}}Jl}{c{{Af{AFh}}}Jl}{c{{Af{AHn}}}Jl}{c{{Af{AH`}}}Jl}{c{{Af{AHb}}}Jl}{c{{Af{AHd}}}Jl}{c{{Af{AIh}}}Jl}{c{{Af{A@`}}}Jl}{c{{Af{AHf}}}Jl}{c{{Af{AIj}}}Jl}{c{{Af{AIl}}}Jl}{c{{Af{ACb}}}Jl}{c{{Af{Kb}}}Jl}`{{{b{Kb}}}{{Af{{`{Nl}}Ad}}}}{Inf}00000000000000000{{{b{AFf}}{b{AFf}}}B`}{{{b{A@b}}{b{A@b}}}B`}{{{b{Jd}}{b{Jd}}}B`}{{{b{AFn}}{b{AFn}}}B`}{{{b{AFh}}{b{AFh}}}B`}{{{b{AHn}}{b{AHn}}}B`}{{{b{AH`}}{b{AH`}}}B`}{{{b{AHb}}{b{AHb}}}B`}{{{b{AHd}}{b{AHd}}}B`}{{{b{AIh}}{b{AIh}}}B`}{{{b{A@`}}{b{A@`}}}B`}{{{b{AHf}}{b{AHf}}}B`}{{{b{AIj}}{b{AIj}}}B`}{{{b{AIl}}{b{AIl}}}B`}{{{b{ACb}}{b{ACb}}}B`}{{b{b{c}}}B`{}}00000000000000000000000000000000000`{{{b{AFf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{A@b}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Jd}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{ADl}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AFn}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AFh}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{AHn}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{AH`}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AHb}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AHd}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AIh}}{b{CdLb}}}{{Af{fLd}}}}{{{b{A@`}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AHf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AIj}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AIl}}{b{CdLb}}}{{Af{fLd}}}}{{{b{ACb}}{b{CdLb}}}{{Af{fLd}}}}`{cc{}}0000{AFhAFn}1111111111{AJ`AIj}222`{{{b{AIj}}}Cn}{{{b{AJb}}{Dn{Bh}}{b{AFf}}}{{Af{{Ol{Bh{Dn{Bh}}AJd}}Ad}}}}{{{b{AFf}}{b{Cdc}}}fNf}{{{b{A@b}}{b{Cdc}}}fNf}{{{b{Jd}}{b{Cdc}}}fNf}{{{b{AFn}}{b{Cdc}}}fNf}{{{b{AFh}}{b{Cdc}}}fNf}{{{b{AHn}}{b{Cdc}}}fNf}{{{b{AH`}}{b{Cdc}}}fNf}{{{b{AHb}}{b{Cdc}}}fNf}{{{b{AHd}}{b{Cdc}}}fNf}{{{b{AIh}}{b{Cdc}}}fNf}{{{b{A@`}}{b{Cdc}}}fNf}{{{b{AHf}}{b{Cdc}}}fNf}{{{b{AIj}}{b{Cdc}}}fNf}{{{b{AIl}}{b{Cdc}}}fNf}{{{b{ACb}}{b{Cdc}}}fNf}``````{{}In}00000000000000000{{}c{}}00000000000000000{{{b{Kb}}}}{{{b{AFh}}}B`}{{{b{Jd}}{Bl{{b{E`}}}}}B`}1{{{b{Jd}}}B`}2{{{b{AIj}}}B`}{{{b{AHn}}{b{AFh}}}{{Af{fAd}}}}2``{Obj}{Jdj}{AJfj}{AIjj}````{AIjAIj}`{{{b{Jd}}}Cl}8{{JdCl}Jd}`1{{{b{AHn}}}B`}{Jd};{ClJd}{AFhAFn}{{{b{ADl}}AJh}{{Af{{Bl{ABj}}Ad}}}}````{{{b{E`}}}Jd}`{{{b{Jd}}{b{Jd}}}{{Bl{AIn}}}}```{Kb{{Af{{Dn{Ij}}Ad}}}}`{{{b{AJb}}{Dn{Bh}}{b{A@b}}}{{Af{{Ol{Bh{Dn{Bh}}AJd}}Ad}}}}`{{{b{ADl}}AJh}{{Af{ABjAd}}}}{{{b{ADl}}{Bl{In}}}{{Af{{Ab{{Nb{Cn}}}}Ad}}}}`{{{b{AFf}}c}AfAA`}{{{b{A@b}}c}AfAA`}{{{b{Jd}}c}AfAA`}{{{b{AFn}}c}AfAA`}{{{b{AFh}}c}AfAA`}{{{b{AHn}}c}AfAA`}{{{b{AH`}}c}AfAA`}{{{b{AHb}}c}AfAA`}{{{b{AHd}}c}AfAA`}{{{b{AIh}}c}AfAA`}{{{b{A@`}}c}AfAA`}{{{b{AHf}}c}AfAA`}{{{b{AIj}}c}AfAA`}{{{b{AIl}}c}AfAA`}{{{b{ACb}}c}AfAA`}{{{b{Kb}}c}AfAA`}`{{{b{AFn}}}B`}````{{{b{AFn}}}{{b{n}}}}`{Kb{{Af{AHhAd}}}}{{{b{AIj}}}{{Bl{AJ`}}}}{bc{}}000000000000000{bMn}00`{{{b{AHb}}c}{{AJj{c}}}AJl}{{{b{AHf}}c}{{AJn{c}}}AJl}{{{b{Jd}}Cl{Bl{{b{AIf}}}}ceg}{{Af{ClAd}}}{{Bn{Cl}{{Bj{Cl}}}}}{{Bn{Cl}{{Bj{AK`}}}}}{{Bn{AK`}{{Bj{Cl}}}}}}{{{b{Jd}}Cl{Bl{{b{AIf}}}}}{{Af{ClAd}}}}00{c{{Af{e}}}{}{}}00000000000000000{{}{{Af{c}}}{}}00000000000000000{{{b{E`}}}{{Af{JdAd}}}}0{b{{Af{AAjAAl}}}}00{bAAn}00000000000000000`{{}c{}}00000000000000000{{{b{Jd}}}Cl}{{{b{Jd}}}B`}{{AFnAFd}AFn}`{{AFn{Bl{n}}}AFn}{{{b{AHb}}ABjc}{{Af{fAd}}}AJl}{{{b{AHf}}ABjc}{{Af{fAd}}}AJl}```````````````````````````````````````````````````````","D":"GMd","p":[[1,"reference"],[5,"Private",3724],[1,"unit"],[5,"MetaNameSpace",5,3725],[6,"Expr",5,3726],[5,"StructNameSpace",5,3727],[5,"PlSmallStr",3728],[1,"slice"],[5,"Arc",3729],[6,"PolarsError",3730],[6,"Result",3731],[6,"Selector",5,3732],[10,"Into",3733],[5,"ArrayNameSpace",5,3734],[5,"ListNameSpace",5,3735],[1,"bool"],[10,"AsRef",3733],[10,"FunctionOutputField",5,3736],[5,"SpecialEq",5,3736],[6,"Column",3737],[17,"Output"],[6,"Option",3738],[10,"Fn",3739],[10,"Send",3740],[10,"Sync",3740],[0,"mut"],[6,"VisitRecursion",3741],[10,"FnMut",3739],[6,"FunctionExpr",5,3742],[1,"i64"],[6,"DataType",3743],[5,"SortOptions",3744],[5,"SortMultipleOptions",3744],[5,"FieldsMapper",5,3745],[5,"Field",3746],[10,"ColumnsUdf",5,3736],[10,"Any",3747],[6,"AggExpr",5,3726],[5,"Vec",3748],[1,"str"],[1,"u64"],[5,"BinaryNameSpace",1841,3749],[6,"Operator",5,3726],[10,"Clone",3750],[1,"array"],[1,"i32"],[10,"RenameAliasFn",5,3736],[5,"UserDefinedFunction",5,3751],[10,"ColumnBinaryUdf",5,3736],[6,"CastOptions",3752],[5,"CategoricalNameSpace",5,3753],[5,"When",5,3754],[5,"Then",5,3754],[5,"ChainedWhen",5,3754],[5,"ChainedThen",5,3754],[6,"LazySerde",5,3726],[6,"Excluded",5,3726],[6,"BitwiseFunction",5,3755],[6,"BitwiseAggFunction",5,3755],[6,"BooleanFunction",5,3756],[6,"CategoricalFunction",5,3757],[6,"TemporalFunction",5,3758],[6,"PowFunction",5,3759],[6,"StringFunction",5,3760],[6,"StructFunction",5,3761],[5,"DatetimeArgs",5,3762],[5,"DurationArgs",5,3762],[5,"RollingCovOptions",5,3763],[5,"StrptimeOptions",5,3763],[5,"JoinOptions",5,3763],[6,"WindowType",5,3763],[6,"WindowMapping",5,3763],[6,"NestedType",5,3763],[5,"UnpivotArgsDSL",5,3763],[17,"Item"],[10,"IntoIterator",3764],[1,"u8"],[10,"ExprEvalExtension",5,3765],[1,"usize"],[1,"f64"],[10,"IntoVec",3766],[5,"Duration",3042,3767],[6,"ClosedWindow",3768],[6,"TimeUnit",3769],[10,"BinaryUdfOutputField",5,3736],[10,"Deserializer",3770],[10,"Deserialize",3770],[5,"Series",3771],[6,"DslPlan",3042,3772],[6,"NullBehavior",3773],[5,"DateLikeNameSpace",1863,3774],[10,"PartialEq",3775],[10,"Sized",3740],[10,"ListNameSpaceExtension",5,3776],[5,"EWMOptions",3777],[6,"FillNullStrategy",3778],[5,"Formatter",3779],[5,"Error",3779],[10,"UdfSchema",5,3780],[1,"u32"],[1,"f32"],[1,"i8"],[1,"u16"],[1,"i16"],[6,"InequalityOperator",3781],[6,"RangeFunction",3782],[6,"ArrayFunction",3783],[6,"ListFunction",3784],[6,"BusinessFunction",3785],[6,"BinaryFunction",3786],[5,"String",3787],[5,"FunctionOptions",3788],[5,"Schema",3789],[6,"Context",3772],[10,"Hasher",3790],[6,"InterpolationMethod",3791],[10,"IntoListNameSpace",5,3776],[10,"Display",3779],[6,"ClosedInterval",3792],[5,"ExprNameNameSpace",5,3793],[10,"Literal",3042,3794],[10,"FnOnce",3739],[5,"SuperTypeOptions",3795],[5,"PythonUdfExpression",2417,3796],[5,"UnitVec",3797],[1,"tuple"],[6,"QuantileMethod",3798],[5,"RankOptions",3042,3799],[5,"RollingGroupOptions",3042,3800],[5,"RollingOptionsFixedWindow",3801],[5,"Float64Type",3802],[5,"ChunkedArray",3803],[10,"Copy",3740],[5,"RollingOptionsDynamicWindow",3804],[6,"SearchSortedSide",3805],[10,"Serializer",3806],[10,"Serialize",3806],[6,"IsSorted",3807],[5,"StringNameSpace",2482,3808],[6,"ListToStructArgs",3809],[5,"CompactString",3810],[6,"ToCompactStringError",3810],[5,"TypeId",3747],[6,"Roll",3811],[6,"NonExistent",3812],[6,"RollingFunction",2226,3813],[6,"RollingFunctionBy",2264,3814],[6,"TrigonometricFunction",2297,3815],[5,"DataFrame",3816],[8,"PolarsResult",3730],[5,"LazyFrame",2550],[10,"IntoParallelIterator",3817],[5,"UnionArgs",3042,3788],[5,"PythonFunction",2417,3818],[5,"PyAny",3819],[5,"Py",3820],[5,"PythonGetOutput",2417,3796],[1,"char"],[5,"Node",3821],[6,"IR",3822],[5,"Arena",3821],[6,"AExpr",3823],[5,"LazyGroupBy",2550],[5,"OptFlags",2550,3824],[5,"JoinBuilder",2550],[10,"AnonymousScan",3042,3825],[5,"ScanArgsAnonymous",2550,3826],[8,"SchemaRef",3827],[8,"IdxSize",3828],[5,"InProcessQuery",2550,3829],[8,"PlHashMap",3830],[5,"LazyCsvReader",2550,3831],[5,"ScanArgsIpc",2550,3832],[5,"LazyJsonLineReader",2550,3833],[5,"ScanArgsParquet",2550,3834],[10,"LazyFileListReader",2550,3835],[5,"CloudOptions",3836],[6,"JoinCoalesce",3837],[5,"DynamicGroupOptions",3042,3800],[6,"JoinType",3042,3837],[5,"Iter",3838],[5,"IterNames",3838],[5,"JoinArgs",3042,3837],[10,"IntoLazy",2550],[8,"AllowedOptimizations",2550,3824],[5,"Path",3839],[5,"PathBuf",3839],[6,"ScanSources",3840],[5,"RowIndex",3841],[8,"Schema",3827],[8,"PyObject",3820],[5,"CsvWriterOptions",3042,3842],[5,"IpcWriterOptions",3042,3843],[5,"JsonWriterOptions",3042,3844],[5,"ParquetWriteOptions",3042,3845],[5,"IRPlan",3822],[6,"SinkType",3788],[6,"UniqueKeepStrategy",3816],[6,"JoinValidation",3042,3837],[8,"NonZeroUsize",3846],[6,"CsvEncoding",3847],[6,"NullValues",3847],[6,"Tz",3848],[6,"RankMethod",3042,3799],[6,"LiteralValue",3042,3794],[5,"AnonymousScanOptions",3042,3788],[6,"Ordering",3775],[6,"AnyValue",3849],[10,"PolarsTemporalGroupby",3042,3800],[6,"GroupsProxy",3850],[5,"Null",3042,3794],[5,"AnonymousScanArgs",3042,3825],[5,"IpcWriter",3843],[10,"Write",3851],[5,"ParquetWriter",3852],[5,"NaiveDateTime",3853],[8,"OpaqueColumnUdf",5],[15,"Quantile",1729],[15,"Min",1729],[15,"Max",1729],[15,"IsBetween",2150],[15,"Any",2150],[15,"All",2150],[15,"SortBy",1739],[15,"Filter",1739],[15,"Cast",1739],[15,"Sort",1739],[15,"Gather",1739],[15,"RenameAlias",1739],[15,"Ternary",1739],[15,"Function",1739],[15,"Window",1739],[15,"AnonymousFunction",1739],[15,"Slice",1739],[15,"BinaryExpr",1739],[15,"QCut",2153],[15,"Entropy",2153],[15,"Log",2153],[15,"Hist",2153],[15,"Cut",2153],[15,"Correlation",2153],[15,"Round",2153],[15,"TopK",2153],[15,"TopKBy",2153],[15,"RoundSF",2153],[15,"EwmMeanBy",2153],[15,"Clip",2153],[15,"BackwardFill",2153],[15,"ForwardFill",2153],[15,"Random",2153],[15,"GatherEvery",2153],[15,"ValueCounts",2153],[15,"Rank",2153],[15,"EwmMean",2153],[15,"EwmStd",2153],[15,"EwmVar",2153],[15,"ReplaceStrict",2153],[15,"CumCount",2153],[15,"CumSum",2153],[15,"CumProd",2153],[15,"CumMin",2153],[15,"CumMax",2153],[15,"ConcatHorizontal",2198],[15,"ConcatVertical",2198],[15,"ExtractGroups",2198],[15,"JsonDecode",2198],[15,"PadStart",2198],[15,"PadEnd",2198],[15,"SplitExact",2198],[15,"Contains",2198],[15,"Find",2198],[15,"Replace",2198],[15,"DatetimeFunction",2218],[15,"CorrCov",2261],[15,"GroupBy",3669],[15,"Union",3669],[15,"Sort",3669],[15,"Scan",3669],[15,"ExtContext",3669],[15,"DataFrameScan",3669],[15,"IR",3669],[15,"Select",3669],[15,"HStack",3669],[15,"MapFunction",3669],[15,"Cache",3669],[15,"Filter",3669],[15,"Distinct",3669],[15,"Slice",3669],[15,"Sink",3669],[15,"Join",3669],[15,"HConcat",3669],[15,"PythonScan",3669],[15,"Range",3721]],"r":[[8,3726],[23,3734],[32,3736],[35,3755],[36,3755],[38,3756],[45,3757],[46,3753],[50,3754],[51,3754],[55,3736],[57,3736],[78,3762],[90,3762],[101,3726],[106,3726],[107,3765],[108,3793],[116,3745],[117,3793],[127,3742],[128,3736],[134,3736],[149,3776],[165,3763],[172,3726],[179,3735],[180,3776],[195,3725],[214,3763],[221,3726],[222,3726],[234,3759],[246,3736],[258,3763],[267,3732],[279,3736],[287,3760],[294,3763],[296,3761],[297,3727],[305,3758],[307,3754],[329,3780],[332,3763],[335,3751],[340,3754],[343,3763],[344,3763],[392,3854],[396,3855],[403,3855],[406,3856],[410,3857],[412,3858],[427,3859],[429,3859],[435,3860],[436,3861],[438,3857],[440,3754],[528,3862],[535,3861],[538,3857],[635,3855],[636,3854],[637,3854],[638,3863],[639,3863],[640,3863],[641,3863],[650,3864],[652,3855],[656,3855],[661,3858],[662,3762],[663,3858],[664,3858],[826,3857],[828,3854],[829,3854],[830,3762],[935,3857],[981,3855],[984,3863],[1060,3857],[1107,3854],[1146,3858],[1147,3858],[1205,3861],[1207,3861],[1217,3857],[1220,3857],[1224,3794],[1234,3856],[1245,3857],[1248,3857],[1256,3861],[1260,3855],[1261,3861],[1264,3855],[1265,3861],[1273,3861],[1277,3855],[1304,3861],[1306,3857],[1319,3864],[1326,3857],[1329,3861],[1333,3855],[1337,3865],[1350,3864],[1351,3864],[1431,3864],[1439,3857],[1445,3861],[1449,3855],[1456,3754],[1459,3858],[1643,3857],[1698,3754],[1841,3749],[1862,3753],[1863,3774],[1937,3755],[1938,3755],[1940,3756],[1944,3757],[1994,3742],[2059,3759],[2099,3760],[2107,3761],[2112,3758],[2145,3742],[2146,3742],[2147,3742],[2148,3742],[2149,3742],[2220,3757],[2224,3759],[2231,3813],[2268,3814],[2312,3815],[2341,3762],[2342,3762],[2343,3854],[2344,3855],[2346,3855],[2347,3856],[2348,3858],[2349,3859],[2350,3859],[2351,3860],[2352,3861],[2353,3861],[2354,3855],[2355,3854],[2357,3854],[2359,3863],[2360,3863],[2363,3863],[2364,3863],[2365,3864],[2366,3855],[2367,3855],[2368,3858],[2369,3858],[2370,3762],[2371,3858],[2372,3858],[2375,3854],[2376,3854],[2377,3762],[2378,3855],[2379,3863],[2382,3854],[2383,3858],[2384,3858],[2385,3861],[2386,3861],[2387,3856],[2388,3861],[2389,3861],[2390,3861],[2394,3861],[2399,3861],[2400,3864],[2401,3861],[2402,3855],[2403,3865],[2404,3864],[2405,3864],[2408,3864],[2409,3861],[2410,3858],[2411,3858],[2417,3796],[2418,3796],[2419,3866],[2421,3818],[2422,3796],[2423,3796],[2482,3808],[2544,3751],[2550,3824],[2558,3829],[2561,3831],[2562,3835],[2565,3833],[2567,3824],[2574,3826],[2575,3832],[2576,3834],[3042,3825],[3043,3825],[3044,3788],[3052,3842],[3059,3772],[3060,3767],[3062,3800],[3080,3843],[3082,3837],[3083,3837],[3084,3837],[3085,3844],[3087,3794],[3088,3794],[3094,3794],[3095,3794],[3101,3845],[3102,3800],[3105,3799],[3106,3799],[3108,3800],[3124,3788],[3525,3867]],"b":[[669,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[670,"impl-Default-for-SpecialEq%3CArc%3Cdyn+ColumnBinaryUdf%3E%3E"],[671,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[760,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[761,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[762,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[763,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[764,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[833,"impl-Expr"],[834,"impl-PartialEq-for-Expr"],[838,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[839,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[946,"impl-Debug-for-Expr"],[947,"impl-Display-for-Expr"],[950,"impl-Display-for-Operator"],[951,"impl-Debug-for-Operator"],[953,"impl-Debug-for-BitwiseFunction"],[954,"impl-Display-for-BitwiseFunction"],[956,"impl-Debug-for-BooleanFunction"],[957,"impl-Display-for-BooleanFunction"],[958,"impl-Display-for-CategoricalFunction"],[959,"impl-Debug-for-CategoricalFunction"],[960,"impl-Debug-for-TemporalFunction"],[961,"impl-Display-for-TemporalFunction"],[962,"impl-Debug-for-PowFunction"],[963,"impl-Display-for-PowFunction"],[964,"impl-Debug-for-StringFunction"],[965,"impl-Display-for-StringFunction"],[966,"impl-Display-for-StructFunction"],[967,"impl-Debug-for-StructFunction"],[968,"impl-Display-for-FunctionExpr"],[969,"impl-Debug-for-FunctionExpr"],[998,"impl-From%3CAggExpr%3E-for-Expr"],[999,"impl-From%3Cu8%3E-for-Expr"],[1000,"impl-From%3Cbool%3E-for-Expr"],[1001,"impl-From%3Cu32%3E-for-Expr"],[1002,"impl-From%3Cf64%3E-for-Expr"],[1003,"impl-From%3Cf32%3E-for-Expr"],[1004,"impl-From%3C%26str%3E-for-Expr"],[1006,"impl-From%3Ci8%3E-for-Expr"],[1007,"impl-From%3Cu64%3E-for-Expr"],[1008,"impl-From%3Ci32%3E-for-Expr"],[1009,"impl-From%3Ci64%3E-for-Expr"],[1010,"impl-From%3Cu16%3E-for-Expr"],[1011,"impl-From%3Ci16%3E-for-Expr"],[1016,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1017,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1018,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1019,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1020,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1021,"impl-From%3CBitwiseFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1022,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1023,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1024,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1025,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1026,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1027,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1037,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[1038,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[1040,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[1041,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[1052,"impl-From%3CPlSmallStr%3E-for-Selector"],[1054,"impl-From%3C%26str%3E-for-Selector"],[1055,"impl-From%3CExpr%3E-for-Selector"],[1056,"impl-From%3CString%3E-for-Selector"],[1079,"impl-Expr"],[1080,"impl-Hash-for-Expr"],[1389,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[1390,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[1391,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[1392,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[1393,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[2247,"impl-Display-for-RollingFunction"],[2248,"impl-Debug-for-RollingFunction"],[2283,"impl-Display-for-RollingFunctionBy"],[2284,"impl-Debug-for-RollingFunctionBy"],[2327,"impl-Debug-for-TrigonometricFunction"],[2328,"impl-Display-for-TrigonometricFunction"],[2600,"impl-Flags-for-OptFlags"],[2601,"impl-OptFlags"],[2738,"impl-Debug-for-OptFlags"],[2739,"impl-Binary-for-OptFlags"],[2740,"impl-UpperHex-for-OptFlags"],[2741,"impl-Octal-for-OptFlags"],[2742,"impl-LowerHex-for-OptFlags"],[2746,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[2747,"impl-From%3CDslPlan%3E-for-LazyFrame"],[2757,"impl-Flags-for-OptFlags"],[2758,"impl-OptFlags"],[3000,"impl-LazyCsvReader"],[3001,"impl-LazyFileListReader-for-LazyCsvReader"],[3002,"impl-LazyFileListReader-for-LazyJsonLineReader"],[3003,"impl-LazyJsonLineReader"],[3019,"impl-LazyFileListReader-for-LazyCsvReader"],[3020,"impl-LazyCsvReader"],[3021,"impl-LazyJsonLineReader"],[3022,"impl-LazyFileListReader-for-LazyJsonLineReader"],[3385,"impl-Display-for-Duration"],[3386,"impl-Debug-for-Duration"],[3389,"impl-Debug-for-JoinType"],[3390,"impl-Display-for-JoinType"],[3391,"impl-Debug-for-JoinValidation"],[3392,"impl-Display-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKIKDgEEABMAGQAVADAAAgA1AAIAOQAAADsAEwBQAAoAXAAIAGYAAwBsAAAAbgAZAIkAGwCmAAMAqwAIALUADgDFABUA3AAGAOQAKAAOAQkAGQEQACsBBwA1ARoAUQEDAFYBAABYASsAhQEBAIsBAACOAQEAkgEAAJgBAACaAQAApQEAAKgBAACvAQEAsgEBALcBAAC6AQAAxAFKABECAAATAgAAFQIBABsCAAAiAlkAgAIAAJoCDQCpAmUAEQMAABMDJAA5AwAAOwMAAEEDAABDAxYAWwM4AJwDAACgAwEApgMAAKwDAACvAyYA1wMAAOcDBgDvAwUA+AMMAA4EAQARBAEAGAQAAB0EAAAfBAIAIwQAACUEAAAqBAEALwQEADcEAAA5BBMAUAQBAFMEAABVBCQApAQCAKgEAQCsBAAAvwQAAMcEAADUBAAA1wQFAOAEAADjBAAA6AQAAPQEAAD3BAIA/wQCAAMFAwAMBQEAEAUCABUFAAAXBQEAHQUAACQFAAAmBQEALQUAAC8FAAA3BQEAPQUAAD8FAABBBQAARgUCAGAFBQBnBRwAjQUAAJQFAACbBQAAoAUAAKIFAQClBQAAqwUBALEFAACzBQAAtQUCALwFHgDcBQoA6wVJADcGAAA6BjIAeAYAAHoGAAB8BiYApgYBAKsGAAC4BgAAvAYBAMEGEwDXBgAA2QYAANsGAQDeBgEA4QYGAOkGSAAzBwMAOAcCAD0HAgBDBwMASwcBAFQHAgBaBwAAXAcAAGkHAAB4BwMAgAdJAcsIAQDOCB8A7wgBAPIIJwAbCQEAHgkHACoJAAA5CQAARgkBAE0JAQBYCQIAXAkDAGUJAwBtCQYAdQkBAHgJGwCXCQQAnwkTALQJAwC7CQIAvwkAAMIJAADHCQIAzAkBAOwJAwD/CQMABgoBAA8KAgATCgkAIAoAACIKAAApCgAALQoUAEMKAQBIChoAZwoBAGsKAABwCgAAdAoYAJIKAwCXCgYArgoAALAKAQCzCgQAuwoBAMYKAADNCgIA1QoBANgKDADzCgAA+woAAP0KAQACCwEABQsAAAcLAAALCwAAEAsDABULBQAeCwEAJAsDADALAwA1CwEAOgsDAD8LAABCCwAASwsAAFALAQBaCwEAXQsIAGcLHwCJCwAAiwsAAI4LAQCRCwkAnAsAAJ8LAQCpCwEAsgsBALoLAQC9CwAAzAsAAM8LAADaCwEA4QsHAOwLAADvCwEA8gsAAPQLAwD6CwAA/QsAAAEMAwAJDAAACwwGABUMAgAZDAAAHAwKACgMAgAtDAAALwwAADUMEwBMDFoAqwyLADgNEwBRDQAAXA0AAGANAABiDREAdQ0AAHgNEQCcDQMAoQ0CAKUNAACoDQMArw0FALYNAQC6DQAAvQ0CAMENAQDFDQAAxw0BAMwNFQDjDXYAWw4EAGEOKwA="}],["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPPKKPPIFGKPGGPPIPPPPPKNNNNHNNENNHNNNNNNNNNNNNNNNNNNNNNONNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNONNNHNONONNNNNNNNNNNNNNNNNNNNONNNNNNEEPKPPGKKNMMMNNHHHNNNHHHHNNNNNNNNNNNNNNHHNNHHHHHHHHHNHHNNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","","contains_chunked","","ends_with","","ends_with_chunked","","list","scatter","size_bytes","","starts_with","","starts_with_chunked","","strings","AsList","ListNameSpaceImpl","as_list","join_literal","","join_many","","lst_arg_max","","lst_arg_min","","lst_concat","","lst_get","","lst_join","","lst_lengths","","lst_max","","lst_mean","","lst_median","","lst_min","","lst_n_unique","","lst_reverse","","lst_shift","","lst_slice","","lst_sort","","lst_std","","lst_sum","","lst_unique","","lst_unique_stable","","lst_var","","same_type","","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","CoalesceColumns","Cross","CrossJoin","DataFrameJoinOps","Full","Inner","InnerJoinIds","JoinArgs","JoinCoalesce","JoinDispatch","JoinSpecific","JoinType","JoinValidation","KeepColumns","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","Right","SeriesJoin","__clone_box","","","","_coalesce_full_join","_create_left_df_from_slice","","_finish_join","_full_join_from_series","","_join_suffix_name","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","coalesce","","cross_join","","cross_join_dfs","","default","","","default_join_ids","deref","","","","deref_mut","","","","drop","","","","eq","","","","equivalent","","","","","","","","fmt","","","","","","from","","","","","full_join","hash","","","","hash_join_inner","","hash_join_outer","","how","init","","","","inner_join","into","","","","is_asof","is_cross","is_ie","is_valid_join","join","join_nulls","left_join","needs_checks","new","private_left_join_multiple_keys","should_coalesce","slice","suffix","","to_owned","","","","to_string","","try_from","","","","try_into","","","","try_to_compact_string","","type_id","","","","validation","vzip","","","","with_coalesce","with_suffix","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesSealed","__clone_box","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","clone_to_uninit","coalesce_columns","convert_to_unsigned_index","count_ones","count_zeros","default","deref","deref_mut","drop","ensure_sorted_arg","","eq","equivalent","","fmt","from","hash","init","into","is_positive_idx_uncertain","is_positive_idx_uncertain_col","is_sorted","","leading_ones","leading_zeros","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","sum_horizontal","to_owned","trailing_ones","trailing_zeros","try_from","try_into","type_id","value_counts","","vzip"],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[25,"polars_ops::chunked_array::list"],[74,"polars_ops::chunked_array::strings"],[76,"polars_ops::frame"],[80,"polars_ops::frame::join"],[240,"polars_ops::prelude"],[242,"polars_ops::series"],[301,"polars_ops::chunked_array::binary"],[302,"polars_core::datatypes"],[303,"polars_ops::chunked_array::binary::namespace"],[304,"polars_ops::chunked_array::scatter"],[305,"polars_utils::index"],[306,"polars_core::series"],[307,"polars_error"],[308,"core::marker"],[309,"core::option"],[310,"core::iter::traits::collect"],[311,"polars_ops::chunked_array::list::namespace"],[312,"polars_core::datatypes::aliases"],[313,"polars_core::frame::column"],[314,"polars_core::chunked_array::ops::sort::options"],[315,"polars_core::frame"],[316,"dyn_clone::sealed"],[317,"polars_utils::pl_str"],[318,"polars_ops::frame::join::hash_join"],[319,"polars_ops::frame::join::args"],[320,"polars_ops::frame::join::cross_join"],[321,"core::fmt"],[322,"core::convert"],[323,"core::hash"],[324,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[325,"polars_arrow::array::primitive"],[326,"alloc::string"],[327,"core::result"],[328,"compact_str"],[329,"core::any"],[330,"polars_ops::series::ops::arg_min_max"],[331,"polars_ops::series::ops"],[332,"polars_core::chunked_array::ops::search_sorted"],[333,"polars_ops::series::ops::various"],[334,"polars_ops::frame::join::general"],[335,"polars_ops::series::ops::clip"],[336,"polars_ops::series::ops::horizontal"],[337,"polars_ops::series::ops::index"],[338,"polars_ops::series::ops::bitwise"],[339,"polars_ops::series::ops::negate"],[340,"polars_ops::series::ops::not"],[341,"polars_ops::series::ops::int_range"]],"i":"```````bh0000000`A`111111```BbBf000000000000000000000000000000000000000000000`Ch```Cj``DjDl``00````1``10`Dn0001`Df321`Dd0`00`1432143214321432143241E`000253`25432543254325432255443325443322543Ej3654F`0004476514765666514154`4444476565476547656547654476544``Gf`00```0Gb0Gd22```222````2222Gh033333333``00`````````3``333003","f":"```````{{{d{b}}}{{d{f}}}}{{{d{h}}{d{{l{j}}}}}n}0{{{d{h}}{d{f}}}n}01100`{{A`{d{{l{Ab}}}}e}{{Af{Ad}}}Ah{{An{}{{Aj{{Al{c}}}}}}}}{{{d{h}}}B`}03322```{{{d{Bb}}}{{d{Bd}}}}{{{d{Bf}}{d{Bh}}Bj}{{Af{Bl}}}}0{{{d{Bf}}{d{Bl}}Bj}{{Af{Bl}}}}0{{{d{Bf}}}Bn}000{{{d{Bf}}{d{{l{C`}}}}}{{Af{Bd}}}}0{{{d{Bf}}CbBj}{{Af{Ad}}}}03322{{{d{Bf}}}{{Af{Ad}}}}0{{{d{Bf}}}Ad}00011{{{d{Bf}}}{{Af{Bn}}}}0{{{d{Bf}}}Bd}0{{{d{Bf}}{d{C`}}}{{Af{Bd}}}}0{{{d{Bf}}CbCd}Bd}0{{{d{Bf}}Cf}{{Af{Bd}}}}0{{{d{Bf}}j}Ad}077{{{d{Bf}}}{{Af{Bd}}}}00011{{{d{Bf}}Bd}Bd}0`{{{d{Ch}}}{{d{Bl}}}}```{{{d{Cj}}}{{d{Cl}}}}````````````````````````{{dCn}D`}000{{Cl{d{{l{Db}}}}{d{{l{Db}}}}{Al{Db}}{d{Cl}}}Cl}{{{d{Dd}}{d{{l{Ab}}}}BjBjBj}Cl}0`{{{d{Dd}}{d{Cl}}{d{Ad}}{d{Ad}}Df}{{Af{Cl}}}}0{{{d{Bh}}{d{Bh}}}Db}{d{{d{c}}}{}}000{{{d{Dh}}}{{d{Dhc}}}{}}000{{{d{Df}}}Df}{{{d{Dj}}}Dj}{{{d{Dl}}}Dl}{{{d{Dn}}}Dn}{{d{d{Dhc}}}D`{}}000{dD`}000{{{d{Dj}}{d{Dl}}}Bj}`{{{d{E`}}{d{Cl}}{Al{Db}}{Al{{Eb{CbCd}}}}}{{Af{Cl}}}}0{{{d{E`}}{d{Cl}}{Al{{Eb{CbCd}}}}Bj}{{Af{{Eb{ClCl}}}}}}0{{}Df}{{}Dj}{{}Dn}{{}Ed}{Cd{{d{c}}}{}}000{Cd{{d{Dhc}}}{}}000{CdD`}000{{{d{Df}}{d{Df}}}Bj}{{{d{Dj}}{d{Dj}}}Bj}{{{d{Dl}}{d{Dl}}}Bj}{{{d{Dn}}{d{Dn}}}Bj}{{d{d{c}}}Bj{}}0000000{{{d{Df}}{d{DhEf}}}Eh}{{{d{Dj}}{d{DhEf}}}Eh}{{{d{Dl}}{d{DhEf}}}Eh}0{{{d{Dn}}{d{DhEf}}}Eh}0{DlDf}{cc{}}000{{{d{Ej}}{d{Cl}}ei}{{Af{Cl}}}{{El{Db}}}{{An{}{{Aj{c}}}}}{{El{Db}}}{{An{}{{Aj{g}}}}}}{{{d{Df}}{d{Dhc}}}D`En}{{{d{Dj}}{d{Dhc}}}D`En}{{{d{Dl}}{d{Dhc}}}D`En}{{{d{Dn}}{d{Dhc}}}D`En}{{{d{F`}}{d{Ad}}DnBj}{{Af{{Eb{FbBj}}}}}}0{{{d{F`}}{d{Ad}}DnBj}{{Af{{Eb{{Fd{Ab}}{Fd{Ab}}}}}}}}0`{{}Cd}0007{{}c{}}000{{{d{Dl}}}Bj}00{{{d{Dn}}{d{Dl}}}{{Af{D`}}}}{{{d{Ej}}{d{Cl}}eiDf}{{Af{Cl}}}{{El{Db}}}{{An{}{{Aj{c}}}}}{{El{Db}}}{{An{}{{Aj{g}}}}}}`;{{{d{Dn}}}Bj}>{{{d{Cl}}{d{Cl}}Bj}{{Af{Ff}}}}{{{d{Df}}}Bj}`{{{d{Df}}}{{d{Db}}}}`{dc{}}000{dFh}0{c{{Fj{e}}}{}{}}000{{}{{Fj{c}}}{}}000{d{{Fj{FlFn}}}}0{dG`}000`===={{DfDj}Df}{{Df{Al{Db}}}Df}`````````{{dCn}D`}{{{d{Gb}}}{{Al{Cd}}}}0{{{d{Gd}}}{{d{Ad}}}}{d{{d{c}}}{}}{{{d{Dh}}}{{d{Dhc}}}{}}{{{d{Ad}}{d{Ad}}{d{Ad}}}{{Af{Ad}}}}{{{d{Ad}}{d{Ad}}}{{Af{Ad}}}}0{{{d{Gf}}}Gf}{{d{d{Dhc}}}D`{}}{dD`}{{{d{{l{C`}}}}}{{Af{C`}}}}{{{d{Ad}}Cd}{{Af{Bn}}}}{{{d{Ad}}}{{Af{Ad}}}}0{{}Gf}{Cd{{d{c}}}{}}{Cd{{d{Dhc}}}{}}{CdD`}{{{d{Gh}}{d{Bh}}}{{Af{D`}}}}0{{{d{Gf}}{d{Gf}}}Bj}{{d{d{c}}}Bj{}}0{{{d{Gf}}{d{DhEf}}}{{Fj{D`Gj}}}}{cc{}}{{{d{Gf}}{d{Dhc}}}D`En}{{}Cd}{{}c{}}{{{d{Ad}}}Bj}{{{d{C`}}}Bj}{{{d{Gh}}Cf}{{Af{Bj}}}}0??{{{d{{l{C`}}}}}{{Af{{Al{C`}}}}}}00{{{d{Ad}}}{{Af{Ad}}}}0{{CbDb}{{Af{Ad}}}}2{dc{}}22{c{{Fj{e}}}{}{}}{{}{{Fj{c}}}{}}{dG`}{{{d{Gh}}BjBjDbBj}{{Af{Cl}}}}0;","D":"En","p":[[10,"AsBinary",4,301],[1,"reference"],[8,"BinaryChunked",302],[10,"BinaryNameSpaceImpl",4,303],[1,"u8"],[1,"slice"],[8,"BooleanChunked",302],[10,"ChunkedSet",4,304],[8,"IdxSize",305],[5,"Series",306],[8,"PolarsResult",307],[10,"Copy",308],[17,"Item"],[6,"Option",309],[10,"IntoIterator",310],[8,"UInt32Chunked",302],[10,"AsList",25],[8,"ListChunked",302],[10,"ListNameSpaceImpl",25,311],[1,"str"],[1,"bool"],[8,"StringChunked",302],[8,"IdxCa",312],[6,"Column",313],[1,"i64"],[1,"usize"],[5,"SortOptions",314],[10,"AsString",74],[10,"IntoDf",76],[5,"DataFrame",315],[5,"Private",316],[1,"unit"],[5,"PlSmallStr",317],[10,"JoinDispatch",80,318],[5,"JoinArgs",80,319],[0,"mut"],[6,"JoinCoalesce",80,319],[6,"JoinType",80,319],[6,"JoinValidation",80,319],[10,"CrossJoin",80,320],[1,"tuple"],[8,"ChunkJoinOptIds",80,319],[5,"Formatter",321],[8,"Result",321],[10,"DataFrameJoinOps",80],[10,"Into",322],[10,"Hasher",323],[10,"SeriesJoin",80,324],[8,"InnerJoinIds",80,319],[5,"PrimitiveArray",325],[8,"LeftJoinIds",80,319],[5,"String",326],[6,"Result",327],[5,"CompactString",328],[6,"ToCompactStringError",328],[5,"TypeId",329],[10,"ArgAgg",242,330],[10,"SeriesSealed",242,331],[6,"SearchSortedSide",242,332],[10,"SeriesMethods",242,333],[5,"Error",321]],"r":[[4,301],[5,303],[6,304],[26,311],[80,319],[81,319],[84,320],[88,319],[89,319],[90,319],[91,318],[93,319],[94,319],[97,319],[103,324],[108,334],[111,334],[114,334],[144,318],[240,80],[241,76],[243,330],[246,332],[247,333],[248,331],[255,335],[256,335],[257,335],[261,336],[262,337],[263,338],[264,338],[279,337],[280,337],[283,338],[284,338],[285,336],[286,336],[287,336],[288,339],[289,340],[290,341],[291,336],[293,338],[294,338]],"b":[[171,"impl-Debug-for-JoinType"],[172,"impl-Display-for-JoinType"],[173,"impl-Debug-for-JoinValidation"],[174,"impl-Display-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAP4AEgAAAAgACwABAA8AAgAXAA8AKwA3AGcABgBwABkAjAAkALYADADIAAMAzQAAAM8AJAD1AAUA/QACAAMBEAAVAQEAHAEOAC0BAAA="}],["polars_sql",{"t":"FNNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNNNNNNNONONNNNNNOMNNNNNNNNNNNNNNNNONNONNNMNNNNNNNNNNMNNNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","","borrow","","","borrow_mut","","","cast_to_supertypes","check_lengths","","clone","","clone_into","","clone_to_uninit","","collect_groups","contains","","default","","deref","","","deref_mut","","","drop","","","eq","equivalent","","","flags","fmt","","fmt_str","from","","","get_udf","","hash","init","","","into","","","is_elementwise","is_groups_sensitive","register","","to_owned","","try_from","","","try_into","","","type_id","","","vzip","","","all_functions","all_keywords"],"q":[[0,"polars_sql"],[32,"polars_sql::function_registry"],[107,"polars_sql::keywords"],[109,"dyn_clone::sealed"],[110,"polars_sql::context"],[111,"polars_lazy::frame"],[112,"polars_error"],[113,"alloc::string"],[114,"polars_utils::aliases"],[115,"alloc::vec"],[116,"alloc::sync"],[117,"polars_plan::dsl::expr"],[118,"core::convert"],[119,"core::result"],[120,"core::any"],[121,"polars_plan::plans::options"],[122,"polars_plan::plans"],[123,"core::fmt"],[124,"polars_plan::dsl::udf"],[125,"core::option"],[126,"core::hash"],[127,"polars_sql::sql_expr"]],"i":"`j00000000000`0000`00000`0000000Bj`0```Bf1Bl120121111212121Aj12312312312322222232123012123123220123123123123123``","f":"`{{bd}f}{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{j}}}j}{{b{b{hc}}}f{}}{bf}{{}j}{l{{b{c}}}{}}{l{{b{hc}}}{}}{lf}{{{b{hj}}{b{n}}}{{Ab{A`}}}}{cc{}}`{{{b{j}}}{{Af{AdA`}}}}{{{b{j}}}{{Ah{Ad}}}}{{}l}{{}c{}}`9{{{Af{AdA`}}}j}{{{b{hj}}{b{n}}A`}f}{{{b{j}}}{{b{{Al{Aj}}}}}}{{{b{hj}}}{{b{hAj}}}}{c{{Ab{An}}}{{B`{n}}}}{bc{}}{c{{Bb{e}}}{}{}}{{}{{Bb{c}}}{}}{bBd}{{{b{hj}}{b{n}}}f}:{{j{Al{Aj}}}j}``````{{bd}f}0{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00`{{{b{Bf}}}Bh}`{{{b{Bf}}}Bf}{{{b{Bj}}}Bj}{{b{b{hc}}}f{}}0{bf}0`{{{b{Aj}}{b{n}}}Bh}{{{b{Bl}}{b{n}}}Bh}{{}Bf}{{}Bj}{l{{b{c}}}{}}00{l{{b{hc}}}{}}00{lf}00{{{b{Bf}}{b{Bf}}}Bh}{{b{b{c}}}Bh{}}00`{{{b{Bf}}{b{hBn}}}{{Bb{fC`}}}}{{{b{Bj}}{b{hBn}}}{{Bb{fC`}}}}`{cc{}}00{{{b{Aj}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bl}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bf}}{b{hc}}}fCf}{{}l}00{{}c{}}00{{{b{Bf}}}Bh}0{{{b{hAj}}{b{n}}Cb}{{Ab{f}}}}{{{b{hBl}}{b{n}}Cb}{{Ab{f}}}}{bc{}}0{c{{Bb{e}}}{}{}}00{{}{{Bb{c}}}{}}00{bBd}00777{{}{{Ah{{b{n}}}}}}0","D":"Dd","p":[[1,"reference"],[5,"Private",109],[1,"unit"],[0,"mut"],[5,"SQLContext",0,110],[1,"usize"],[1,"str"],[5,"LazyFrame",111],[8,"PolarsResult",112],[5,"String",113],[8,"PlHashMap",114],[5,"Vec",115],[10,"FunctionRegistry",32],[5,"Arc",116],[6,"Expr",117],[10,"AsRef",118],[6,"Result",119],[5,"TypeId",120],[5,"FunctionOptions",32,121],[1,"bool"],[6,"Context",32,122],[5,"DefaultFunctionRegistry",32],[5,"Formatter",123],[5,"Error",123],[5,"UserDefinedFunction",124],[6,"Option",125],[10,"Hasher",126]],"r":[[0,110],[24,127],[33,122],[36,121]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEsACwACAAkAEQAAABoAAwAfAAAAIgAAACUAAAAnABAAOgATAFIABABaAAAAXQAOAA=="}],["polars_time",{"t":"PGFPPKKKPFCHHOOCMCHMMMECKPPPPPGKPNMNNNNNNNNNNNNNNCNNNNNNNNFRKKNNNNNNNNNNHNNONMONNMNNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","Time","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","vzip","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","","Duration","Friday","Label","Left","","Monday","None","Right","","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","","","","","","add_ms","add_ns","add_us","borrow","","","","","","","borrow_mut","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","cmp","compare","days","days_only","default","deref","","","","","","","deref_mut","","","","","","","drop","","","","","","","ensure_duration_matches_dtype","ensure_is_constant_duration","eq","","","","equivalent","","","","","","","","fmt","","","","","","from","","","","","","","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","","","","init","","","","","","","into","","","","","","","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","neg","negative","new","","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","","","","","","to_string","truncate_impl","truncate_ms","","truncate_ns","","truncate_us","","try_from","","","","","","","try_into","","","","","","","try_parse","try_parse_interval","try_to_compact_string","type_id","","","","","","","vzip","","","","","","","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[22,"polars_time::chunkedarray"],[24,"polars_time::chunkedarray::string"],[58,"polars_time::chunkedarray::string::infer"],[85,"polars_time::prelude"],[295,"polars_time::series"],[316,"polars_utils::pl_str"],[317,"chrono::naive::datetime"],[318,"polars_time::windows::duration"],[319,"polars_time::windows::group_by"],[320,"polars_core::datatypes::time_unit"],[321,"polars_arrow::legacy::time_zone"],[322,"core::option"],[323,"polars_core::chunked_array::logical::datetime"],[324,"polars_error"],[325,"polars_time::round"],[326,"polars_core::datatypes"],[327,"chrono::naive::time"],[328,"polars_core::chunked_array::logical::time"],[329,"polars_time::truncate"],[330,"polars_time::upsample"],[331,"polars_core::frame"],[332,"polars_core::utils"],[333,"dyn_clone::sealed"],[334,"polars_time::chunkedarray::string::patterns"],[335,"core::fmt"],[336,"core::hash"],[337,"core::result"],[338,"core::any"],[339,"core::clone"],[340,"polars_time::windows::bounds"],[341,"polars_time::windows::window"],[342,"core::cmp"],[343,"polars_core::datatypes::dtype"],[344,"polars_core::frame::group_by::proxy"],[345,"alloc::vec"],[346,"alloc::string"],[347,"core::ops::function"],[348,"compact_str"],[349,"polars_core::series"],[350,"polars_time::date_range"]],"i":"h``00```0````Ehf`Ah``B`Bb0```Cb0000``00Bn11111111111111`11111111`Dn``D`000000000`0000Df1112111:```EdEf`0`<10<<10`0`000`0Eb;=21<;;;En1<>32=01<>32=1<>32=1<>32=1<>32=<<<<201<>32=01<>32=01<>32=``<>32<<>>33221<<>3201<>32=====``<>3201<>32=01<>32=0<<<<<<<<<<=0=<<<===1<>32=<<<=<=<=01<>32=01<>32=<<<01<>32=01<>32=2<<``GdGh00000000000000000","f":"```````````{{bddfhj{A`{{n{l}}}}}{{Ad{Ab}}}}{{{n{d}}}Af}```{{{n{Ah}}{n{Aj}}{A`{{n{l}}}}}{{Ad{Ah}}}}`{{bAlAlfh}{{Ad{An}}}}{{{n{B`}}{A`{{n{l}}}}{n{Aj}}}{{Ad{B`}}}}{{{n{Bb}}c{n{Bd}}f}{{Ad{Bf}}}{{Bh{b}}}}0```````````{{nBj}Bl}{{{n{Bn}}}{{n{Aj}}}}{n{{n{c}}}{}}{{{n{C`}}}{{n{C`c}}}{}}{{{n{Cb}}}Cb}{{n{n{C`c}}}Bl{}}{nBl}{Cd{{n{c}}}{}}{Cd{{n{C`c}}}{}}{CdBl}{{{n{Cb}}{n{Cb}}}Af}{{n{n{c}}}Af{}}0{{{n{Cb}}{n{C`Cf}}}Ch}{cc{}}{{{n{Cb}}{n{C`c}}}BlCj}`{{}Cd}{{}c{}}{{{n{Cb}}{n{Bd}}}Af}{nc{}}{c{{Cl{e}}}{}{}}{{}{{Cl{c}}}{}}{nCn}5````{{nBj}Bl}{n{{n{c}}}{}}{{{n{C`}}}{{n{C`c}}}{}}{{{n{{D`{c}}}}}{{D`{c}}}{DbDd}}{{n{n{C`c}}}Bl{}}{nBl}{Cd{{n{c}}}{}}{Cd{{n{C`c}}}{}}{CdBl}{cc{}}{{{n{Bd}}}{{A`{Cb}}}}{{}Cd}{{}c{}}`{{{n{C`{D`{c}}}}{n{Bd}}}A`Dd}{{{n{C`Df}}{n{{Dj{Dh}}}}{A`{j}}}{{A`{c}}}{}}`{nc{}}{c{{Cl{e}}}{}{}}{{c{A`{j}}}{{Ad{{Dn{}{{Dl{e}}}}}}}{}{}}{{}{{Cl{c}}}{}}{nCn}7````````````````````````{{nBj}Bl}00000{{{n{f}}E`{A`{{n{l}}}}}{{Ad{E`}}}}00{n{{n{c}}}{}}000000{{{n{C`}}}{{n{C`c}}}{}}000000{{{n{Eb}}}Eb}{{{n{f}}}f}{{{n{h}}}h}{{{n{Ed}}}Ed}{{{n{Ef}}}Ef}{{{n{Eh}}}Eh}{{n{n{C`c}}}Bl{}}00000{nBl}00000{{{n{f}}{n{f}}}Ej}{{n{n{c}}}Ej{}}{{{n{f}}}E`}{{{n{f}}}Af}{{}Ef}{Cd{{n{c}}}{}}000000{Cd{{n{C`c}}}{}}000000{CdBl}000000{{f{n{El}}{n{Bd}}}{{Ad{Bl}}}}{{f{A`{{n{Bd}}}}{n{Bd}}}{{Ad{Bl}}}}{{{n{f}}{n{f}}}Af}{{{n{h}}{n{h}}}Af}{{{n{Ed}}{n{Ed}}}Af}{{{n{Ef}}{n{Ef}}}Af}{{n{n{c}}}Af{}}0000000{{{n{Eb}}{n{C`Cf}}}Ch}{{{n{f}}{n{C`Cf}}}Ch}0{{{n{h}}{n{C`Cf}}}Ch}{{{n{Ed}}{n{C`Cf}}}Ch}{{{n{Ef}}{n{C`Cf}}}Ch}{cc{}}000000{{{n{Eh}}E`h{A`{{n{l}}}}}{{Ad{Eb}}}}00{{{n{Eh}}Ebhj{A`{{n{l}}}}Ef}{{Ad{En}}}}{{ff{n{{Dj{E`}}}}hj{A`{l}}}{{Ad{F`}}}}{{Eh{n{{Dj{E`}}}}hj{n{{A`{Fb}}}}AfAfEf}{{Ff{F`{Fd{E`}}{Fd{E`}}}}}}{{{n{f}}{n{C`c}}}BlCj}{{{n{h}}{n{C`c}}}BlCj}{{{n{Ed}}{n{C`c}}}BlCj}{{{n{Ef}}{n{C`c}}}BlCj}{{}Cd}000000{{}c{}}0000000{{{n{f}}{A`{{n{Bd}}}}}Af}{{{n{f}}}Af}0{{{n{f}}}E`}1{{fE`}f}1{fc{}}3{E`f}{{fff}Eh}{{{n{C`En}}}{{A`{c}}}{}}`{{{n{Bd}}}f}`{{{n{f}}{n{f}}}{{A`{Ej}}}}{{{n{Eh}}E`{A`{{n{l}}}}}{{Ad{E`}}}}00{nc{}}00000{nFh}{{{n{f}}E`{A`{{n{l}}}}ceg}{{Ad{E`}}}{{Fl{E`}{{Fj{E`}}}}}{{Fl{E`}{{Fj{d}}}}}{{Fl{d}{{Fj{E`}}}}}}{{{n{f}}E`{A`{{n{l}}}}}{{Ad{E`}}}}40404{c{{Cl{e}}}{}{}}000000{{}{{Cl{c}}}{}}000000{{{n{Bd}}}{{Ad{f}}}}0{n{{Cl{FnG`}}}}{nCn}000000{{}c{}}000000{{{n{Ef}}}{{A`{Gb}}}}{{{n{f}}}E`}{{{n{f}}}Af}``{{{n{Gd}}}{{n{Gf}}}}{{{n{Gh}}}{{Ad{Gj}}}}{{{n{Gh}}}{{Ad{Gl}}}}0{{{n{Gh}}}{{Ad{Gn}}}}22112{{{n{Gh}}}{{Ad{H`}}}}322{{{n{Gh}}{n{Bd}}}{{Ad{Gf}}}}0334","D":"Gd","p":[[5,"PlSmallStr",316],[5,"NaiveDateTime",317],[5,"Duration",85,318],[6,"ClosedWindow",85,319],[6,"TimeUnit",320],[6,"Tz",321],[1,"reference"],[6,"Option",322],[8,"DatetimeChunked",323],[8,"PolarsResult",324],[1,"bool"],[10,"PolarsRound",0,325],[8,"StringChunked",326],[5,"NaiveTime",327],[8,"TimeChunked",328],[10,"PolarsTruncate",0,329],[10,"PolarsUpsample",0,330],[1,"str"],[5,"DataFrame",331],[10,"IntoVec",332],[5,"Private",333],[1,"unit"],[10,"AsString",24],[0,"mut"],[6,"Pattern",24,334],[1,"usize"],[5,"Formatter",335],[8,"Result",335],[10,"Hasher",336],[6,"Result",337],[5,"TypeId",338],[5,"DatetimeInfer",58],[10,"Clone",339],[10,"PolarsNumericType",326],[10,"StrpTimeParser",58],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",58],[1,"i64"],[5,"Bounds",85,340],[6,"Label",85,319],[6,"StartBy",85,319],[5,"Window",85,341],[6,"Ordering",342],[6,"DataType",343],[5,"BoundsIter",85,341],[8,"GroupsSlice",344],[8,"TimeZone",343],[5,"Vec",345],[1,"tuple"],[5,"String",346],[17,"Output"],[10,"Fn",347],[5,"CompactString",348],[6,"ToCompactStringError",348],[1,"u32"],[10,"AsSeries",295],[5,"Series",349],[10,"TemporalMethods",295],[8,"Int32Chunked",326],[8,"Int8Chunked",326],[8,"BooleanChunked",326],[8,"Int16Chunked",326]],"r":[[1,319],[2,318],[5,325],[6,329],[7,330],[9,341],[11,350],[12,350],[18,350],[22,24],[30,334],[86,340],[87,341],[88,319],[91,318],[93,319],[101,319],[103,295],[107,341],[176,318],[177,318],[207,319],[208,319]],"b":[[191,"impl-Display-for-Duration"],[192,"impl-Debug-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAIBFwAAAAkADQAFABQAAAAXABgAMQACADUAEgBJAAEATAAUAGIACQBtAFcAzAAAAM4AAQDSAAoA5AABAOgAAgDsAAAA7wACAPMAAQD4AAgAAgEAAAQBAAAGASQALwEAAA=="}],["polars_utils",{"t":"EECCCCCCCCCCCCCCCQQQQCCCCCCCCQCCCQCCCCCCCCCCCQCRKMMHHHRKIIIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMHHNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHHFNNNNNNNNNNNNNNNNNNNNNNNKNNNNNNKMHHHFKFNNNNNNNNNNNNNNMNNNNNNNHNNNHNNNNNNNNNNNNNNNNNNNNNNNNECFGPFPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNIKFIKRIKFKNNNNHNNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNNNHHHKNNCNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHKNNNNMMTFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTRKMMHHFNNNNNNNNNNNNNNNNNNNTTFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNJSFFKNNNNNNNNNNNNNHNNNNNNNNNNNNNNNHNMNNNNNMNNNNNKKKKMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNNKKKRKKMMMHMMMM","n":["IdxSize","NullableIdxSize","abs_diff","algebraic_ops","aliases","arena","binary_search","cache","cardinality_sketch","cell","chunks","clmul","cpuid","fixedringbuffer","float","floor_divmod","fmt","format_list","format_list_container","format_pl_smallstr","format_tuple","functions","hashing","idx_map","idx_vec","index","io","itertools","macros","matches_any_order","mem","min_max","mmap","no_call_const","nulls","ord","partitioned","pl_str","priority","python_function","slice","sort","sync","sys","total_ord","unitvec","vec","Abs","AbsDiff","abs_diff","max_abs_diff","alg_add_f64","alg_mul_f64","alg_sum_f64","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","PlRandomState","PlRandomStateQuality","new","","","","","with_capacity","","","","","Arena","Node","add","borrow","","borrow_mut","","clear","clone","","clone_into","","clone_to_uninit","","cmp","compare","default","","deref","","deref_mut","","deserialize","","drop","","duplicate","eq","equivalent","","fmt","","from","","get","get_many_mut","get_mut","get_node","get_unchecked","hash","init","","into","","is_empty","last_node","len","new","partial_cmp","pop","replace","replace_with","serialize","","swap","take","to_owned","","try_from","","try_into","","try_replace_with","type_id","","version","vzip","","with_capacity","ExponentialSearch","exponential_search_by","find_first_ge_index","find_first_gt_index","partition_point_exponential","FastCachedFunc","FastFixedCache","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","drop","","eval","from","","get","get_mut","get_or_insert_with","init","","insert","into","","new","","to_owned","try_from","","try_get_or_insert_with","try_into","","type_id","","vzip","","CardinalitySketch","borrow","borrow_mut","clone","clone_into","clone_to_uninit","combine","default","deref","deref_mut","drop","estimate","from","init","insert","into","new","to_owned","try_from","try_into","type_id","vzip","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","","","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","vzip","Chunks","as_slice","borrow","borrow_mut","chunk_size","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","fmt","from","init","into","into_iter","new","next","next_back","size_hint","skip_in_place","to_owned","try_from","try_into","type_id","vzip","clmul64","portable_clmul64","portable_prefix_xorsum","portable_prefix_xorsum_inclusive","prefix_xorsum","prefix_xorsum_inclusive","has_fast_bmi2","is_avx512_enabled","FixedRingBuffer","as_slices","borrow","borrow_mut","capacity","deref","deref_mut","drop","","fill_repeat","from","init","into","is_empty","is_full","len","new","pop_front","push","remaining_capacity","try_from","try_into","type_id","vzip","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","nan_value","FloorDivMod","wrapping_floor_div_mod","arc_map","range_portion","try_arc_map","BytesHash","DirtyHash","HashPartitioner","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","deref","","deref_mut","","dirty_hash","","drop","","eq","equivalent","","fmt","folded_multiply","from","","hash","hash_to_partition","","init","","into","","is_null","new","","num_partitions","peel_total_ord","to_owned","","to_total_ord","tot_eq","tot_hash","try_from","","try_into","","type_id","","unwrap_inner","vzip","","BytesIndexMap","bytes_idx_map","BytesIndexMap","Entry","Occupied","OccupiedEntry","Vacant","VacantEntry","borrow","","","","borrow_mut","","","","default","deref","","","","deref_mut","","","","drop","","","","entry","from","","","","get_index_unchecked","index","","init","","","","insert","into","","","","into_mut","is_empty","iter_hash_keys","len","new","reserve","try_from","","","","try_into","","","","type_id","","","","vzip","","","","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clear","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","drop","","eq","equivalent","","extend","fmt","from","","","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","vzip","with_capacity","AtomicIdxSize","Bounded","ChunkId","IdxSize","Indexable","Item","NonZeroIdxSize","NullCount","NullableIdxSize","ToIdx","borrow","","borrow_mut","","check_bounds","clone","","clone_into","","clone_to_uninit","","deref","","deref_mut","","drop","","eq","equivalent","","extract","fmt","","from","","","get","get_unchecked","idx","init","","inner","inner_mut","into","","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","","null_count","store","to_idx","to_opt","to_owned","","try_from","","try_into","","type_id","","vzip","","_limit_path_len_io_err","create_file","open_file","Itertools","all_equal","collect_vec","enumerate_idx","","enumerate_u32","eq_by_","partial_cmp_by_","try_collect","try_collect_vec","EnumerateIdx","borrow","borrow_mut","clone","clone_into","clone_to_uninit","count","deref","deref_mut","drop","fmt","from","init","into","into_iter","into_py_dict_bound","len","new","next","next_back","nth","nth_back","size_hint","to_owned","try_from","try_into","type_id","vzip","madvise_populate_read","madvise_sequential","madvise_willneed","prefetch_l2","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","EMPTY","MMapSemaphore","MemReader","MemSlice","Mmap","advise","advise_range","as_ptr","as_ref","","","borrow","","","","borrow_mut","","","","clone","","clone_into","","clone_to_uninit","","default","deref","","","","","","deref_mut","","","","drop","","","","","ensure_not_mapped","fmt","","","","from","","","","","","","from_bytes","","from_file","from_mmap","from_reader","from_slice","from_static","from_vec","","init","","","","into","","","","lock","make_mut","map","new","new_from_file","new_from_file_with_options","position","prefetch","read","read_slice","remaining_len","remap","seek","slice","to_owned","","to_vec","total_len","try_from","","","","try_into","","","","type_id","","","","unlock","vzip","","","","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","vzip","EMPTY","EMPTY_REF","PlSmallStr","as_ref","","","","as_str","borrow","","borrow_mut","clone","clone_into","clone_to_uninit","cmp","compare","default","deref","","deref_mut","deserialize","drop","eq","equivalent","","fmt","","from","","","","","from_iter","","","","","","","","from_static","from_str","from_string","hash","init","into","into_string","partial_cmp","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","write_char","write_fmt","write_str","Priority","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","compare","deref","deref_mut","drop","eq","equivalent","","fmt","from","init","into","partial_cmp","to_owned","try_from","try_into","type_id","vzip","PYTHON3_VERSION","PYTHON_SERDE_MAGIC_BYTE_MARK","PySerializeWrap","PythonFunction","TrySerializeToBytes","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","deref","","deref_mut","","deserialize","","deserialize_pyobject_bytes_maybe_cloudpickle","drop","","eq","equivalent","","fmt","from","","","init","","into","","serialize","","serialize_pyobject_with_cloudpickle_fallback","to_owned","try_deserialize_bytes","","try_from","","try_into","","try_serialize_to_bytes","","type_id","","vzip","","Extrema","Slice2Uninit","SliceAble","SortedSlice","as_uninit","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deref_unchecked","drop","eq","equivalent","","fmt","from","","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","vzip","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","vzip","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","clone_to_uninit","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","vzip","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","inplace_zip_filtermap","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[47,"polars_utils::abs_diff"],[51,"polars_utils::algebraic_ops"],[54,"polars_utils::aliases"],[72,"polars_utils::arena"],[141,"polars_utils::binary_search"],[146,"polars_utils::cache"],[185,"polars_utils::cardinality_sketch"],[207,"polars_utils::cell"],[228,"polars_utils::chunks"],[254,"polars_utils::clmul"],[260,"polars_utils::cpuid"],[262,"polars_utils::fixedringbuffer"],[286,"polars_utils::float"],[293,"polars_utils::floor_divmod"],[295,"polars_utils::functions"],[298,"polars_utils::hashing"],[352,"polars_utils::idx_map"],[354,"polars_utils::idx_map::bytes_idx_map"],[420,"polars_utils::idx_vec"],[465,"polars_utils::index"],[531,"polars_utils::io"],[534,"polars_utils::itertools"],[544,"polars_utils::itertools::enumerate_idx"],[572,"polars_utils::mem"],[577,"polars_utils::min_max"],[584,"polars_utils::mmap"],[689,"polars_utils::nulls"],[694,"polars_utils::ord"],[696,"polars_utils::partitioned"],[716,"polars_utils::pl_str"],[775,"polars_utils::priority"],[799,"polars_utils::python_function"],[847,"polars_utils::slice"],[858,"polars_utils::sort"],[860,"polars_utils::sync"],[888,"polars_utils::sys"],[903,"polars_utils::total_ord"],[954,"polars_utils::vec"],[968,"num_traits"],[969,"core::cmp"],[970,"core::marker"],[971,"core::fmt"],[972,"core::iter::traits::collect"],[973,"core::clone"],[974,"core::result"],[975,"serde::de"],[976,"core::option"],[977,"core::hash"],[978,"core::default"],[979,"core::ops::function"],[980,"serde::ser"],[981,"core::any"],[982,"core::borrow"],[983,"alloc::sync"],[984,"core::ops::range"],[985,"core::iter::traits::iterator"],[986,"alloc::vec"],[987,"core::slice::iter"],[988,"polars_error"],[989,"std::path"],[990,"std::io::error"],[991,"std::fs"],[992,"core::ops::arith"],[993,"num_traits::cast"],[994,"num_traits::identities"],[995,"pyo3::marker"],[996,"pyo3::types::dict"],[997,"pyo3::instance"],[998,"core::iter::traits::exact_size"],[999,"core::iter::traits::double_ended"],[1000,"memmap2"],[1001,"memmap2::advice"],[1002,"polars_utils::mmap::private"],[1003,"bytes::bytes"],[1004,"std::io"],[1005,"hashbrown::map"],[1006,"hashbrown::raw_entry"],[1007,"std::ffi::os_str"],[1008,"core::convert"],[1009,"alloc::string"],[1010,"compact_str"],[1011,"alloc::boxed"],[1012,"alloc::borrow"],[1013,"polars_utils::python_function::serde_wrap"],[1014,"core::mem::maybe_uninit"],[1015,"rayon_core::thread_pool"]],"i":"```````````````````````````````````````````````d`00```ACj```````0AjAlAClACn43210``B`Bd10110101010001010101011000010111111001011111011101110101011011011`Dn``0``EjEd10000010101011000010010100100101010`F`00000000000000000000`Fd0000000000000000000`Fh000000000000000000000000`````````Fl0000000000000000000000`Fn00000`G```````GfGh101010101010Gj2212222`212`121212211221222212121221````H``0`Gn1HdHf23102231023102310223102102310023101222222310231023102310``Hj000000000000000000000000000000000000000000`````Ij````IfIh10`101010101010111010110221101010In122021J`2Jb44343434343````Jl0`000000`Jn00000000000000000000000000``````Ld00000Ll````Lf0Lj12012Ln123013030303223301230123011`230123330013033003302301230122201103000203303023012301230122301Il0`00```Nd000000000000000000Nl0`00000000000000000000000000000000000000000000000000000000`A@b0000000000000000000000`````A@fA@d10000101010`100000100101010`0A@h12121012121````A@nAAb`AAd0AAf0```AAl00000000000000000000000000``AAn000000000000ABl````0`ABb0``00000000000000000000000101AAhABd11ABf022133333```AC```00ACb`ACdACf1ACh","f":"`````````````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}{{AbAb}Ab}0{cAb{{Af{}{{Ad{Ab}}}}}}````````22222{Ahc{}}{Ah{{Aj{ce}}}{}{}}{Ah{{Al{c}}}{}}22``{{{Bb{An{B`{c}}}}c}Bd{}}{Bb{{Bb{c}}}{}}0{{{Bb{An}}}{{Bb{Anc}}}{}}0{{{Bb{An{B`{c}}}}}Bf{}}{{{Bb{Bd}}}Bd}{{{Bb{{B`{c}}}}}{{B`{c}}}Bh}{{Bb{Bb{Anc}}}Bf{}}0{BbBf}0{{{Bb{Bd}}{Bb{Bd}}}Bj}{{Bb{Bb{c}}}Bj{}}{{}Bd}{{}{{B`{c}}}{}}{Ah{{Bb{c}}}{}}0{Ah{{Bb{Anc}}}{}}0{c{{Bl{Bd}}}Bn}{c{{Bl{{B`{e}}}}}BnC`}{AhBf}0{{{Bb{An{B`{c}}}}Bd}BdBh}{{{Bb{Bd}}{Bb{Bd}}}Cb}{{Bb{Bb{c}}}Cb{}}0{{{Bb{Bd}}{Bb{AnCd}}}Cf}{{{Bb{{B`{c}}}}{Bb{AnCd}}}Cfl}{cc{}}0{{{Bb{{B`{c}}}}Bd}{{Bb{c}}}{}}{{{Bb{An{B`{c}}}}{Ch{Bd}}}{{Ch{{Bb{Anc}}}}}{}}{{{Bb{An{B`{c}}}}Bd}{{Bb{Anc}}}{}}{{{Bb{{B`{c}}}}{Bb{c}}}{{Cj{Bd}}}{}}3{{{Bb{Bd}}{Bb{Anc}}}BfCl}{{}Ah}0{{}c{}}0{{{Bb{{B`{c}}}}}Cb{}}{{{Bb{An{B`{c}}}}}{{Cj{Bd}}}{}}{{{Bb{{B`{c}}}}}Ah{}}{{}{{B`{c}}}{}}{{{Bb{Bd}}{Bb{Bd}}}{{Cj{Bj}}}}{{{Bb{An{B`{c}}}}}{{Cj{c}}}{}}{{{Bb{An{B`{c}}}}Bdc}c{}}{{{Bb{An{B`{c}}}}Bde}BfCn{{Db{c}{{D`{c}}}}}}{{{Bb{Bd}}c}BlDd}{{{Bb{{B`{c}}}}e}BlDfDd}{{{Bb{An{B`{c}}}}BdBd}Bf{}}{{{Bb{An{B`{c}}}}Bd}cCn}{Bbc{}}0{c{{Bl{e}}}{}{}}0{{}{{Bl{c}}}{}}0{{{Bb{An{B`{c}}}}Bde}{{Bl{Bf`}}}Cn{{Dh{c}{{D`{{Bl{c`}}}}}}}}{BbDj}0{{{Bb{{B`{c}}}}}Dl{}}{{}c{}}0{Ah{{B`{c}}}{}}`{{{Bb{Dn}}e}{{Bl{AhAh}}}{}{{Dh{{Bb{c}}}{{D`{Bj}}}}}}{{{Bb{{E`{c}}}}c}AhEb}0{{{Bb{Dn}}e}Ah{}{{Dh{{Bb{c}}}{{D`{Cb}}}}}}``{Bb{{Bb{c}}}{}}0{{{Bb{An}}}{{Bb{Anc}}}{}}0{{{Bb{{Ed{ce}}}}}{{Ed{ce}}}BhBh}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{}{{Ed{ce}}}{EfEh}{}}{Ah{{Bb{c}}}{}}0{Ah{{Bb{Anc}}}{}}0{AhBf}0{{{Bb{An{Ej{ceg}}}}cCb}e{EfEhBh}j{{Dh{c}{{D`{e}}}}}}{cc{}}0{{{Bb{{Ed{eg}}}}{Bb{c}}}{{Cj{{Bb{g}}}}}{EfEhEl}{{En{c}}EfEh}{}}{{{Bb{An{Ed{eg}}}}{Bb{c}}}{{Cj{{Bb{Ang}}}}}{EfEhEl}{{En{c}}EfEh}{}}{{{Bb{An{Ed{eg}}}}{Bb{c}}i}{{Bb{Ang}}}{}{{En{c}}EfEh}{}{{Db{{Bb{e}}}{{D`{g}}}}}}{{}Ah}0{{{Bb{An{Ed{ce}}}}ce}{{Bb{Ane}}}{EfEh}{}}{{}c{}}0{{gAh}{{Ej{ceg}}}{EfEhBh}j{{Dh{c}{{D`{e}}}}}}{Ah{{Ed{ce}}}{EfEh}{}}{Bbc{}}{c{{Bl{e}}}{}{}}0{{{Bb{An{Ed{eg}}}}{Bb{c}}k}{{Bl{{Bb{Ang}}i}}}{}{{En{c}}EfEh}{}{}{{Db{{Bb{e}}}{{D`{{Bl{gi}}}}}}}}{{}{{Bl{c}}}{}}0{BbDj}077`{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{F`}}}F`}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{{Bb{AnF`}}{Bb{F`}}}Bf}{{}F`}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{AhBf}{{{Bb{F`}}}Ah}{cc{}}{{}Ah}{{{Bb{AnF`}}Fb}Bf}{{}c{}}8{Bbc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}4`{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{}{{Fd{c}}}Cn}>=<{Ffc{}}{c{{Fd{c}}}{}}<{{{Bb{{Fd{c}}}}}{}El}{{{Bb{An{Fd{c}}}}}{{Bb{Anc}}}El}=;{{{Fd{c}}}c{}}3{{}};:9=`{{{Bb{{Fh{c}}}}}{{Bb{{E`{c}}}}}{}}98{{{Bb{{Fh{c}}}}}Ah{}}{{{Bb{{Fh{c}}}}}{{Fh{c}}}Bh}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{AhBf}{{{Bb{{Fh{c}}}}{Bb{AnCd}}}Cfl}{cc{}}{{}Ah}{{}c{}}0{{{Bb{{E`{c}}}}Ah}{{Fh{c}}}{}}{{{Bb{An{Fh{c}}}}}{{Cj{e}}}{}{}}0{{{Bb{{Fh{c}}}}}{{Fj{Ah{Cj{Ah}}}}}{}}{{{Bb{An{Fh{c}}}}Ah}Bf{}}{Bbc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}8{{FbFb}Fb}0{FbFb}000{{}Cb}0`{{{Bb{{Fl{c}}}}}{{Fj{{Bb{{E`{c}}}}{Bb{{E`{c}}}}}}}{}}{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{{Fl{c}}}}}Ah{}}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{{{Bb{An{Fl{c}}}}}Bf{}}{AhBf}{{{Bb{An{Fl{c}}}}cAh}Ahj}{cc{}}{{}Ah}{{}c{}}{{{Bb{{Fl{c}}}}}Cb{}}09{Ah{{Fl{c}}}{}}{{{Bb{An{Fl{c}}}}}{{Cj{c}}}{}}{{{Bb{An{Fl{c}}}}c}{{Cj{Bf}}}{}}<{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}7`{{}Cb}0{{{Bb{Fn}}}Cb}10{{}Fn}`{{G`G`}{{Fj{G`G`}}}}{{{Gb{c}}e}{{Gb{c}}}Bh{{Dh{c}{{D`{c}}}}}}{{AhAh{Gd{Ah}}}{{Gd{Ah}}}}{{{Gb{c}}g}{{Bl{{Gb{c}}e}}}Bh{}{{Dh{c}{{D`{{Bl{ce}}}}}}}}```{Bb{{Bb{c}}}{}}0{{{Bb{An}}}{{Bb{Anc}}}{}}0{{{Bb{Gf}}}Gf}{{{Bb{Gh}}}Gh}{{Bb{Bb{Anc}}}Bf{}}0{BbBf}0{Ah{{Bb{c}}}{}}0{Ah{{Bb{Anc}}}{}}0{{{Bb{Gj}}}Fb}{{{Bb{Gf}}}Fb}{AhBf}0{{{Bb{Gf}}{Bb{Gf}}}Cb}{{Bb{Bb{c}}}Cb{}}0{{{Bb{Gf}}{Bb{AnCd}}}Cf}{{FbFb}Fb}{cc{}}0{{{Bb{Gf}}{Bb{Anc}}}BfCl}{{FbAh}Ah}{{{Bb{Gh}}Fb}Ah}{{}Ah}0{{}c{}}0{{{Bb{Gf}}}Cb}{{{Cj{{Bb{{E`{Gl}}}}}}Fb}Gf}{{AhFb}Gh}{{{Bb{Gh}}}Ah}{ce{}{}}{Bbc{}}0{{{Bb{Gf}}}c{}}{{{Bb{Gf}}{Bb{Gf}}}Cb}<{c{{Bl{e}}}{}{}}0{{}{{Bl{c}}}{}}0{BbDj}0{Gfc{}}<<````````{Bb{{Bb{c}}}{}}000{{{Bb{An}}}{{Bb{Anc}}}{}}000{{}{{Gn{c}}}{}}{Ah{{Bb{c}}}{}}000{Ah{{Bb{Anc}}}{}}000{AhBf}000{{{Bb{An{Gn{c}}}}Fb{Bb{{E`{Gl}}}}}{{H`{c}}}{}}{cc{}}000{{{Bb{{Gn{c}}}}Hb}{{Fj{Fb{Bb{{E`{Gl}}}}{Bb{c}}}}}{}}{{{Bb{{Hd{c}}}}}Hb{}}{{{Bb{{Hf{c}}}}}Hb{}}{{}Ah}000{{{Hf{c}}c}{{Bb{Anc}}}{}}{{}c{}}000{{{Hd{c}}}{{Bb{Anc}}}{}}{{{Bb{{Gn{c}}}}}Cb{}}{{{Bb{{Gn{c}}}}}{{`{{Hh{}{{Ad{{Fj{Fb{Bb{{E`{Gl}}}}}}}}}}}}}{}}{{{Bb{{Gn{c}}}}}Hb{}}?{{{Bb{An{Gn{c}}}}Ah}Bf{}}{c{{Bl{e}}}{}{}}000{{}{{Bl{c}}}{}}000{BbDj}0008888``{{{Bb{An{Hj{c}}}}}{{Bb{An{E`{c}}}}}{}}0{{{Bb{{Hj{c}}}}}{{Bb{{E`{c}}}}}{}}0{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{{Hj{c}}}}}Ah{}}{{{Bb{An{Hj{c}}}}}Bf{}}{{{Bb{{Hj{c}}}}}{{Hj{c}}}{}}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{}{{Hj{c}}}{}}{Ah{{Bb{c}}}{}}{{{Bb{{Hj{c}}}}}{{Bb{e}}}{}{}}{Ah{{Bb{Anc}}}{}}{AhBf}8{{{Bb{{Hj{c}}}}{Bb{{Hj{c}}}}}CbHl}{{Bb{Bb{c}}}Cb{}}0{{{Bb{An{Hj{c}}}}e}Bf{}{{Af{}{{Ad{c}}}}}}{{{Bb{{Hj{c}}}}{Bb{AnCd}}}Cfl}{{{Bb{{E`{c}}}}}{{Hj{c}}}Bh}{{{Hn{c}}}{{Hj{c}}}{}}{cc{}}{e{{Hj{c}}}{}{{Af{}{{Ad{c}}}}}}{{}Ah}{{}c{}}{{{Bb{{Hj{c}}}}}Cb{}}{{{Bb{{Hj{c}}}}}{{I`{c}}}{}}{{{Bb{An{Hj{c}}}}}{{Ib{c}}}{}}{{{Bb{{Hj{c}}}}}Ah{}}{{}{{Hj{c}}}{}}{{{Bb{An{Hj{c}}}}}{{Cj{c}}}{}}{{{Bb{An{Hj{c}}}}c}Bf{}}0{{{Bb{An{Hj{c}}}}Ah}Bf{}}{Bbc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}<{Ah{{Hj{c}}}{}}``````````{Bb{{Bb{c}}}{}}0{{{Bb{An}}}{{Bb{Anc}}}{}}0{{{Bb{{E`{Hb}}}}Hb}{{Id{Bf}}}}{{{Bb{If}}}If}{{{Bb{Ih}}}Ih}{{Bb{Bb{Anc}}}Bf{}}0{BbBf}0{Ah{{Bb{c}}}{}}0{Ah{{Bb{Anc}}}{}}0{AhBf}0{{{Bb{If}}{Bb{If}}}Cb}{{Bb{Bb{c}}}Cb{}}0{Ih{{Fj{HbHb}}}}{{{Bb{If}}{Bb{AnCd}}}Cf}{{{Bb{Ih}}{Bb{AnCd}}}Cf}{cc{}}{HbIf}1{{{Bb{{Ij{}{{Ad{c}}}}}}Ah}cIl}0{{{Bb{If}}}Hb}{{}Ah}0`{{{Bb{AnIh}}}{{Bb{AnFb}}}}{{}c{}}0{{{Bb{In}}}Cb}{{{Bb{Ih}}}Cb}{{{Bb{If}}}Cb}{{{Bb{c}}}Cb{}}{{{Bb{In}}}Ah}{{}If}{{}Ih}{{{Bb{J`}}}Ah}{{HbHb}Ih}{{JbFb}Hb}{{{Bb{If}}}{{Cj{Hb}}}}{Bbc{}}0{c{{Bl{e}}}{}{}}0{{}{{Bl{c}}}{}}0{BbDj}0??{{{Bb{Jd}}Jf}Jh}{{{Bb{Jd}}}{{Id{Jj}}}}0`{JlCb}{Jl{{Hn{c}}}{}}`{Jl{{Jn{JlHb}}}}{Jl{{Jn{JlDl}}}}{{Jlcg}CbAf{}{{Dh{e}{{D`{Cb}}}}}}{{Jlcg}{{Cj{Bj}}}Af{}{{Dh{e}{{D`{{Cj{Bj}}}}}}}}{Jl{{Bl{ce}}}{}{}}{Jl{{Bl{{Hn{c}}e}}}{}{}}`{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{{Jn{ce}}}}}{{Jn{ce}}}BhBh}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{{Jn{ce}}}AhHh{{K`{}{{D`{}}}}KbKdKfj}}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{AhBf}{{{Bb{{Jn{ce}}}}{Bb{AnCd}}}Cfll}{cc{}}{{}Ah}{{}c{}}0{Kh{{Kl{Kj}}}}{{{Bb{{Jn{ce}}}}}AhKn{{K`{}{{D`{}}}}KbKdKfj}}{c{{Jn{ce}}}{}L`}{{{Bb{An{Jn{ce}}}}}{{Cj{g}}}Hh{{K`{}{{D`{}}}}KbKdKfj}{}}{{{Bb{An{Jn{ce}}}}}{{Cj{{Fj{e}}}}}{KnLb}{{K`{}{{D`{}}}}KbKdKfj}}{{{Bb{An{Jn{ce}}}}Ah}{{Cj{g}}}Hh{{K`{}{{D`{}}}}KbKdKfj}{}}{{{Bb{An{Jn{ce}}}}Ah}{{Cj{{Fj{e}}}}}{KnLb}{{K`{}{{D`{}}}}KbKdKfj}}{{{Bb{{Jn{ce}}}}}{{Fj{Ah{Cj{Ah}}}}}Hh{{K`{}{{D`{}}}}KbKdKfj}}{Bbc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}<{{{Bb{{E`{Gl}}}}}Bf}000{{{Bb{{E`{c}}}}}{{Bb{An{E`{c}}}}}j}`{{LdLd}Ld}000{{{Bb{Ld}}{Bb{Ld}}}Cb}0`````{{{Bb{Lf}}Lh}{{Bl{BfJf}}}}{{{Bb{Lf}}LhAhAh}{{Bl{BfJf}}}}{{{Bb{Lj}}}Gl}{{{Bb{Lf}}}{{Bb{{E`{Gl}}}}}}{{{Bb{Ll}}}{{Bb{{E`{Gl}}}}}}{{{Bb{Lj}}}{{Bb{{E`{Gl}}}}}}{Bb{{Bb{c}}}{}}000{{{Bb{An}}}{{Bb{Anc}}}{}}000{{{Bb{Ll}}}Ll}{{{Bb{Ln}}}Ln}{{Bb{Bb{Anc}}}Bf{}}0{BbBf}0{{}Ll}{Ah{{Bb{c}}}{}}:0{{{Bb{Ll}}}{{Bb{c}}}{}}11{Ah{{Bb{Anc}}}{}}000{AhBf}000{{{Bb{AnLj}}}Bf}{{{Bb{Jj}}}{{Id{Bf}}}}{{{Bb{Lf}}{Bb{AnCd}}}{{Bl{BfM`}}}}{{{Bb{Ll}}{Bb{AnCd}}}Cf}{{{Bb{Ln}}{Bb{AnCd}}}Cf}{{{Bb{Lj}}{Bb{AnCd}}}Cf}{cc{}}{{{Hn{Gl}}}Ll}{MbLl}22{LlLn}31{MbLn}{{{Bb{Jj}}}{{Id{Ll}}}}{{{Gb{Lj}}}Ll}{c{{Md{Ln}}}Mf}{{{Bb{{E`{Gl}}}}}Ln}{{{Bb{{E`{Gl}}}}}Ll}8{{{Hn{Gl}}}Ln}{{}Ah}000{{}c{}}000{{{Bb{Lf}}}{{Bl{BfJf}}}}{Lf{{Bl{MhJf}}}}{c{{Bl{LfJf}}}Mj}<{{{Bb{Jj}}}{{Id{Lj}}}}{{{Bb{Jj}}Ml}{{Id{Lj}}}}{{{Bb{Ln}}}Ah}{{{Bb{Ll}}}Bf}{{{Bb{AnLn}}{Bb{An{E`{Gl}}}}}{{Md{Ah}}}}{{{Bb{AnLn}}Ah}Ll}3{{{Bb{AnLf}}AhMn}{{Bl{BfJf}}}}{{{Bb{AnLn}}N`}{{Md{Fb}}}}{{{Bb{Ll}}{Gd{Ah}}}Ll}{Bbc{}}0{Ll{{Hn{Gl}}}}8{c{{Bl{e}}}{}{}}000{{}{{Bl{c}}}{}}000{BbDj}000{{{Bb{Lf}}}{{Bl{BfJf}}}}{{}c{}}000```{{{Bb{{Il{}{{Nb{c}}}}}}}Cb{}}{{{Il{}{{Nb{c}}}}}c{}}{{{Bb{c}}{Bb{c}}}Bj{hFn}}0`{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{AhBf}{cc{}}{{}Ah}{{{Bb{{Nd{ceg}}}}}{{Bb{{E`{{Nf{ceg}}}}}}}{}{}{}}{{{Bb{An{Nd{ceg}}}}}{{Bb{An{Hn{{Nf{ceg}}}}}}}{}{}{}}<{{{Hn{{Nf{ceg}}}}}{{Nd{ceg}}}{}{}{}}{{{Bb{{Nd{ceg}}}}Fb}{{Nh{ceg}}}{}{}{}}{{{Bb{{Nd{ceg}}}}Fb}{{Fj{{Nh{ceg}}Ah}}}{}{}{}}{{{Bb{An{Nd{ceg}}}}Fb}{{Fj{{Nj{ceg}}Ah}}}{}{}{}}{{{Bb{An{Nd{ceg}}}}Fb}{{Nj{ceg}}}{}{}{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}{{}c{}}```{{{Bb{Nl}}}{{Bb{{E`{Gl}}}}}}{{{Bb{Nl}}}{{Bb{Nn}}}}{{{Bb{Nl}}}{{Bb{Jd}}}}{{{Bb{Nl}}}{{Bb{O`}}}}00{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{Nl}}}Nl}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{{Bb{Nl}}{Bb{Nl}}}Bj}{{Bb{Bb{c}}}Bj{}}{{}Nl}{Ah{{Bb{c}}}{}}{{{Bb{Nl}}}{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{c{{Bl{Nl}}}Bn}{AhBf}{{{Bb{Nl}}{Bb{c}}}Cb{{Ob{O`}}El}}{{Bb{Bb{c}}}Cb{}}0{{{Bb{Nl}}{Bb{AnCd}}}Cf}0{{{Bb{Od}}}Nl}{{{Bb{O`}}}Nl}{OfNl}{OdNl}{cc{}}{cNl{{Af{}{{Ad{{Bb{Oh}}}}}}}}{cNl{{Af{}{{Ad{Od}}}}}}{cNl{{Af{}{{Ad{{Oj{O`}}}}}}}}{cNl{{Af{}{{Ad{{Ol{O`}}}}}}}}{cNl{{Af{}{{Ad{Oh}}}}}}{cNl{{Af{}{{Ad{{Bb{O`}}}}}}}}{cNl{{Af{}{{Ad{Nl}}}}}}{cNl{{Af{}{{Ad{{Bb{Nl}}}}}}}};;9{{{Bb{Nl}}{Bb{Anc}}}BfCl}{{}Ah}{{}c{}}{NlOd}{{{Bb{Nl}}{Bb{Nl}}}{{Cj{Bj}}}}{{{Bb{Nl}}c}BlDd}{Bbc{}}{BbOd}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{Bb{{Bl{OfOn}}}}{BbDj}9{{{Bb{AnNl}}Oh}Cf}{{{Bb{AnNl}}A@`}Cf}{{{Bb{AnNl}}{Bb{O`}}}Cf}`{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{{A@b{ce}}}}}{{A@b{ce}}}BhBh}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{{Bb{{A@b{ce}}}}{Bb{{A@b{ce}}}}}Bj{EbEh}{}}{{Bb{Bb{c}}}Bj{}}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{AhBf}{{{Bb{{A@b{ce}}}}{Bb{{A@b{ce}}}}}CbEh{}}{{Bb{Bb{c}}}Cb{}}0{{{Bb{{A@b{ce}}}}{Bb{AnCd}}}Cfll}{cc{}}{{}Ah}{{}c{}}{{{Bb{{A@b{ce}}}}{Bb{{A@b{ce}}}}}{{Cj{Bj}}}{EbEh}{}}{Bbc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}5`````{Bb{{Bb{c}}}{}}0{{{Bb{An}}}{{Bb{Anc}}}{}}0{{{Bb{A@d}}}A@d}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{Ah{{Bb{c}}}{}}0{Ah{{Bb{Anc}}}{}}0{c{{Bl{{A@f{e}}}}}BnA@h}{c{{Bl{A@d}}}Bn}{{{Bb{{E`{Gl}}}}}{{Id{c}}}{{A@l{A@j}}}}{AhBf}0{{{Bb{A@d}}{Bb{A@d}}}Cb}{{Bb{Bb{c}}}Cb{}}0{{{Bb{A@d}}{Bb{AnCd}}}Cf}{cc{}}0{A@jA@d}{{}Ah}0{{}c{}}0{{{Bb{{A@f{{Bb{c}}}}}}e}BlA@hDd}{{{Bb{A@d}}c}BlDd}{{{Bb{A@j}}}{{Id{{Hn{Gl}}}}}}{Bbc{}}{{{Bb{{E`{Gl}}}}}{{Id{A@h}}}}{{{Bb{{E`{Gl}}}}}{{Id{A@d}}}}{c{{Bl{e}}}{}{}}0{{}{{Bl{c}}}{}}0{{{Bb{A@h}}}{{Id{{Hn{Gl}}}}}}{{{Bb{A@d}}}{{Id{{Hn{Gl}}}}}}{BbDj}0;;````{{{Bb{A@n}}}{{Bb{{E`{{AA`{c}}}}}}}{}}{{{Bb{AAb}}}Cb}{{{Bb{{E`{Gl}}}}}Fb}{{{Bb{AAd}}}{{Cj{{Bb{c}}}}}{}}0{{{Bb{AAf}}{Gd{Ah}}}AAf}0{{e{Bb{An{Hn{Gl}}}}Ah}{{Bb{An{E`{g}}}}}{AAhj}{{Af{}{{Ad{c}}}}}{Kbj}}{{{Bb{AAj}}{Bb{{E`{{Fj{HbHb}}}}}}{Bb{An{Hn{Hb}}}}}Bf}`{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{{AAl{c}}}}}{{AAl{c}}}{}}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{{{Bb{{AAl{c}}}}}{{Bb{c}}}{}}{AhBf}{{{Bb{{AAl{c}}}}{Bb{{AAl{c}}}}}CbHl}{{Bb{Bb{c}}}Cb{}}0{{{Bb{{AAl{c}}}}{Bb{AnCd}}}Cfl}{cc{}}{{}{{AAl{c}}}{}}0{{{Bb{{AAl{c}}}}}{}{}}{{}Ah}{{}c{}}{{{Bb{{AAl{c}}}}}Cb{}}44{Bbc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}5``{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{AhBf}{{{Bb{AAn}}}Fb}?<;876;```````54{AB`AB`}{AbAb}{{{Bb{{ABb{c}}}}}{{ABb{c}}}Bh}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{{Bb{{ABb{c}}}}{Bb{{ABb{c}}}}}BjAAh}{{Bb{Bb{c}}}Bj{}}:9{{{Bb{{ABb{c}}}}}FbGj}9{{{Bb{{ABb{c}}}}{Bb{{ABb{c}}}}}CbABd}{{Bb{Bb{c}}}Cb{}}0{cc{}}{{{Bb{{ABb{c}}}}{Bb{{ABb{c}}}}}CbAAh}0{{{Bb{{ABb{c}}}}{Bb{Ane}}}BfABfCl}{{}Ah}{{}c{}}{{{Bb{{ABb{c}}}}}CbIl}447{{{Bb{{ABb{c}}}}{Bb{{ABb{c}}}}}{{Cj{Bj}}}AAh}{ce{}{}}{Bbc{}}{{{Bb{{ABl{}{{ABh{c}}{ABj{e}}}}}}}c{EfEh}{}}{{{Bb{AAh}}{Bb{AAh}}}Bj}{{{Bb{ABd}}{Bb{ABd}}}Cb}{{{Bb{AAh}}{Bb{AAh}}}Cb}0{{{Bb{ABf}}{Bb{Anc}}}BfCl}{{{Bb{{E`{ABf}}}}{Bb{Anc}}}BfCl}223{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}{{{ABb{c}}}eIl{}}>``````{{{Bb{{AC`{}{{ABn{c}}}}}}g}{{Hn{e}}}{}{}{{Dh{{Bb{c}}}{{D`{e}}}}}}{{{AC`{}{{ABn{c}}}}g}{{Hn{e}}}{}{}{{Dh{c}{{D`{e}}}}}}{{{Bb{AnACb}}Ahc}Bfj}{{{Bb{An{Hn{c}}}}{Bb{An{Hn{e}}}}g}Bf{}{}{{Dh{ce}{{D`{{Cj{{Fj{ce}}}}}}}}}}{ACd{{Fj{AhAh}}}}{{{Bb{AnACf}}c}Bf{}}{{{Bb{ACd}}}{{Fj{AhAh}}}}{{AhAb}ACh}","D":"ABb","p":[[17,"Abs"],[10,"AbsDiff",47],[10,"Num",968],[10,"PartialOrd",969],[10,"Copy",970],[10,"Debug",971],[10,"Send",970],[10,"Sync",970],[1,"f64"],[17,"Item"],[10,"IntoIterator",972],[1,"usize"],[8,"PlHashMap",54],[8,"PlHashSet",54],[0,"mut"],[5,"Arena",72],[1,"reference"],[5,"Node",72],[1,"unit"],[10,"Clone",973],[6,"Ordering",969],[6,"Result",974],[10,"Deserializer",975],[10,"Deserialize",975],[1,"bool"],[5,"Formatter",971],[8,"Result",971],[1,"array"],[6,"Option",976],[10,"Hasher",977],[10,"Default",978],[17,"Output"],[10,"FnOnce",979],[10,"Serializer",980],[10,"Serialize",980],[10,"FnMut",979],[5,"TypeId",981],[1,"u32"],[10,"ExponentialSearch",141],[1,"slice"],[10,"Ord",969],[5,"FastFixedCache",146],[10,"Hash",977],[10,"Eq",969],[5,"FastCachedFunc",146],[10,"Sized",970],[10,"Borrow",982],[5,"CardinalitySketch",185],[1,"u64"],[5,"SyncUnsafeCell",207],[1,"never"],[5,"Chunks",228],[1,"tuple"],[5,"FixedRingBuffer",262],[10,"IsFloat",286],[10,"FloorDivMod",293],[5,"Arc",983],[5,"Range",984],[5,"BytesHash",298],[5,"HashPartitioner",298],[10,"DirtyHash",298],[1,"u8"],[5,"BytesIndexMap",354],[6,"Entry",354],[8,"IdxSize",465],[5,"OccupiedEntry",354],[5,"VacantEntry",354],[10,"Iterator",985],[5,"UnitVec",420],[10,"PartialEq",969],[5,"Vec",986],[5,"Iter",987],[5,"IterMut",987],[8,"PolarsResult",988],[5,"NullableIdxSize",465],[5,"ChunkId",465],[10,"Indexable",465],[10,"IsNull",689],[10,"Bounded",465],[10,"NullCount",465],[10,"ToIdx",465],[5,"Path",989],[5,"Error",990],[6,"PolarsError",988],[5,"File",991],[10,"Itertools",534],[5,"EnumerateIdx",544],[10,"Add",992],[10,"FromPrimitive",993],[10,"AddAssign",992],[10,"One",994],[5,"Python",995],[5,"PyDict",996],[5,"Bound",997],[10,"ExactSizeIterator",998],[10,"Zero",994],[10,"DoubleEndedIterator",999],[10,"MinMax",577],[5,"Mmap",584,1000],[6,"Advice",1001],[5,"MMapSemaphore",584],[5,"MemSlice",584,1002],[5,"MemReader",584],[5,"Error",971],[5,"Bytes",1003],[8,"Result",990],[10,"Read",1004],[5,"MmapMut",1000],[10,"MmapAsRawDesc",1000],[5,"MmapOptions",1000],[5,"RemapOptions",1000],[6,"SeekFrom",1004],[17,"Inner"],[5,"PartitionedHashMap",696],[5,"HashMap",1005],[5,"RawEntryBuilder",1006],[5,"RawEntryBuilderMut",1006],[5,"PlSmallStr",716],[5,"OsStr",1007],[1,"str"],[10,"AsRef",1008],[5,"String",1009],[5,"CompactString",1010],[1,"char"],[5,"Box",1011],[6,"Cow",1012],[6,"ToCompactStringError",1010],[5,"Arguments",971],[5,"Priority",775],[5,"PythonFunction",799],[5,"PySerializeWrap",799,1013],[10,"TrySerializeToBytes",799,1013],[8,"PyObject",997],[10,"From",1008],[10,"Slice2Uninit",847],[20,"MaybeUninit",1014],[10,"SortedSlice",847],[10,"Extrema",847],[10,"SliceAble",847],[10,"TotalOrd",903],[5,"ThreadPool",1015],[5,"SyncPtr",860],[5,"MemInfo",888],[1,"f32"],[5,"TotalOrdWrap",903],[10,"TotalEq",903],[10,"TotalHash",903],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",903],[17,"ItemIn"],[10,"ConvertVec",954],[10,"ResizeFaster",954],[10,"IntoRawParts",954],[10,"PushUnchecked",954],[10,"CapacityByFactor",954],[10,"InitHashMaps",54],[8,"PlIndexMap",54],[8,"PlIndexSet",54]],"r":[[0,465],[1,465],[352,354],[587,1002],[588,1000],[799,1013],[801,1013],[803,1013]],"b":[[444,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"],[445,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"],[631,"impl-From%3CVec%3Cu8%3E%3E-for-MemSlice"],[632,"impl-From%3CBytes%3E-for-MemSlice"],[719,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[720,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[721,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[722,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[741,"impl-Display-for-PlSmallStr"],[742,"impl-Debug-for-PlSmallStr"],[743,"impl-From%3C%26String%3E-for-PlSmallStr"],[744,"impl-From%3C%26str%3E-for-PlSmallStr"],[745,"impl-From%3CCompactString%3E-for-PlSmallStr"],[746,"impl-From%3CString%3E-for-PlSmallStr"],[748,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[749,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[750,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[751,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[752,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[753,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[754,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[755,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADcDWgAAAAkACwBdAGsAAABtAAEAcAACAHUAGgCSAAAAlAAPAKYABQCuAAsAuwAKAMcAAADKAAUA0QABANQAAwDcAAAA4QADAOYACgDyAAAA9AASAAkBBgASAQAAFAEDABoBBAAgAQoALAEYAEcBAQBKAQEATgEBAFEBEQBkARoAhAEGAI8BAQCSARMApwEXAMABAQDDAQYAywEnAPQBAAD2AQAA+AEEAP8BFwAYAgAAGgIEACICCQAtAgAALwIDADQCCABCAggAUAImAHgCAQB8AgAAgAICAIcCAwCSAgMAlwICAJsCAACdAgEAoAIMAK4CCAC5AgUAwAICAMQCCgDQAhsA7QIMAPsCDAAJAw0AGAMAABoDBQAhAwAAIwMAACUDEwA7AwIAQAMZAFsDAABeAwYAZgMEAGwDAwBxAwAAcwMGAHsDBACCAwAAhAMEAI0DAwCTAwsAoAMDAKUDGgDBAwIAxQMAAMcDAQA="}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[427006,213965,56292,84358,9595,3387,8680,30076]}